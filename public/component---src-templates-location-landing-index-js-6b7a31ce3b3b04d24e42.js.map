{"version":3,"sources":["webpack:///./src/components/library/PageTabs/styles.scss.js","webpack:///./src/components/library/PageTabs/index.js","webpack:///./src/templates/Location/Landing/layout.js","webpack:///./src/templates/Location/Landing/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/helpers/hexToRGB.js","webpack:///./src/components/library/SuggestionList/styles.scss.js","webpack:///./src/components/library/SuggestionList/index.js"],"names":["PageTabsStyle","styled","div","_templateObject","Root","Size","props","GradientColor","hexToRGB","Padding","Button","PageTabs","_ref","List","Location","Label","BaseUrl","TextColor","Affix","react_default","a","createElement","styles_scss","className","map","item","index","DestinationPath","slug","LocationPath","pathname","LocationPathWithSlash","matchPath","destination","currentLocation","slice","key","Btn","AddClass","BgColor","name","Destination","console","log","PageWrapper","children","LocationData","LocationTheme","about","PageTheme","Layout","Color","Background","PrimaryColor","Primary","SecondaryColor","Secondary","TertiaryColor","Tertiary","SubLevelPage","SimpleHero","Flex","Block","maxWidth","Breadcrumb","Crumbs","geography","state","toLowerCase","headline","IconClass","IconPosition","IconFas","contactDetails","location","address","meta","maps","External","library_PageTabs","nearby","Tint","SuggestionList","Theme","Nightsky","TemplateLayout","_ref2","layout_PageWrapper","SimpleSection","Snow","BgQuery","BgAlt","FluidHeight","Gutter","LocationLandingTemplate","_ref3","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","query","LocationLandingPage","layout","data","allLocationsJson","edges","node","SlideSectionStyle","Base","Sm","Black","Inner","SectionInnerStyle","_templateObject2","Grid","Left","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","Headline","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Fragment","Helmet","rel","type","href","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","WidgetContent","WrapperLock","createGlobalStyle","Media","Width","Md","WrapperRelease","BlockStyle","AlignItems","Style","css","BgTint","SiteWidth","ImgMatch","src","AltText","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SidebarWidgetStyle","FadeIn","White","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","SimpleSectionStyle","Right","SimpleSection_styles_scss","WidgetSection","Slider","WidgetSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","allQuestionCategoriesJson","title","BgImageFile","coverImage","BgImageAltText","tags","includes","Slug","_234893462","QuestionListings","QuestionListings_QuestionCards","SimpleHeroStyle","Hero","BreadCrumb","Link","Bread","crumb","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_4273665236","QuestionFooter","HideCategories","QuestionFooter_BrowseCategories","SocialStripStyle","Margin","span","SocialStrip","target","hex","alpha","r","parseInt","g","b","SuggestionListStyle"],"mappings":"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","file":"component---src-templates-location-landing-index-js-6b7a31ce3b3b04d24e42.js","sourcesContent":["// <PageTabsStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const PageTabsStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size});\n      font-size: 1.5rem;\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.8rem;\n          font-weight: normal;\n          padding: 0;\n          box-shadow: none;\n          opacity: .6;\n\n          &:hover {\n            box-shadow: none;\n            opacity: 1;\n          }\n        }\n\n        &.active {\n          .btn-inner {\n            font-weight: bold;\n            opacity: 1;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTabsStyle;\n//////////////////////////////////////////////////////////////////////\n","// PageTabs Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport PageTabsStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst PageTabs = ({\n  List,\n  Label,\n  Location,\n  BaseUrl,\n  TextColor,\n  Padding,\n  Affix,\n}) => {\n  return (\n    <PageTabsStyle className=\"page-tabs\" Padding={Padding}>\n      <ul>\n        {List.map((item, index) => {\n          // Creating slugs.\n          const DestinationPath = Affix\n            ? BaseUrl + item.slug + Affix\n            : BaseUrl + item.slug;\n          const LocationPath = Location.pathname;\n          const LocationPathWithSlash = Location.pathname + '/';\n\n          // Helper function to match our locations.\n          function matchPath(destination, currentLocation) {\n\n            // If location & destination match:\n            if (destination == currentLocation) {\n              let className = 'active';\n              return className;\n            } else {\n\n              // Check and see if our destination matches without the\n              // last `/` of the url. I.e. `locations/reno vs locations/reno/`\n              if (destination == currentLocation.slice(0, -1)) {\n                let className = 'active';\n                return className;\n              } else {\n\n                // Then inactive:\n                let className = 'inactive';\n                return 'inactive';\n              }\n            }\n          }\n\n          // Return PageTabs.\n          return (\n            <li key={index}>\n              <Btn\n                AddClass={matchPath(DestinationPath, LocationPathWithSlash)}\n                BgColor=\"none\"\n                Label={item.name}\n                Destination={DestinationPath}\n                TextColor={TextColor}\n              />\n              {console.log('DestinationPath: ' + DestinationPath)}\n              {console.log('LocationPath: ' + LocationPath)}\n              {console.log('LocationPathWithSlash: ' + LocationPathWithSlash)}\n              {console.log(\n                'ClassName: ' +\n                  matchPath(DestinationPath, LocationPathWithSlash)\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </PageTabsStyle>\n  );\n};\n\nexport default PageTabs;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\nimport PageTabs from 'components/library/PageTabs';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// PageWrapper component for page theming.\nconst PageWrapper = ({ children, LocationData, Location }) => {\n  const LocationTheme = LocationData.about.PageTheme;\n\n  return (\n    <Layout\n      BgColor={LocationTheme.Color.Background}\n      PrimaryColor={LocationTheme.Color.Primary}\n      SecondaryColor={LocationTheme.Color.Secondary}\n      TertiaryColor={LocationTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={LocationTheme.Color.Background}\n        PrimaryColor={LocationTheme.Color.Primary}\n        SecondaryColor={LocationTheme.Color.Secondary}\n        TertiaryColor={LocationTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[2, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <Block maxWidth={0.5}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: 'locations/',\n                  Label: 'Locations',\n                },\n                {\n                  Destination: 'locations/',\n                  Label: LocationData.geography.state,\n                },\n                {\n                  Destination:\n                    'locations/' +\n                    LocationData.geography.state.toLowerCase() +\n                    '/' +\n                    LocationData.slug,\n                  Label: LocationData.name,\n                },\n              ]}\n              TextColor={LocationTheme.Color.Primary}\n            />\n            <h1 className=\"h2\">{LocationData.about.headline}</h1>\n            <Btn\n              IconClass=\"plus\"\n              Label=\"View Menu\"\n              BgColor={LocationTheme.Color.Primary}\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={\n                '/menu/' +\n                LocationData.geography.state.toLowerCase() +\n                '/' +\n                LocationData.slug\n              }\n              IconPosition=\"left\"\n              IconFas\n            />\n            <Btn\n              className=\"btn-address\"\n              IconClass=\"map-marker-alt\"\n              Label={LocationData.contactDetails.location.address}\n              BgColor=\"none\"\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={LocationData.meta.maps}\n              IconPosition=\"left\"\n              External\n              IconFas\n            />\n            {/* <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n          </Block>\n\n          <PageTabs\n            Location={Location}\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={[\n              { name: 'About', slug: ''  },\n              { name: 'Specials', slug: 'specials' },\n              { name: 'Menu', slug: 'menu' },\n            ]}\n            TextColor={LocationTheme.Color.Primary}\n            Padding={[1.45, 0, 0, 0]}\n          />\n\n          {console.log(LocationData.nearby)}\n        </SimpleHero>\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n          Tint={0.05}\n        >\n          <SuggestionList\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={LocationData.nearby}\n            Affix=\"/menu\"\n            Label=\"Nearby\"\n            TextColor={LocationTheme.Color.Primary}\n            GradientColor={LocationTheme.Color.Background}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({ LocationData, Location }) => {\n  return (\n    <PageWrapper LocationData={LocationData} Location={Location}>\n      {console.log(Location)}\n\n      {/* ///////////// */}\n\n      <SimpleSection\n        BgColor={Theme.Color.Snow}\n        BgQuery=\"placeholder_bg_4.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        FluidHeight={true}\n        Gutter={[0, 0, 0, 0]}\n      />\n\n      {/* ///////////// */}\n    </PageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LocationLandingTemplate = ({ LocationData, Location }) => {\n  return <TemplateLayout LocationData={LocationData} Location={Location} />;\n};\n\nexport default LocationLandingTemplate;\n","// templates/Location/Landing/index.js:\n// This is the Location Landing page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LocationLandingTemplate from './layout';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationLandingPage = props => {\n  return (\n    <LocationLandingTemplate\n      LocationData={props.data.allLocationsJson.edges[0].node}\n      Location={props.location}\n    />\n  );\n};\n\nexport default LocationLandingPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n//\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const query = graphql`\n  query($Slug: String!) {\n    allLocationsJson(filter: { slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          slug\n          name\n          geography {\n            city\n            state\n            country\n          }\n          status {\n            delivery\n            store\n          }\n          meta {\n            reserveSpot\n            menu\n            maps\n          }\n          contactDetails {\n            phone\n            location {\n              address\n              state\n            }\n            hours {\n              days\n              startTime\n              endTime\n            }\n          }\n          nearby {\n            name\n            slug\n          }\n          about {\n            headline\n            PageTheme {\n              Color {\n                Background\n                Primary\n                Secondary\n                Tertiary\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: visible;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle Flex={Flex}>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgQuery,\n  BgAlt,\n  Flex,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgQuery} AltText={BgAlt} />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Convert #HEXCODES to RGBA\n// hexToRGB('#FF0000', 0.5);\n\nconst hexToRGB = (hex, alpha) => {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  } else {\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n  }\n};\n\nexport default hexToRGB;\n","// <SuggestionListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SuggestionListStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size} / 4);\n      font-size: 1.2rem;\n\n      &:first-child {\n        opacity: .3;\n      }\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.2rem;\n          font-weight: normal;\n          padding: 0 calc(${Root.Size} / 4);\n        }\n      }\n    }\n  }\n`;\n\nexport default SuggestionListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SuggestionList Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport SuggestionListStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst SuggestionList = ({\n  List,\n  Label,\n  BaseUrl,\n  TextColor,\n  GradientColor,\n  Padding,\n  Affix,\n}) => (\n  <SuggestionListStyle\n    className=\"suggestion-list\"\n    GradientColor={GradientColor}\n    Padding={Padding}\n  >\n    <ul>\n      {Label ? <li>{Label}</li> : null}\n      {List.map((item, index) => (\n        <li key={index}>\n          <Btn\n            BgColor=\"none\"\n            Label={item.name}\n            Destination={\n              Affix ? BaseUrl + item.slug + Affix : BaseUrl + item.slug\n            }\n            TextColor={TextColor}\n          />\n        </li>\n      ))}\n    </ul>\n  </SuggestionListStyle>\n);\n\nexport default SuggestionList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}