{"version":3,"sources":["webpack:///./src/templates/Learn/Tag/layout.js","webpack:///./src/templates/Learn/Tag/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js"],"names":["SlideSectionWithData","props","_React$Component","call","this","render","BaseUrl","BgColor","Data","PageTheme","Color","Background","TextColor","Secondary","Tags","CategorySlug","Slug","Widgets","map","Tag","index","Flex","WidgetContent","Destination","Style","Meta","Generic","BgImage","Subhead","Headline","Name","IconColor","IconName","Icon","TintColor","TintOpacity","IconSize","Theme","Nightsky","White","react_default","a","createElement","SlideSection","SectionSize","Header","Black","SliderSettings","slidesToShow","slidesToScroll","autoplay","arrows","React","Component","LearnSection","_ref","Category","Block","maxWidth","Padding","layout_SlideSectionWithData","PageWrapper","_ref2","children","TagSlug","TagData","CategoryTheme","Location","Layout","PrimaryColor","Primary","SecondaryColor","TertiaryColor","Tertiary","SubLevelPage","SimpleHero","Breadcrumb","Crumbs","Label","className","SocialStrip","QuestionFooter","TemplateLayout","_ref3","CategoryData","CategoryName","layout_PageWrapper","QuestionListings","TagFilter","CategoryFilter","Gutter","Snow","layout_LearnSection","LearnTagTemplate","_ref4","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","tagQuery","LearnTagPage","pageContext","Fragment","data","allQuestionCategoriesJson","edges","node","key","i","layout","location","href","SlideSectionStyle","styled","div","_templateObject","Base","Size","Sm","Root","Inner","SectionInnerStyle","_templateObject2","Grid","Left","Content","SectionContentStyle","_templateObject3","SectionHeader","_templateObject4","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","PrevArrow","SectionSlider","_settings","_this","ArrowColor","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Helmet","rel","type","lib_default","ref","h","slider","ViewAll","SlideSection_styles_scss","Btn","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","WrapperLock","createGlobalStyle","Media","Width","Md","WrapperRelease","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","ImgQuery","query","alt","imgClass","objectFit","objectPosition","fluid","fadeIn","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","SiteWidth","SidebarWidgetStyle","FadeIn","Radius","SidebarWidget","styles_scss","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","BlockStyle","AlignItems","css","BgTint","BgQuery","BgAlt","SimpleSectionStyle","Right","FluidHeight","SimpleSection","SimpleSection_styles_scss","WidgetSection","Slider","WidgetSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroInner","SimpleHeroStyle","Tint","SimpleHero_styles_scss","Hero_HeroInner","BreadCrumb","Link","Bread","crumb","HeroStripStyle","ViewWidthFontSize","QuestionCards","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","slug","title","BgImageFile","coverImage","BgImageAltText","tags","includes","toLowerCase","_234893462","QuestionListings_QuestionCards","Mint","Tahoe","Dank","Sunset","PurpleHaze","BrowseCategories","categoryWidgets","widgetArray","viewAll","unshift","Slate","_4273665236","HideCategories","QuestionFooter_BrowseCategories","SocialStripStyle","span","target"],"mappings":"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","file":"component---src-templates-learn-tag-index-js-ae4b7e6c68ce1267754e.js","sourcesContent":["// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n    let WidgetCount = 0; // This is to add an 'All' Widget.\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={'More from ' + this.props.Data.Name}\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ BaseUrl, Category }) => {\n  return (\n    <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n      <SlideSectionWithData BaseUrl={BaseUrl} Data={Category} />\n    </Block>\n  );\n};\n\n// PageWrapper component for page theming.\nconst PageWrapper = ({\n  children,\n  TagSlug,\n  TagData,\n  CategorySlug,\n  Category,\n  CategoryTheme,\n  Location,\n}) => {\n  return (\n    <Layout\n      BgColor={CategoryTheme.Color.Background}\n      PrimaryColor={CategoryTheme.Color.Primary}\n      SecondaryColor={CategoryTheme.Color.Secondary}\n      TertiaryColor={CategoryTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={CategoryTheme.Color.Background}\n        PrimaryColor={CategoryTheme.Color.Primary}\n        SecondaryColor={CategoryTheme.Color.Secondary}\n        TertiaryColor={CategoryTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero TextColor={CategoryTheme.Color.Secondary}>\n          <Block maxWidth={0.5}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: 'learn/' + CategorySlug,\n                  Label: Category.Name + ' Cannabis Questions',\n                },\n                {\n                  Destination: 'learn/' + CategorySlug + '/' + TagSlug,\n                  Label: TagData.Name,\n                },\n              ]}\n              TextColor={CategoryTheme.Color.Secondary}\n            />\n            <h1 className=\"h2\">\n              Learn about Cannabis, {Category.Name}, & {TagData.Name}.{' '}\n            </h1>\n            <SocialStrip\n              Location={Location}\n              TextColor={CategoryTheme.Color.Secondary}\n            />\n          </Block>\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.White}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n\n        {/* The Question / Category / Tag footer. */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          <QuestionFooter />\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* ///////////// */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({\n  TagSlug,\n  TagData,\n  CategorySlug,\n  CategoryData,\n  Location,\n  CategoryName,\n}) => {\n  return (\n    <PageWrapper\n      CategoryTheme={CategoryData.PageTheme}\n      Category={CategoryData}\n      CategorySlug={CategorySlug}\n      TagSlug={TagSlug}\n      TagData={TagData}\n      Location={Location}\n    >\n      <QuestionListings\n        CategorySlug={CategorySlug}\n        TagSlug={TagData.Slug}\n        TagFilter={TagData.Name}\n        CategoryFilter={CategoryName}\n        Gutter={[1, 1, 2, 1]}\n        BgColor={Theme.Color.Snow}\n      />\n      <LearnSection BaseUrl=\"/learn\" Category={CategoryData} />\n    </PageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LearnTagTemplate = ({\n  TagSlug,\n  TagData,\n  CategorySlug,\n  CategoryData,\n  CategoryName,\n  Location,\n}) => {\n  return (\n    <TemplateLayout\n      TagSlug={TagSlug}\n      TagData={TagData}\n      CategoryName={CategoryName}\n      CategorySlug={CategorySlug}\n      CategoryData={CategoryData}\n      Location={Location}\n    />\n  );\n};\n\nexport default LearnTagTemplate;\n","// learn/all.js:\n// This is the overview of all Learn items.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LearnTagTemplate from './layout';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LearnTagPage = props => {\n  // Define our Slugs\n  let CategorySlug = props.pageContext.CategorySlug;\n  let TagSlug = props.pageContext.TagSlug;\n\n  // Define our Data Objects\n  let CategoryData = {};\n  let TagData = {};\n\n  return (\n    <>\n      {props.data.allQuestionCategoriesJson.edges.map((Category, index) => {\n        // If Category's slug matches this page's context CategorySlug that\n        // we specified in gatsby-node.js:\n        if (Category.node.Slug == CategorySlug) {\n          // Define our correct Data Category Object\n          let CategoryData = Category.node;\n          let CategoryName = Category.node.Name;\n\n          // Then let's map that Category's tags.\n          return (\n            <div key={index}>\n              {Category.node.Tags.map((Tag, i) => {\n                // If the tag slug matches this page's context TagSlug\n                // that we specified in gatsby-node.js.\n                if (Tag.Slug == props.pageContext.TagSlug) {\n                  // Define our correct Data Tag Object\n                  let TagData = Tag;\n\n                  return (\n                    <LearnTagTemplate\n                      key={i}\n                      TagSlug={Tag.Slug}\n                      TagData={TagData}\n                      CategoryName={CategoryName}\n                      CategorySlug={CategorySlug}\n                      CategoryData={CategoryData}\n                      Location={props.location.href}\n                    />\n                  );\n                }\n              })}\n            </div>\n          );\n        }\n      })}\n    </>\n  );\n};\n\nexport default LearnTagPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const tagQuery = graphql`\n  query {\n    allQuestionCategoriesJson {\n      edges {\n        node {\n          id\n          Name\n          Icon\n          Headline\n          Slug\n          Tags {\n            Name\n            Icon\n            Slug\n          }\n          Breadcrumb {\n            Destination\n            Label\n          }\n          PageTheme {\n            Color {\n              Background\n              Primary\n              Secondary\n              Tertiary\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: visible;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: scroll; /* has to be scroll, not auto */\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: unset;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: hidden;\n      height: auto;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden; /* has to be scroll, not auto */\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  query,\n  alt,\n  imgClass,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={query}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    alt={alt}\n    className={imgClass ? imgClass : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n  padding-right: ${Root.Size};\n  padding-top: calc(${Root.Size} * ${props => (props.Size ? props.Size : '2')});\n  padding-bottom: calc(\n    ${Root.Size} * ${props => (props.Size ? props.Size : '2')}\n  );\n  position: relative;\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery query={BgQuery} alt={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgQuery query={BgQuery} alt={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgQuery query={BgQuery} alt={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n  overflow: hidden;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0, 0.5);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Size,\n  BgQuery,\n  BgAlt,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n    >\n      {children}\n    </HeroInner>\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery query={BgQuery} alt={BgAlt} />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n        {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={Question.node.category + ' & Cannabis | ' + Question.node.title}\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={Question.node.category + ' & Cannabis | ' + Question.node.title}\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={Question.node.category + ' & Cannabis | ' + Question.node.title}\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\nconst Widgets = [\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/all/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Nightsky,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'All Questions',\n            TextColor: Theme.Color.White,\n            IconColor: Theme.Color.White,\n            IconName: 'question', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/recreational/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Mint,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'Recreational',\n            TextColor: Theme.Color.Black,\n            IconColor: Theme.Color.Black,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/medical/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Tahoe,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'Medical',\n            TextColor: Theme.Color.White,\n            IconColor: Theme.Color.White,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/safety/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Dank,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'Safety',\n            TextColor: Theme.Color.Black,\n            IconColor: Theme.Color.Black,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/industry/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Sunset,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'Industry',\n            TextColor: Theme.Color.White,\n            IconColor: Theme.Color.White,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/california/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.PurpleHaze,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'California',\n            TextColor: Theme.Color.White,\n            IconColor: Theme.Color.White,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n];\n\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location }) => (\n  <SocialStripStyle TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}