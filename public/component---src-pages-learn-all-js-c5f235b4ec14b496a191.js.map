{"version":3,"sources":["webpack:///./src/pages/learn/all.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./node_modules/gatsby-image/withIEPolyfill/index.js","webpack:///./node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/Section/LearnSection/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","components_core_Layout__WEBPACK_IMPORTED_MODULE_1__","templates_SubLevelPage__WEBPACK_IMPORTED_MODULE_2__","components_library_Hero_SimpleHero__WEBPACK_IMPORTED_MODULE_3__","components_library_Section_LearnSection__WEBPACK_IMPORTED_MODULE_4__","components_library_QuestionFooter__WEBPACK_IMPORTED_MODULE_5__","components_library_Breadcrumb__WEBPACK_IMPORTED_MODULE_6__","components_library_Block__WEBPACK_IMPORTED_MODULE_8__","constants_Theme__WEBPACK_IMPORTED_MODULE_9__","PageWrapper","_ref","children","Data","Category","CategoryTheme","a","createElement","BgColor","Theme","Color","Gunmetal","PrimaryColor","SecondaryColor","White","TertiaryColor","Nightsky","TextColor","maxWidth","to","Label","className","Snow","HideCategories","LearnTemplateAll","_ref2","data","Filter","Categories","allQuestionCategoriesJson","edges","SlideSectionStyle","styled","div","_templateObject","Base","Size","Sm","Root","Black","Inner","SectionInnerStyle","_templateObject2","Content","SectionContentStyle","_templateObject3","props","SectionSize","SectionHeader","_templateObject4","Headline","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","react_default","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Fragment","Helmet","rel","type","href","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","Btn","Destination","IconclassName","SlideSection_SectionSlider","TextColr","map","Widget","index","Container","key","WidgetContent","Flex","WrapperLock","createGlobalStyle","Media","Width","Md","WrapperRelease","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","ImgQuery","alt","imgClass","objectFit","objectPosition","fluid","fadeIn","HeroInnerStyle","Grid","Gutter","Left","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","SiteWidth","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","styles_scss","gatsby_browser_entry","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","Primary","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","Background","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","BlockStyle","AlignItems","Style","css","BgTint","Padding","Block","BgQuery","BgAlt","SimpleSectionStyle","Right","FluidHeight","SimpleSection","SimpleSection_styles_scss","WidgetSection","Slider","WidgetSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","_interopRequireWildcard","_interopRequireDefault","exports","__esModule","default","_extends2","_objectWithoutPropertiesLoose2","_inheritsLoose2","_assertThisInitialized2","_defineProperty2","_react","_propTypes","_index","ImageWithIEPolyfill","_Component","_len","arguments","length","args","Array","_key","apply","concat","innerRef","createRef","_proto","prototype","componentDidMount","_this2","testImg","document","e","then","t","bind","ObjectFitImages","imageRef","current","_this$props","imgStyle","fontFamily","propTypes","string","defaultProps","_default","forwardRef","module","obj","newObj","hasOwnProperty","desc","defineProperty","getOwnPropertyDescriptor","get","set","HeroInner","SimpleHeroStyle","Tint","SimpleHero","SimpleHero_styles_scss","Hero_HeroInner","BreadCrumb","Link","span","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","node","allQuestionsJson","Question","filteredCategory","PageTheme","slug","title","BgImageFile","coverImage","tags","includes","toLowerCase","Slug","_234893462","QuestionListings","QuestionListings_QuestionCards","QuestionFooter","Meta","Generic","IconSize","Mint","Dank","Sunset","SlideSectionWithData","BaseUrl","Secondary","Tags","Tag","react__WEBPACK_IMPORTED_MODULE_1___default","components_library_Section_SlideSection__WEBPACK_IMPORTED_MODULE_2__","Prefix","LearnSection","components_library_Block__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-learn-all-js-c5f235b4ec14b496a191.js","sourcesContent":["// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport LearnSection from 'components/library/Section/LearnSection';\nimport QuestionFooter from 'components/library/QuestionFooter';\n\n//// Misc. Components\nimport Breadcrumb from 'components/library/Breadcrumb';\nimport Btn from 'components/library/Btn/';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// PageWrapper component for page theming.\nconst PageWrapper = ({ children, Data, Category, CategoryTheme }) => {\n  return (\n    <Layout\n      BgColor={Theme.Color.Gunmetal}\n      PrimaryColor={Theme.Color.Gunmetal}\n      SecondaryColor={Theme.Color.White}\n      TertiaryColor={Theme.Color.Nightsky}\n    >\n      <SubLevelPage\n        BgColor={Theme.Color.Gunmetal}\n        PrimaryColor={Theme.Color.Gunmetal}\n        SecondaryColor={Theme.Color.White}\n        TertiaryColor={Theme.Color.Nightsky}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero TextColor={Theme.Color.White}>\n          <Block maxWidth={0.5}>\n            <Breadcrumb\n              to=\"/learn\"\n              Label=\"Learn\"\n              TextColor={Theme.Color.White}\n            />\n            <h1 className=\"h2\">You've got questions. We've got answers.</h1>\n          </Block>\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Snow}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n\n        </SubLevelPageContent>\n        {/* End page content. */}\n\n         {/* The Question / Category / Tag footer. */}\n         <SubLevelPageContent\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          <QuestionFooter HideCategories />\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        \n        {/* ///////////// */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LearnTemplateAll = ({ data }) => {\n  return (\n    <PageWrapper>\n      {/* Pass our categories GraphQL query to the LearnSection. */}\n      <LearnSection\n        Filter=\"all\"\n        Categories={data.allQuestionCategoriesJson.edges}\n      />\n    </PageWrapper>\n  );\n};\n\nexport default LearnTemplateAll;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\nexport const query = graphql`\n  query {\n    allQuestionCategoriesJson {\n      edges {\n        node {\n          id\n          Name\n          Icon\n          Headline\n          Slug\n          Tags {\n            Name\n            Icon\n            Slug\n          }\n          Breadcrumb {\n            Destination\n            Label\n          }\n          PageTheme {\n            Color {\n              Background\n              Primary\n              Secondary\n              Tertiary\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: visible;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-top: ${Root.Size};\n  padding-bottom: 0;\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: scroll; /* has to be scroll, not auto */\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: unset;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: hidden;\n      height: auto;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden; /* has to be scroll, not auto */\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  query,\n  alt,\n  imgClass,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={query}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    alt={alt}\n    className={imgClass ? imgClass : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n  padding-right: ${Root.Size};\n  padding-top: calc(${Root.Size} * ${props => (props.Size ? props.Size : '2')});\n  padding-bottom: calc(\n    ${Root.Size} * ${props => (props.Size ? props.Size : '2')}\n  );\n  position: relative;\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery query={BgQuery} alt={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgQuery query={BgQuery} alt={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgQuery query={BgQuery} alt={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _index = _interopRequireDefault(require(\"../index\"));\n\nvar ImageWithIEPolyfill =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(ImageWithIEPolyfill, _Component);\n\n  function ImageWithIEPolyfill() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"imageRef\", _this.props.innerRef || (0, _react.createRef)());\n    return _this;\n  }\n\n  var _proto = ImageWithIEPolyfill.prototype;\n\n  // Load object-fit/position polyfill if required (e.g. in IE)\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var testImg = document.createElement(\"img\");\n\n    if (typeof testImg.style.objectFit === \"undefined\" || typeof testImg.style.objectPosition === \"undefined\") {\n      import(\"object-fit-images\").then(function (_ref) {\n        var ObjectFitImages = _ref.default;\n        return ObjectFitImages(_this2.imageRef.current.imageRef.current);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        objectFit = _this$props.objectFit,\n        objectPosition = _this$props.objectPosition,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"objectFit\", \"objectPosition\"]);\n    return _react.default.createElement(_index.default, (0, _extends2.default)({\n      ref: this.imageRef\n    }, props, {\n      imgStyle: (0, _extends2.default)({}, props.imgStyle, {\n        objectFit: objectFit,\n        objectPosition: objectPosition,\n        fontFamily: \"\\\"object-fit: \" + objectFit + \"; object-position: \" + objectPosition + \"\\\"\"\n      })\n    }));\n  };\n\n  return ImageWithIEPolyfill;\n}(_react.Component);\n\nImageWithIEPolyfill.propTypes = {\n  objectFit: _propTypes.default.string,\n  objectPosition: _propTypes.default.string\n};\nImageWithIEPolyfill.defaultProps = {\n  objectFit: \"cover\",\n  objectPosition: \"50% 50%\"\n};\n\nvar _default = (0, _react.forwardRef)(function (props, ref) {\n  return _react.default.createElement(ImageWithIEPolyfill, (0, _extends2.default)({}, props, {\n    innerRef: ref\n  }));\n});\n\nexports.default = _default;","function _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nmodule.exports = _interopRequireWildcard;","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n  overflow: hidden;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0, 0.5);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Size,\n  BgQuery,\n  BgAlt,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n    >\n      {children}\n    </HeroInner>\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery query={BgQuery} alt={BgAlt} />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled(Link)`\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nBreadCrumb.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// BreadCrumb Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst BreadCrumb = ({ to, Label, TextColor }) => (\n  <BreadCrumbStyle to={to}>\n    <BreadCrumbStyle.Label TextColor={TextColor}>\n      <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n      {Label}\n    </BreadCrumbStyle.Label>\n  </BreadCrumbStyle>\n);\n\nexport default BreadCrumb;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : (\n      <WidgetSection\n        BgColor={Theme.Color.White}\n        Gutter={[1, 1, 0.15, 1]}\n        Widgets={[\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/learn/all',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Gunmetal,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'All Questions',\n                    TextColor: Theme.Color.White,\n                    IconColor: Theme.Color.White,\n                    IconName: 'rainbow', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/learn/recreational',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Mint,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Recreational',\n                    TextColor: Theme.Color.Nightsky,\n                    IconColor: Theme.Color.Nightsky,\n                    IconName: 'cannabis', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/learn/safety',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Dank,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Safety',\n                    TextColor: Theme.Color.Nightsky,\n                    IconColor: Theme.Color.Nightsky,\n                    IconName: 'book-open', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/learn/industry',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Sunset,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Industry',\n                    TextColor: Theme.Color.White,\n                    IconColor: Theme.Color.White,\n                    IconName: 'star', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n        ]}\n      />\n    )}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/' + BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={\n          this.props.Prefix\n            ? this.props.Prefix + this.props.Data.Name\n            : this.props.Data.Name\n        }\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ Categories, Filter, Prefix }) => {\n  if (Filter == 'all') {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a section. */}\n        {Categories.map((Category, index) => {\n          return (\n            <SlideSectionWithData\n              key={index}\n              BaseUrl=\"learn\"\n              Data={Category.node}\n            />\n          );\n        })}\n      </Block>\n    );\n  } else {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a the desired section. */}\n        {Categories.map((Category, index) => {\n          if (Category.node.Slug == Filter) {\n            return (\n              <SlideSectionWithData\n                key={index}\n                BaseUrl=\"learn\"\n                Data={Category.node}\n                Prefix={Prefix ? Prefix : null}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </Block>\n    );\n  }\n};\n\nexport default LearnSection;\n"],"sourceRoot":""}