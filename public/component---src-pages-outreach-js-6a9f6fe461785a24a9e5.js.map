{"version":3,"sources":["webpack:///./src/pages/outreach.js","webpack:///./src/elements/Icons/styles.scss.js","webpack:///./src/elements/Icons/SVG/Carat.js","webpack:///./src/elements/Icons/index.js","webpack:///./src/components/core/HorizontalContent/styles.scss.js","webpack:///./src/components/library/Widgets/Container/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/index.js","webpack:///./src/components/library/Widgets/Container/index.js","webpack:///./src/components/core/HorizontalContent/index.js","webpack:///./src/components/core/VerticalContent/styles.scss.js","webpack:///./src/components/core/VerticalContent/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_media__WEBPACK_IMPORTED_MODULE_1__","react_media__WEBPACK_IMPORTED_MODULE_1___default","components_core_Layout__WEBPACK_IMPORTED_MODULE_2__","components_core_HorizontalContent__WEBPACK_IMPORTED_MODULE_3__","components_core_VerticalContent__WEBPACK_IMPORTED_MODULE_4__","constants_Theme__WEBPACK_IMPORTED_MODULE_5__","constants_styles_Base__WEBPACK_IMPORTED_MODULE_6__","PageTheme","Color","Background","Primary","Secondary","Theme","White","Tertiary","LargeContent","a","createElement","SmallContent","Index","_ref","data","BgColor","PrimaryColor","SecondaryColor","TertiaryColor","query","minWidth","Base","Media","Width","Md","render","maxWidth","IconStyle","styled","span","_templateObject","Root","IconSize","props","Black","Carat","react_default","width","height","viewBox","fillRule","transform","points","Error","className","Icon","Name","styles_scss","SVG_Carat","Icons_Error","HorizontalContentStyle","div","Footer","Size","Inner","_templateObject2","Sm","FadeIn","Slide","_templateObject3","Nav","_templateObject4","Column","_templateObject5","Divider","ColWidth","_templateObject6","WidgetContainerStyle","styles_scss_templateObject","styles_scss_templateObject2","Radius","Transition","Duration","CssEase","WidgetStyle","Default_styles_scss_templateObject","TextColor","BgImage","TintColor","TintOpacity","ViewWidthPadding","Subhead","Default_styles_scss_templateObject2","ViewWidthFontSize","Headline","styles_scss_templateObject3","i","styles_scss_templateObject4","Widget","Destination","IconColor","IconName","Default_styles_scss","gatsby_browser_entry","to","Icons","WidgetSlider","_React$Component","call","this","_this","Fragment","Helmet","rel","type","href","lib_default","Object","assign","ref","g","slider","dots","speed","arrows","autoplaySpeed","slidesToShow","autoplay","infinite","children","React","Component","WidgetContainer","WidgetContent","Container_styles_scss","Container_WidgetSlider","map","Content","index","Default","key","Dank","Tahoe","WidgetContent2","WrapperLock","createGlobalStyle","HorizontalContent_templateObject","SimpleSlider","handleWheel","bind","assertThisInitialized_default","e","deltaY","slickPrev","slickNext","_this2","onWheel","c","SlideColumns","Container","HorizontalContent","HorizontalContent_SimpleSlider","HorizontalContent_SlideColumns","VerticalContentStyle","VerticalContent_templateObject","VerticalContent"],"mappings":"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","file":"component---src-pages-outreach-js-6a9f6fe461785a24a9e5.js","sourcesContent":["// Index.js:\n// This is the home page of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport Media from 'react-media';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport HorizontalContent from 'components/core/HorizontalContent';\nimport VerticalContent from 'components/core/VerticalContent';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Page Theme\nconst PageTheme = {\n  Color: {\n    Background: 'OrangeRed',\n    Primary: 'OrangeRed',\n    Secondary: Theme.Color.White,\n    Tertiary: 'OrangeRed',\n  },\n};\n\n// Large Device Content\nconst LargeContent = () => <HorizontalContent />;\n\n// Small Device Content\nconst SmallContent = () => <VerticalContent />;\n\n// Render Page\nconst Index = ({ data }) => (\n  <Layout\n    BgColor={PageTheme.Color.Background}\n    PrimaryColor={PageTheme.Color.Primary}\n    SecondaryColor={PageTheme.Color.Secondary}\n    TertiaryColor={PageTheme.Color.Tertiary}\n  >\n    <Media\n      query={{ minWidth: Base.Media.Width.Md }}\n      render={() => <LargeContent />}\n    />\n\n    <Media\n      query={{ maxWidth: Base.Media.Width.Md }}\n      render={() => <SmallContent />}\n    />\n  </Layout>\n);\n\nexport default Index;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst IconStyle = styled.span`\n  font-size: ${Root.IconSize};\n  line-height: 0;\n  height: ${Root.IconSize};\n  width: ${Root.IconSize};\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n\n  svg {\n    fill: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n  }\n`;\n\nexport default IconStyle;\n","// Carat Icon:\n// Simple carat (>) icon.\n\n// Core\nimport React from 'react';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Carat = () => (\n  <svg width=\"13px\" height=\"22px\" viewBox=\"0 0 13 22\">\n    <g fillRule=\"evenodd\">\n      <g transform=\"translate(-488.000000, -591.000000)\" fillRule=\"nonzero\">\n        <polygon points=\"488.428658 592.571342 489.571342 591.428658 500.142685 602 489.571342 612.571342 488.428658 611.428658 497.857315 602\" />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Carat;\n","// Icons Component:\n//\n// https://fontawesome.com/icons/\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Styles\nimport IconStyle from './styles.scss';\n\n// Icon Files\nimport Carat from './SVG/Carat';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst Error = () => {\n  <i className=\"fas fa-exclamation-circle\" />;\n};\n\nconst Icon = props => {\n  switch (props.Name) {\n    case 'Carat':\n      return (\n        <IconStyle Color={props.Color}>\n          <Carat />\n        </IconStyle>\n      );\n    default:\n      return (\n        <IconStyle Color={props.Color}>\n          <Error />\n        </IconStyle>\n      );\n  }\n};\n\n// const Icon = ({ name }) => {\n//   <IconStyle>\n//     <IconsLibrary name={name} />\n//   </IconStyle>;\n// };\n\nexport default Icon;\n\n///////////////\n","// Layout Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframe\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst HorizontalContentStyle = styled.div`\n  width: 100%;\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: ${Root.Footer.Size};\n  overflow: visible;\n\n  .slick-list {\n    overflow: visible;\n  }\n`;\n\n// The Slide Group Wrapper\nHorizontalContentStyle.Inner = styled.div`\n  width: 100%;\n  padding: 0;\n\n  /* Padding on first slide */\n  .slick-slide {\n    padding: 0;\n    overflow: visible;\n    div {\n      outline: 0;\n      &:focus {\n        outline: 0;\n      }\n      .col {\n        &:first-child {\n          padding-left: ${Theme.Base.Size.Sm};\n        }\n      }\n    }\n    &:first-child {\n      padding: 0 0 0 ${Theme.Base.Size.Sm};\n      .col {\n        &:first-child {\n          padding-left: 0;\n        }\n      }\n    }\n  }\n\n  .widget {\n    ${FadeIn};\n  }\n`;\n\n// The Individual Slide Wrapper\nHorizontalContentStyle.Slide = styled.div`\n  width: 100%;\n  padding: 0;\n  overflow: visible;\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n`;\n\n// The Individual Slide Inner\nHorizontalContentStyle.Slide.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  overflow: visible;\n  padding-bottom: ${Theme.Base.Size.Sm};\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n`;\n\n// The Column Wrapper\nHorizontalContentStyle.Column = styled.div`\n  padding: ${Theme.Base.Size.Sm} ${Theme.Base.Size.Sm} ${Theme.Base.Size.Sm} 0;\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n  display: flex;\n  flex-direction: column;\n  flex: ${props => (props.Divider ? 'unset' : '1')};\n  width: ${props =>\n    props.ColWidth\n      ? props.ColWidth\n      : props.Divider\n      ? Theme.Base.Size.Md\n      : 'auto'};\n`;\n\nHorizontalContentStyle.Column.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n  max-width: 100%;\n  .widget {\n    &:first-child {\n      padding-top: 0;\n    }\n  }\n\n  ${props => {\n    if (props.Divider)\n      return `\n        width: ${Theme.Base.Size.Md};\n        &:before {\n          content: '';\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          // left: calc(50% - ${Base.Size.Sm / 2 + 'px'});\n          left: 50%;\n          width: 1px;\n          opacity: .05;\n          background-color: { Theme.Color.Indigo };\n        }\n    `;\n  }}\n`;\n\nexport default HorizontalContentStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetContainerStyle = styled.div`\n  padding-top: ${Theme.Base.Size.Sm};\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n\n  /* Slick Slider Adjustments */\n\n  .slick-slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    .slick-dots {\n      bottom: ${Theme.Base.Size.Sm};\n      left: ${Theme.Base.Size.Sm};\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .slick-slider,\n  .slick-list,\n  .slick-track {\n    flex: 1;\n  }\n\n  .slick-list,\n  .slick-slider {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n  }\n\n  .slick-slide {\n    display: flex !important;\n    flex-direction: column;\n    align-items: stretch;\n    flex: 1;\n\n    &:first-child {\n      padding: 0;\n    }\n\n    div {\n      &:first-child {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n    }\n\n    .widget-content {\n      flex: 1;\n\n      div {\n        &:first-child {\n          flex: unset;\n          display: unset;\n          flex-direction: unset;\n          align-items: unset;\n        }\n      }\n    }\n  }\n`;\n\nexport default WidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n      transform: scale(1.3);\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Example Usage:\n// <Widget\n// WidgetContent={WidgetContent}\n// BgImage=\"https://source.unsplash.com/1600x1200/?cannabis\"\n// TintColor={Theme.Color.Black}\n// TintOpacity=\".5\"\n// Subhead=\"Subhead\"\n// Headline=\"Headline\"\n// TextColor={Theme.Color.White}\n// IconColor={Theme.Color.White}\n// IconName=\"graduation-cap\"\n// Destination=\"/subpage\"\n// />;\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Widget = ({\n  BgColor,\n  BgImage,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <WidgetStyle.Subhead>{Subhead}</WidgetStyle.Subhead>\n      <WidgetStyle.Headline>{Headline}</WidgetStyle.Headline>\n      <Icon className=\"svg-carat\" Name=\"Carat\" Color={IconColor} />\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n    </Link>\n  </WidgetStyle>\n);\n\nexport default Widget;\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport WidgetContainerStyle from './styles.scss';\n\n// Components\nimport Widget from './../Library/Default/';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Widget Slider:\n// For WidgetContainers with multiple widgets\n// inside of them.\nclass WidgetSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: true,\n      speed: 1500,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: 1,\n      autoplay: true,\n      infinite: true,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={g => (this.slider = g)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// Widget Itself\nconst WidgetContainer = ({ WidgetContent }) => (\n  <WidgetContainerStyle className=\"widget\">\n    <WidgetContainerStyle.Inner>\n      <WidgetSlider>\n        {WidgetContent.map((Content, index) => (\n          <Widget\n            BgColor={Content.BgColor}\n            BgImage={Content.BgImage}\n            TextColor={Content.TextColor}\n            TintColor={Content.TintColor}\n            TintOpacity={Content.TintOpacity}\n            Destination={Content.Destination}\n            Subhead={Content.Subhead}\n            Headline={Content.Headline}\n            IconName={Content.IconName}\n            IconColor={Content.IconColor}\n            key={index}\n          />\n        ))}\n      </WidgetSlider>\n    </WidgetContainerStyle.Inner>\n  </WidgetContainerStyle>\n);\n\nexport default WidgetContainer;\n","// ScrollWrapper.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport posed, { PoseGroup } from 'react-pose';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\nimport HorizontalContentStyle from 'components/core/HorizontalContent/styles.scss';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Widget Content\n\nconst WidgetContent = [\n  {\n    BgColor: Theme.Color.White,\n    BgImage: 'https://source.unsplash.com/300x300/?flowers',\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.White,\n    IconColor: Theme.Color.White, \n    IconName: 'rocket', // FontAwesome Icon Name\n    Destination: '/subpage',\n    TintColor: '#000000',\n    TintOpacity: '.4',\n    WidgetStyle: 'default',\n  },\n  {\n    BgColor: Theme.Color.Dank,\n    BgImage: 'none',\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.Black,\n    IconColor: Theme.Color.Black,\n    IconName: 'rocket',\n    Destination: '/subpage',\n    TintColor: '',\n    TintOpacity: '',\n    WidgetStyle: 'default',\n  },\n  {\n    BgColor: Theme.Color.Tahoe,\n    BgImage: 'none',\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.White,\n    IconColor: Theme.Color.White,\n    IconName: 'rocket',\n    Destination: '/subpage',\n    TintColor: '',\n    TintOpacity: '',\n    WidgetStyle: 'default',\n  },\n];\n\nconst WidgetContent2 = [\n  {\n    BgColor: 'Pink',\n    BgImage: 'none',\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.Black,\n    IconColor: Theme.Color.Black, // FontAwesome Icon Name\n    IconName: 'rocket',\n    Destination: '/subpage',\n    TintColor: '',\n    TintOpacity: '',\n    WidgetStyle: 'default',\n  },\n];\n\n// Lock Wrapper Scrollssss\nconst WrapperLock = createGlobalStyle`\n  .wrapper {\n    overflow: hidden;\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n//  Pose Animation\n// const WidgetItem = posed(Widget)({\n//   enter: { opacity: 1 },\n//   exit: { opacity: 0 },\n// });\n\n// The Slider Itself\nclass SimpleSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleWheel = this.handleWheel.bind(this);\n  }\n\n  handleWheel(e) {\n    // Disable defaults:\n    // e.preventDefault();\n\n    // Previous / Next Slide based on mouse scroll\n    if (e.deltaY < 0) {\n      this.slider.slickPrev();\n    } else {\n      this.slider.slickNext();\n    }\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: false,\n      speed: 1500,\n      arrows: false,\n      slidesToShow: 1.05,\n      infinite: false,\n    };\n\n    return (\n      <>\n        <WrapperLock />\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <div onWheel={e => this.handleWheel(e)}>\n          <Slider ref={c => (this.slider = c)} {...settings}>\n            {this.props.children}\n          </Slider>\n        </div>\n      </>\n    );\n  }\n}\n\nconst SlideColumns = () => (\n  <>\n    <HorizontalContentStyle.Column className=\"col\">\n      <HorizontalContentStyle.Column.Inner className=\"col-inner\">\n        <WidgetContainer WidgetContent={WidgetContent} />\n        <WidgetContainer WidgetContent={WidgetContent2} />\n        <WidgetContainer WidgetContent={WidgetContent} />\n      </HorizontalContentStyle.Column.Inner>\n    </HorizontalContentStyle.Column>\n\n    <HorizontalContentStyle.Column className=\"col\">\n      <HorizontalContentStyle.Column.Inner className=\"col-inner\">\n        <WidgetContainer WidgetContent={WidgetContent2} />\n        <WidgetContainer WidgetContent={WidgetContent} />\n      </HorizontalContentStyle.Column.Inner>\n    </HorizontalContentStyle.Column>\n\n    <HorizontalContentStyle.Column Divider className=\"divider\">\n      <HorizontalContentStyle.Column.Inner Divider />\n    </HorizontalContentStyle.Column>\n\n    <HorizontalContentStyle.Column className=\"col\">\n      <HorizontalContentStyle.Column.Inner className=\"col-inner\">\n        <WidgetContainer WidgetContent={WidgetContent} />\n      </HorizontalContentStyle.Column.Inner>\n    </HorizontalContentStyle.Column>\n\n    <HorizontalContentStyle.Column className=\"col\">\n      <HorizontalContentStyle.Column.Inner className=\"col-inner\">\n        <WidgetContainer WidgetContent={WidgetContent} />\n        <WidgetContainer WidgetContent={WidgetContent2} />\n      </HorizontalContentStyle.Column.Inner>\n    </HorizontalContentStyle.Column>\n\n    <HorizontalContentStyle.Column className=\"col\">\n      <HorizontalContentStyle.Column.Inner className=\"col-inner\">\n        <WidgetContainer WidgetContent={WidgetContent} />\n        <WidgetContainer WidgetContent={WidgetContent2} />\n        <WidgetContainer WidgetContent={WidgetContent} />\n      </HorizontalContentStyle.Column.Inner>\n    </HorizontalContentStyle.Column>\n  </>\n);\n\n// The Content Itself\nconst HorizontalContent = ({ children }) => (\n  <HorizontalContentStyle>\n    <HorizontalContentStyle.Inner>\n      <SimpleSlider>\n        <HorizontalContentStyle.Slide>\n          <HorizontalContentStyle.Slide.Inner>\n            <SlideColumns />\n          </HorizontalContentStyle.Slide.Inner>\n        </HorizontalContentStyle.Slide>\n        <HorizontalContentStyle.Slide>\n          <HorizontalContentStyle.Slide.Inner>\n            <SlideColumns />\n          </HorizontalContentStyle.Slide.Inner>\n        </HorizontalContentStyle.Slide>\n        <HorizontalContentStyle.Slide>\n          <HorizontalContentStyle.Slide.Inner>\n            <SlideColumns />\n          </HorizontalContentStyle.Slide.Inner>\n        </HorizontalContentStyle.Slide>\n      </SimpleSlider>\n    </HorizontalContentStyle.Inner>\n  </HorizontalContentStyle>\n);\n\nexport default HorizontalContent;\n","// Layout Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframe\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst VerticalContentStyle = styled.div`\n  width: 100%;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: calc(${Root.Nav.Size} + ${Theme.Base.Size.Sm});\n  padding-bottom: calc(${Root.Nav.Size} + ${Theme.Base.Size.Sm});\n`;\n\n// The Content Inner\nVerticalContentStyle.Inner = styled.div`\n  width: 100%;\n  padding: 0;\n\n  .widget {\n    ${FadeIn};\n  }\n`;\n\nexport default VerticalContentStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// ScrollWrapper.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport posed, { PoseGroup } from 'react-pose';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\nimport VerticalContentStyle from 'components/core/VerticalContent/styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scrolls\nconst WrapperLock = createGlobalStyle`\n  .wrapper {\n    overflow-y: auto;\n  }\n`;\n\n// The Content Itself\nconst VerticalContent = ({ children }) => (\n  <VerticalContentStyle>\n    <VerticalContentStyle.Inner>Vertical Content</VerticalContentStyle.Inner>\n  </VerticalContentStyle>\n);\n\nexport default VerticalContent;\n"],"sourceRoot":""}