{"version":3,"sources":["webpack:///./src/templates/Location/Specials/layout.js","webpack:///./src/templates/Location/Specials/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/helpers/hexToRGB.js","webpack:///./src/components/library/SimpleList/styles.scss.js","webpack:///./src/components/library/SimpleList/index.js","webpack:///./src/components/library/SuggestionList/styles.scss.js","webpack:///./src/components/library/SuggestionList/index.js","webpack:///./src/components/library/AwardBadge/styles.scss.js","webpack:///./src/components/library/AwardBadge/index.js","webpack:///./src/components/library/AwardHours/styles.scss.js","webpack:///./src/components/library/AwardHours/index.js","webpack:///./src/components/library/PageTabs/styles.scss.js","webpack:///./src/components/library/PageTabs/index.js","webpack:///./src/templates/Location/Components/LocationPageWrapper/index.js"],"names":["TemplateLayout","_ref","LocationData","Location","Headline","react_default","a","createElement","LocationPageWrapper","QuestionFooter","HideCategories","LocationLandingTemplate","_ref2","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","query","LocationLandingPage","props","layout","data","allLocationsJson","edges","node","location","about","headline","BlockStyle","styled","div","_templateObject","Flex","flex","BgColor","TextColor","AlignItems","Style","css","_templateObject2","JustifyContent","BgTint","Width","maxWidth","Theme","Base","Grid","SiteWidth","Padding","Root","Size","Block","children","className","BgMatch","BgAlt","styles_scss","ImgMatch","src","AltText","SlideSectionStyle","Sm","Color","Black","Inner","SectionInnerStyle","Gutter","Left","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Fragment","Helmet","rel","type","href","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","Btn","Destination","Label","IconclassName","SlideSection_SectionSlider","TextColr","map","Widget","index","Container","key","WidgetContent","WrapperLock","createGlobalStyle","Media","Md","WrapperRelease","SimpleSectionStyle","Primary","White","Right","FluidHeight","SimpleSection","SimpleSection_styles_scss","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","WidgetSection","Slider","WidgetSection_styles_scss","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","PrimaryColor","SecondaryColor","TertiaryColor","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","Background","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SimpleHeroStyle","Tint","TintBorder","ImgQuery","objectFit","objectPosition","withIEPolyfill_default","fluid","fadeIn","SimpleHero","BgQuery","Hero","core_ImgQuery","BreadCrumb","Link","Bread","Crumbs","crumb","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","allQuestionCategoriesJson","PageTheme","slug","title","BgImageFile","coverImage","BgImageAltText","tags","includes","toLowerCase","Slug","_234893462","QuestionListings","Nightsky","QuestionListings_QuestionCards","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_4273665236","IconClass","IconPosition","QuestionFooter_BrowseCategories","SocialStripStyle","Margin","span","SocialStrip","target","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","hexToRGB","hex","alpha","r","parseInt","slice","g","b","SimpleListStyle","List","ul","Item","li","SimpleList","item","Data","SuggestionListStyle","GradientColor","Button","SuggestionList","BaseUrl","Affix","name","AwardBadgeStyle","AwardHours","Text","AwardHoursStyle","Hours","AwardHours_styles_scss","AwardBadge","Logo","PageTabsStyle","PageTabs","destination","currentLocation","DestinationPath","LocationPathWithSlash","pathname","AddClass","components_core_Layout__WEBPACK_IMPORTED_MODULE_1__","templates_SubLevelPage__WEBPACK_IMPORTED_MODULE_2__","components_library_Hero_SimpleHero__WEBPACK_IMPORTED_MODULE_3__","components_library_AwardHours__WEBPACK_IMPORTED_MODULE_4__","components_library_Btn___WEBPACK_IMPORTED_MODULE_12__","components_library_SuggestionList__WEBPACK_IMPORTED_MODULE_13__","components_library_PageTabs__WEBPACK_IMPORTED_MODULE_14__","components_library_Block__WEBPACK_IMPORTED_MODULE_16__","constants_Theme__WEBPACK_IMPORTED_MODULE_17__","LocationTheme","Secondary","Tertiary","geography","state","IconFas","contactDetails","address","meta","maps","External","nearby"],"mappings":"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","file":"component---src-templates-location-specials-index-js-12dea055a609f664d39b.js","sourcesContent":["// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\nimport PageTabs from 'components/library/PageTabs';\n\n// Template Specific Components\nimport LocationPageWrapper from '../Components/LocationPageWrapper';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({ LocationData, Location, Headline }) => {\n  return (\n    <LocationPageWrapper\n      Headline={Headline}\n      LocationData={LocationData}\n      Location={Location}\n    >\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n\n      <QuestionFooter HideCategories />\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n    </LocationPageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LocationLandingTemplate = ({ LocationData, Location }) => {\n  return <TemplateLayout LocationData={LocationData} Location={Location} />;\n};\n\nexport default LocationLandingTemplate;\n","// templates/Location/Landing/index.js:\n// This is the Location Landing page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LocationLandingTemplate from './layout';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationLandingPage = props => {\n  return (\n    <LocationLandingTemplate\n      LocationData={props.data.allLocationsJson.edges[0].node}\n      Location={props.location}\n      Headline={props.data.allLocationsJson.edges[0].node.about.headline}\n    />\n  );\n};\n\nexport default LocationLandingPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n//\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const query = graphql`\n  query($Slug: String!) {\n    allLocationsJson(filter: { slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          slug\n          name\n          geography {\n            city\n            state\n            country\n          }\n          status {\n            delivery\n            store\n          }\n          meta {\n            reserveSpot\n            menu\n            maps\n          }\n          contactDetails {\n            phone\n            location {\n              address\n              state\n            }\n            hours {\n              days\n              startTime\n              endTime\n            }\n          }\n          nearby {\n            name\n            slug\n          }\n          about {\n            headline\n            PageTheme {\n              Color {\n                Background\n                Primary\n                Secondary\n                Tertiary\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle Flex={Flex}>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  src,\n  AltText,\n  className,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={src}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    AltText={AltText}\n    className={className ? className : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// Convert #HEXCODES to RGBA\n// hexToRGB('#FF0000', 0.5);\n\nconst hexToRGB = (hex, alpha) => {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  } else {\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n  }\n};\n\nexport default hexToRGB;\n","// <SimpleListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SimpleListStyle = styled.div`\n  display: flex;\n`;\n\nSimpleListStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSimpleListStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: 0.6;\n      font-size: 1.2rem;\n      padding-bottom: calc(${Theme.Base.Size.Sm} / 2);\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default SimpleListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SimpleListStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleList = ({ List, TextColor }) => (\n  <SimpleListStyle className=\"simple-list\" TextColor={TextColor}>\n    <SimpleListStyle.List TextColor={TextColor}>\n      {List.map((item, index) => {\n        return (\n          <SimpleListStyle.Item key={index}>\n            <span>{item.Label}</span>\n            <span>{item.Data}</span>\n          </SimpleListStyle.Item>\n        );\n      })}\n    </SimpleListStyle.List>\n  </SimpleListStyle>\n);\n\nexport default SimpleList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SuggestionListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SuggestionListStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size} / 4);\n      font-size: 0.8rem;\n      text-transform: uppercase;\n      letter-spacing: 1px;\n\n      &:first-child {\n        opacity: 0.3;\n      }\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 0.8rem;\n          text-transform: uppercase;\n          letter-spacing: 1px;\n          font-weight: normal;\n          padding: 0 calc(${Root.Size} / 4);\n        }\n      }\n    }\n  }\n`;\n\nexport default SuggestionListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SuggestionList Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport SuggestionListStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst SuggestionList = ({\n  List,\n  Label,\n  BaseUrl,\n  TextColor,\n  GradientColor,\n  Padding,\n  Affix,\n}) => (\n  <SuggestionListStyle\n    className=\"suggestion-list\"\n    GradientColor={GradientColor}\n    Padding={Padding}\n  >\n    <ul>\n      {Label ? <li>{Label}</li> : null}\n      {List.map((item, index) => (\n        <li key={index}>\n          <Btn\n            BgColor=\"none\"\n            Label={item.name}\n            Destination={\n              Affix ? BaseUrl + item.slug + Affix : BaseUrl + item.slug\n            }\n            TextColor={TextColor}\n          />\n        </li>\n      ))}\n    </ul>\n  </SuggestionListStyle>\n);\n\nexport default SuggestionList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AwardBadgeStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardBadgeStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: calc(${Root.Size} * 3);\n  height: calc(${Root.Size} * 3);\n  background: ${Theme.Color.Primary};\n  color: ${Theme.Color.White};\n  border-radius: 50%;\n  box-shadow: 0 0px 8px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  text-align: center;\n  padding: ${Theme.Base.Size.Sm};\n\n  .img {\n    width: 50%;\n  }\n\n  span {\n    margin-top: calc(${Theme.Base.Size.Sm} * 0.75);\n    padding-top: calc(${Theme.Base.Size.Sm} * 0.75);\n    text-align: center;\n    width: 100%;\n    position: relative;\n    font-weight: bold;\n    font-size: 0.9rem;\n    line-height: 1.3;\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: 50%;\n      top: 0;\n      transform: translateX(-50%);\n      height: 1px;\n      width: ${Theme.Base.Size.Md};\n      background: ${Theme.Color.White};\n    }\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    left: 3%;\n    right: 3%;\n    top: 3%;\n    bottom: 3%;\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 50%;\n  }\n`;\n\nexport default AwardBadgeStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport AwardBadgeStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Text, TextColor, BgColor }) => (\n  <AwardBadgeStyle TextColor={TextColor} BgColor={BgColor}>\n    <ImgMatch src=\"logos/leafly.png\" AltText=\"Leafly\" />\n    <span>{Text}</span>\n  </AwardBadgeStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AwardHoursStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardHoursStyle = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: stretch;\n  flex: 1;\n\n  .simple-list {\n    padding-left: calc(${Root.Size} / 2);\n    margin-left: calc(${Root.Size} / 2);\n    border-left: 1px solid\n      ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    display: flex;\n    align-items: center;\n    ul {\n      justify-content: center;\n    }\n  }\n`;\n\nAwardHoursStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nAwardHoursStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: 0.6;\n      font-size: 1.2rem;\n      padding-bottom: calc(${Theme.Base.Size.Sm} / 2);\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default AwardHoursStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport AwardBadge from 'components/library/AwardBadge';\nimport SimpleList from 'components/library/SimpleList';\n\n// Styles\nimport AwardHoursStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Hours, TextColor }) => (\n  <AwardHoursStyle TextColor={TextColor}>\n    <AwardBadge\n      Logo=\"leafly\"\n      Text=\"2018 Voted Best Boutique Dispensary\"\n      BgColor={Theme.Color.Primary}\n      TextColor={Theme.Color.White}\n    />\n    <SimpleList TextColor={TextColor} List={Hours} />\n  </AwardHoursStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <PageTabsStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const PageTabsStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size});\n      font-size: 1.5rem;\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.8rem;\n          font-weight: normal;\n          padding: 0;\n          box-shadow: none;\n          opacity: 0.6;\n\n          &:hover {\n            box-shadow: none;\n            opacity: 1;\n          }\n        }\n\n        &.active {\n          .btn-inner {\n            font-weight: bold;\n            opacity: 1;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTabsStyle;\n//////////////////////////////////////////////////////////////////////\n","// PageTabs Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport PageTabsStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst PageTabs = ({\n  List,\n  Label,\n  Location,\n  BaseUrl,\n  TextColor,\n  Padding,\n  Affix,\n}) => {\n  return (\n    <PageTabsStyle className=\"page-tabs\" Padding={Padding}>\n      <ul>\n        {List.map((item, index) => {\n          // Creating slugs.\n          const DestinationPath = Affix\n            ? BaseUrl + item.slug + Affix\n            : BaseUrl + item.slug;\n          const LocationPath = Location.pathname;\n          const LocationPathWithSlash = Location.pathname + '/';\n\n          // Helper function to match our locations.\n          function matchPath(destination, currentLocation) {\n            // If location & destination match:\n            if (destination == currentLocation) {\n              let className = 'active';\n              return className;\n            } else {\n              // Check and see if our destination matches without the\n              // last `/` of the url. I.e. `locations/reno vs locations/reno/`\n              if (destination == currentLocation.slice(0, -1)) {\n                let className = 'active';\n                return className;\n              } else {\n                // Then inactive:\n                let className = 'inactive';\n                return 'inactive';\n              }\n            }\n          }\n\n          // Return PageTabs.\n          return (\n            <li key={index}>\n              <Btn\n                AddClass={matchPath(DestinationPath, LocationPathWithSlash)}\n                BgColor=\"none\"\n                Label={item.name}\n                Destination={DestinationPath}\n                TextColor={TextColor}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </PageTabsStyle>\n  );\n};\n\nexport default PageTabs;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport AwardHours from 'components/library/AwardHours';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\nimport PageTabs from 'components/library/PageTabs';\nimport SimpleList from 'components/library/SimpleList';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// LocationPageWrapper component for page theming.\nconst LocationPageWrapper = ({\n  children,\n  Headline,\n  LocationData,\n  Location,\n}) => {\n  const LocationTheme = LocationData.about.PageTheme;\n\n  return (\n    <Layout\n      BgColor={LocationTheme.Color.Background}\n      PrimaryColor={LocationTheme.Color.Primary}\n      SecondaryColor={LocationTheme.Color.Secondary}\n      TertiaryColor={LocationTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={LocationTheme.Color.Background}\n        PrimaryColor={LocationTheme.Color.Primary}\n        SecondaryColor={LocationTheme.Color.Secondary}\n        TertiaryColor={LocationTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[2, 0, 1.45, 0]}\n          Flex=\"row\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <Block maxWidth={0.5}>\n            {/* <Bread\n              Crumbs={[\n                {\n                  Destination: 'locations/',\n                  Label: 'Locations',\n                },\n                {\n                  Destination: 'locations/',\n                  Label: LocationData.geography.state,\n                },\n                {\n                  Destination:\n                    'locations/' +\n                    LocationData.geography.state.toLowerCase() +\n                    '/' +\n                    LocationData.slug,\n                  Label: LocationData.name,\n                },\n              ]}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n            <h1 className=\"h2\">{LocationData.about.headline}</h1>\n            <Btn\n              IconClass=\"plus\"\n              Label=\"View Menu\"\n              BgColor={LocationTheme.Color.Primary}\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={\n                '/menu/' +\n                LocationData.geography.state.toLowerCase() +\n                '/' +\n                LocationData.slug\n              }\n              IconPosition=\"left\"\n              IconFas\n            />\n            <Btn\n              AddClass=\"btn-secondary\"\n              IconClass=\"map-marker-alt\"\n              Label={LocationData.contactDetails.location.address}\n              BgColor=\"none\"\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={LocationData.meta.maps}\n              IconPosition=\"left\"\n              External\n              IconFas\n            />\n            {/* <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n          </Block>\n          <Block Flex=\"row\" maxWidth={0.5}>\n            <AwardHours\n              TextColor={LocationTheme.Color.Primary}\n              Hours={[\n                { Label: 'Mon - Sat', Data: '9am - 9pm' },\n                { Label: 'Sunday', Data: '10am - 6pm' },\n              ]}\n            />\n          </Block>\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <PageTabs\n            Location={Location}\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={[\n              { name: 'About', slug: '' },\n              { name: 'Specials', slug: 'specials' },\n              { name: 'Menu', slug: 'menu' },\n            ]}\n            TextColor={LocationTheme.Color.Primary}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n          Tint={0}\n          TintBorder\n        >\n          <SuggestionList\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={LocationData.nearby}\n            Affix=\"/menu\"\n            Label=\"Nearby\"\n            TextColor={LocationTheme.Color.Primary}\n            GradientColor={LocationTheme.Color.Background}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        {/* Begin page content. */}\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\nexport default LocationPageWrapper;\n"],"sourceRoot":""}