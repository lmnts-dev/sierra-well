{"version":3,"sources":["webpack:///./src/components/library/PageTabs/styles.scss.js","webpack:///./src/components/library/PageTabs/index.js","webpack:///./src/templates/Location/Components/LocationPageWrapper/styles.scss.js","webpack:///./src/templates/Location/Components/LocationPageWrapper/index.js","webpack:///./src/templates/Location/Landing/layout.js","webpack:///./src/templates/Location/Landing/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/helpers/Slugify.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/templates/Learn/Transformer/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/SuggestionList/styles.scss.js","webpack:///./src/components/library/SuggestionList/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/templates/Question/Transformer/index.js","webpack:///./src/templates/Location/Transformer/index.js","webpack:///./src/components/library/HeroStrip/styles.scss.js","webpack:///./src/components/library/HeroStrip/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SimpleList/styles.scss.js","webpack:///./src/components/library/SimpleList/index.js","webpack:///./src/components/library/Castle/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleHero/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleHero/index.js","webpack:///./src/components/library/Castle/components/CastleFullSplitSection/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleFullSplitSection/index.js","webpack:///./src/components/library/Castle/components/CastleSimpleSection/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleSimpleSection/index.js","webpack:///./src/components/library/Castle/components/CastleSplitSection/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleSplitSection/index.js","webpack:///./src/components/library/Castle/components/CastleSplitImageHero/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleSplitImageHero/index.js","webpack:///./src/components/library/Castle/components/CastlePromotionalStrip/styles.scss.js","webpack:///./src/components/library/Castle/components/CastlePromotionalStrip/index.js","webpack:///./src/components/library/Section/StickyScrollSection/styles.scss.js","webpack:///./src/components/library/Section/StickyScrollSection/index.js","webpack:///./src/components/library/Castle/components/CastleStickyGallery/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleStickyGallery/index.js","webpack:///./src/components/library/Castle/components/CastleWidgetRow/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleWidgetRow/index.js","webpack:///./src/components/library/Castle/index.js","webpack:///./src/components/library/AwardBadge/styles.scss.js","webpack:///./src/components/library/AwardBadge/index.js","webpack:///./src/components/library/AwardHours/styles.scss.js","webpack:///./src/components/library/AwardHours/index.js","webpack:///./src/components/library/SpecialsListings/styles.scss.js","webpack:///./src/components/library/SpecialsListings/index.js"],"names":["PageTabsStyle","styled","div","_templateObject","Root","Size","props","GradientColor","hexToRGB","Padding","Button","PageTabs","_ref","List","Location","Label","BaseUrl","TextColor","Affix","react_default","a","createElement","styles_scss","className","map","item","index","destination","currentLocation","DestinationPath","slug","LocationPathWithSlash","pathname","key","Btn","AddClass","slice","BgColor","name","Destination","LocationPageWrapperStyles","styles_scss_templateObject","Base","Media","Width","Md","Nav","Grid","Gutter","Left","Right","LocationPageWrapper","children","SpecialsPage","Headline","LocationData","LocationTheme","about","PageTheme","Layout","Color","Background","PrimaryColor","Primary","SecondaryColor","Secondary","TertiaryColor","Tertiary","SubLevelPage","LocationPageWrapper_styles_scss","SimpleHero","Flex","Block","maxWidth","geography","city","state","headline","IconClass","slugify","toLowerCase","IconPosition","IconFas","contactDetails","location","address","meta","maps","External","AwardHours","Hours","hours","time","days","Data","start_time","library_PageTabs","Tint","TintBorder","SuggestionList","nearby","Theme","Nightsky","TemplateLayout","elements","SummaryHeadlineString","summary","Components_LocationPageWrapper","SpecialsListings","PageLocation","href","Castle","Bricks","LocationLandingTemplate","_ref2","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","query","LocationLandingPage","layout","locationLandingTransformer","data","allPrismicLocation","edges","node","pageContext","Specials","BlockStyle","flex","AlignItems","Style","css","_templateObject2","JustifyContent","BgTint","SiteWidth","BgMatch","BgQuery","BgAlt","ImgMatch","src","AltText","ImgQuery","SlideSectionStyle","Black","Inner","SectionInnerStyle","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","useTransform","infinite","arrows","settings","dots","speed","autoplaySpeed","draggable","nextArrow","prevArrow","responsive","breakpoint","Fragment","Helmet","rel","type","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","WidgetContent","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","WrapperLock","createGlobalStyle","WrapperRelease","WidgetSection","White","Slider","WidgetSection_styles_scss","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","string","p","RegExp","split","join","toString","replace","c","charAt","indexOf","SimpleSectionStyle","FluidHeight","SimpleSection","SimpleSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","categoryDataTransformer","categories","category","id","text","icon","Slug","uid","Breadcrumb","color_background","color_primary","color_secondary","color_tertiary","Tags","tags","tag","tag_name","tag_icon","tag_slug","SimpleHeroStyle","Hero","BreadCrumb","Link","Bread","Crumbs","crumb","SuggestionListStyle","nearby_name","nearby_slug","QuestionListingsStyles","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","length","categoryMap","allPrismicQuestionCategory","questionsMap","questionDataTransformer","allPrismicQuestion","Question","QuestionCategory","filteredCategory","title","coverImage","BgImageAltText","includes","Whitee","_3828252607","QuestionListings","QuestionListings_styles_scss","QuestionListings_QuestionCards","anObject","$flags","DESCRIPTORS","$toString","define","fn","source","flags","R","concat","undefined","global","inheritIfRequired","gOPN","isRegExp","$RegExp","proto","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","constructor","proxy","set","it","keys","isObject","setPrototypeOf","module","exports","that","target","C","P","S","check","O","TypeError","test","buggy","Array","__proto__","pIE","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","getOwnPropertyDescriptor","$keys","hiddenKeys","getOwnPropertyNames","SocialStripStyle","Margin","span","SocialStrip","question","isArray","questionPost","date","author","document","cover_image","localFile","childImageSharp","fluid","shortAnswer","short_answer","longAnswer","long_answer","geo_city","geo_state","country","geo_country","status","delivery","status_delivery","store","status_store","reserveSpot","meta_reserve_spot_link","menu","meta_menu","meta_google_maps_url","phone","geo_location_address","geo_location_state","nearby_locations","about_headline","featuredSpecials","featured_specials","HeroStripStyle","ViewWidthFontSize","HeroStrip","Items","HeroStrip_styles_scss","Item","Caption","SplitSectionStyle","Site","SplitSection","SplitSection_styles_scss","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_1344697354","QuestionFooter","HideCategories","QuestionFooter_BrowseCategories","SimpleListStyle","ul","li","SimpleList","CastleStyle","CastleHeroStyle","CastleHero","primaryData","primary","repeatableData","items","CastleHero_styles_scss","padding","background_color","background_image","text_color","tint_opacity","breadcrumb_url","breadcrumb_label","body_text","cta_destination","cta_label","cta_bg_color","cta_text_color","cta_icon","social_sharing","CastleFullSplitSection_styles_scss_templateObject","CastleSplitSection","CastleFullSplitSection_styles_scss","direction","image","alt","CastleSimpleSectionStyle","CastleSimpleSection_styles_scss_templateObject","CastleSimpleSection","CastleSimpleSection_styles_scss","text_alignment","CastleSplitSection_styles_scss_templateObject","CastleSplitSection_styles_scss","CastleSplitImageHero_styles_scss_templateObject","CastleSplitImageHero_styles_scss","CastlePromotionalStrip_styles_scss_templateObject","CastlePromotionalStrip_styles_scss","bg_color","caption","label","promotionalItemsTransformer","StickyScrollSectionStyle","StickyScrollSection_styles_scss_templateObject","ReleaseOverflow","StickyScrollSection_templateObject","StickyScrollSection","Gallery","GalleryQueries","StickyScrollSection_styles_scss","Subheadline","Body","Img","Src","Alt","Fluid","CastleStickyGallery_styles_scss_templateObject","CastleStickyGallery_styles_scss","Section_StickyScrollSection","subheadline","Query","galleryImgQueriesTransformer","CastleWidgetRow_styles_scss_templateObject","CastleWidgetRow","CastleWidgetRow_styles_scss","widget_destination","widget_bg_color","widget_background_image","widget_subheadline","widget_headline","widget_text_color","widget_icon_class","widget_tint_color","widget_tint_opacity","widgetContentTransformer","section_size","CastleBuilder","bricks","brick","slice_type","components_CastleHero","CastleFullSplitSection","components_CastleSplitSection","CastleSplitImageHero","CastlePromotionalStrip","CastleStickyGallery","components_CastleSimpleSection","components_CastleWidgetRow","Castle_CastleBuilder","AwardBadgeStyle","Text","AwardHoursStyle","AwardHours_styles_scss","AwardBadge","Logo","SpecialListingsStyle","SpecialsListings_templateObject","SpecialCards","allPrismicSpecial","Special","tagList","styledTagList","_2565930568","SpecialListings","SpecialsListings_styles_scss","SpecialsListings_SpecialCards"],"mappings":"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","file":"component---src-templates-location-landing-index-js-79ca7f52c2dd6e8446ed.js","sourcesContent":["// <PageTabsStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const PageTabsStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size});\n      font-size: 1.5rem;\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.8rem;\n          font-weight: normal;\n          padding: 0;\n          box-shadow: none;\n          opacity: 0.6;\n\n          &:hover {\n            box-shadow: none;\n            opacity: 1;\n          }\n        }\n\n        &.active {\n          .btn-inner {\n            font-weight: bold;\n            opacity: 1;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTabsStyle;\n//////////////////////////////////////////////////////////////////////\n","// PageTabs Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport PageTabsStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst PageTabs = ({\n  List,\n  Label,\n  Location,\n  BaseUrl,\n  TextColor,\n  Padding,\n  Affix,\n}) => {\n  return (\n    <PageTabsStyle className=\"page-tabs\" Padding={Padding}>\n      <ul>\n        {List.map((item, index) => {\n          // Creating slugs.\n          const DestinationPath = Affix\n            ? BaseUrl + item.slug + Affix\n            : BaseUrl + item.slug;\n          const LocationPath = Location.pathname;\n          const LocationPathWithSlash = Location.pathname + '/';\n\n          // Helper function to match our locations.\n          function matchPath(destination, currentLocation) {\n            // If location & destination match:\n            if (destination == currentLocation) {\n              let className = 'active';\n              return className;\n            } else {\n              // Check and see if our destination matches without the\n              // last `/` of the url. I.e. `locations/reno vs locations/reno/`\n              if (destination == currentLocation.slice(0, -1)) {\n                let className = 'active';\n                return className;\n              } else {\n                // Then inactive:\n                let className = 'inactive';\n                return 'inactive';\n              }\n            }\n          }\n\n          // Return PageTabs.\n          return (\n            <li key={index}>\n              <Btn\n                AddClass={matchPath(DestinationPath, LocationPathWithSlash)}\n                BgColor=\"none\"\n                Label={item.name}\n                Destination={DestinationPath}\n                TextColor={TextColor}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </PageTabsStyle>\n  );\n};\n\nexport default PageTabs;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// StickyScrollSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst LocationPageWrapperStyles = styled.div`\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  appearance: none;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    .simple-hero {\n      flex-direction: column;\n\n      .hero-content {\n        flex-direction: column;\n\n        .block {\n          padding: 0;\n        }\n      }\n\n      .hero-inner {\n        padding-top: calc(${Root.Nav.Size} + ${Root.Size});\n\n        .award-badge {\n          position: absolute;\n          right: calc(${Root.Size} * -1.2);\n          bottom: calc(${Root.Size} * -1);\n        }\n      }\n\n      /* Our Page Tabs */\n      &:nth-child(2) {\n        .hero-inner {\n          padding-top: 0;\n          padding-left: calc(${Root.Grid.Gutter.Left});\n          padding-right: calc(${Root.Grid.Gutter.Right});\n\n          .page-tabs {\n            ul {\n              display: flex;\n              justify-content: space-between;\n              li {\n                margin: 0;\n              }\n            }\n          }\n        }\n      }\n\n      /* Our Suggestion List */\n      &:nth-child(3) {\n        .hero-inner {\n          padding-top: calc(${Root.Size} / 2);\n          padding-left: calc(${Root.Grid.Gutter.Left});\n          padding-right: calc(${Root.Grid.Gutter.Right});\n\n          .page-tabs {\n            ul {\n              display: flex;\n              justify-content: space-between;\n              li {\n                margin: 0;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default LocationPageWrapperStyles;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport AwardHours from 'components/library/AwardHours';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\nimport PageTabs from 'components/library/PageTabs';\nimport SimpleList from 'components/library/SimpleList';\n\n// Styles\nimport LocationPageWrapperStyles from './styles.scss';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Helpers\nimport slugify from 'helpers/Slugify';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// LocationPageWrapper component for page theming.\nconst LocationPageWrapper = ({\n  children,\n  Headline,\n  SpecialsPage,\n  LocationData,\n  Location,\n}) => {\n  const LocationTheme = LocationData.about.PageTheme;\n\n  return (\n    <Layout\n      BgColor={LocationTheme.Color.Background}\n      PrimaryColor={LocationTheme.Color.Primary}\n      SecondaryColor={LocationTheme.Color.Secondary}\n      TertiaryColor={LocationTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={LocationTheme.Color.Background}\n        PrimaryColor={LocationTheme.Color.Primary}\n        SecondaryColor={LocationTheme.Color.Secondary}\n        TertiaryColor={LocationTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n        <LocationPageWrapperStyles>\n          <SimpleHero\n            Padding={[3, 1, 1.45, 1]}\n            Flex=\"row\"\n            TextColor={LocationTheme.Color.Primary}\n          >\n            <Block maxWidth={0.5}>\n              {/* <Bread\n              Crumbs={[\n                {\n                  Destination: 'locations/',\n                  Label: 'Locations',\n                },\n                {\n                  Destination: 'locations/',\n                  Label: LocationData.geography.state,\n                },\n                {\n                  Destination:\n                    'locations/' +\n                    slugify(LocationData.geography.state.toLowerCase()) +\n                    '/' +\n                    LocationData.slug,\n                  Label: LocationData.name,\n                },\n              ]}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n              {SpecialsPage ? (\n                <h1 className=\"h2\">\n                  Cannabis specials & deals in {LocationData.geography.city},{' '}\n                  {LocationData.geography.state}.\n                </h1>\n              ) : (\n                <h1 className=\"h2\">{LocationData.about.headline}</h1>\n              )}\n              <Btn\n                IconClass=\"plus\"\n                Label=\"View Menu\"\n                BgColor={LocationTheme.Color.Primary}\n                TextColor={LocationTheme.Color.Background}\n                Destination={\n                  '/menu/' +\n                  slugify(LocationData.geography.state.toLowerCase()) +\n                  '/' +\n                  LocationData.slug\n                }\n                IconPosition=\"left\"\n                IconFas\n              />\n              <Btn\n                AddClass=\"btn-secondary\"\n                IconClass=\"map-marker-alt\"\n                Label={LocationData.contactDetails.location.address}\n                BgColor=\"none\"\n                TextColor={LocationTheme.Color.Tertiary}\n                Destination={LocationData.meta.maps}\n                IconPosition=\"left\"\n                External\n                IconFas\n              />\n              {/* <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n            </Block>\n            <Block Flex=\"row\" maxWidth={0.5}>\n              <AwardHours\n                TextColor={LocationTheme.Color.Primary}\n                Hours={LocationData.contactDetails.hours.map((time, index) => {\n                  return {\n                    Label: time.days,\n                    Data: time.start_time,\n                  };\n                })}\n              />\n            </Block>\n          </SimpleHero>\n\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n\n          <SimpleHero\n            Padding={[0, 1, 0, 1]}\n            Flex=\"column\"\n            TextColor={LocationTheme.Color.Primary}\n            className=\"page-tab-wrapper\"\n          >\n            <PageTabs\n              Location={Location}\n              BaseUrl={\n                '/locations' +\n                '/' +\n                slugify(LocationData.geography.state.toLowerCase()) +\n                '/' +\n                LocationData.slug +\n                '/'\n              }\n              List={[\n                { name: 'About', slug: '' },\n                { name: 'Specials', slug: 'specials' },\n                { name: 'Menu', slug: 'menu' },\n              ]}\n              TextColor={LocationTheme.Color.Primary}\n              Padding={[0, 0, 0, 0]}\n            />\n          </SimpleHero>\n\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n\n          <SimpleHero\n            Padding={[0, 1, 0, 1]}\n            Flex=\"column\"\n            TextColor={LocationTheme.Color.Primary}\n            Tint={0}\n            TintBorder\n          >\n            <SuggestionList\n              BaseUrl={\n                '/locations' +\n                '/' +\n                slugify(LocationData.geography.state.toLowerCase()) +\n                '/' +\n                LocationData.slug +\n                '/'\n              }\n              List={LocationData.nearby}\n              Affix=\"/menu\"\n              Label=\"View Menu\"\n              TextColor={LocationTheme.Color.Primary}\n              GradientColor={LocationTheme.Color.Background}\n              Padding={[0, 0, 0, 0]}\n            />\n          </SimpleHero>\n        </LocationPageWrapperStyles>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        {/* Begin page content. */}\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\nexport default LocationPageWrapper;\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SpecialsListings from 'components/library/SpecialsListings';\n\n// Template Specific Components\nimport LocationPageWrapper from '../Components/LocationPageWrapper';\n\n// Castle.js by L&M\nimport Castle from 'components/library/Castle';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({\n  LocationData,\n  Location,\n  Headline,\n  SpecialsPage,\n  elements,\n}) => {\n  // Build our automatic summary headline.\n  let SummaryHeadlineString =\n    LocationData.name +\n    // eslint-disable-next-line\n    \"'s leading cannabis dispensary — where humans come first.\";\n\n  // Check if a headline exists. If it does, display it. If it doesn't, use SummaryHeadlineString.\n  let SummaryHeadline =\n    LocationData.about.summary.headline != ''\n      ? LocationData.about.summary.headline\n      : SummaryHeadlineString;\n\n  if (SpecialsPage == true) {\n    return (\n      <LocationPageWrapper\n        Headline={Headline}\n        LocationData={LocationData}\n        Location={Location}\n        SpecialsPage={SpecialsPage}\n      >\n        <SpecialsListings\n          BgColor={LocationData.about.PageTheme.Color.Background}\n          TextColor={LocationData.about.PageTheme.Color.Primary}\n          LocationData={LocationData}\n          PageLocation={Location.href}\n        />\n        {/* ///////////// */}\n      </LocationPageWrapper>\n    );\n  } else {\n    return (\n      <LocationPageWrapper\n        Headline={Headline}\n        LocationData={LocationData}\n        Location={Location}\n        SpecialsPage={SpecialsPage}\n      >\n        {/* Check if elements exist. If so, run Castle. If not, display nothing. */}\n        {elements ? (\n          <Castle Bricks={elements} Location={Location.href} />\n        ) : null}\n\n        {/* ///////////// */}\n      </LocationPageWrapper>\n    );\n  }\n};\n\n// The Template itself. Where it all begins.\nconst LocationLandingTemplate = ({\n  LocationData,\n  Location,\n  elements,\n  SpecialsPage,\n}) => {\n  return (\n    <TemplateLayout\n      LocationData={LocationData}\n      Location={Location}\n      elements={elements}\n      SpecialsPage={SpecialsPage}\n    />\n  );\n};\n\nexport default LocationLandingTemplate;\n","// templates/Location/Landing/index.js:\n// This is the Location Landing page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LocationLandingTemplate from './layout';\n\n// Transformers\nimport { locationLandingTransformer } from 'templates/Location/Transformer';\n\n// Load Castle Fragments\nimport 'components/library/Castle';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationLandingPage = props => {\n  return (\n    <LocationLandingTemplate\n      LocationData={\n        locationLandingTransformer(props.data.allPrismicLocation.edges[0].node)\n          .edges.node\n      }\n      elements={props.data.allPrismicLocation.edges[0].node.data.elements}\n      Location={props.location}\n      SpecialsPage={props.pageContext.Specials}\n      Headline={\n        locationLandingTransformer(props.data.allPrismicLocation.edges[0].node)\n          .edges.node.about.headline\n      }\n    />\n  );\n};\n\nexport default LocationLandingPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n//\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const query = graphql`\n  query($Id: String!) {\n    allPrismicLocation(filter: { id: { eq: $Id } }) {\n      edges {\n        node {\n          id\n          tags\n          uid\n\n          # Load our Castle Component data.\n          ...PrismicLocationElementsHeroData\n          ...PrismicLocationElementsFullSplitSectionData\n          ...PrismicLocationElementsSimpleSectionData\n          ...PrismicLocationElementsSplitSectionData\n          ...PrismicLocationElementsStickyGalleryData\n          ...PrismicLocationElementsSplitImageHeroData\n          ...PrismicLocationElementsPromotionalStripData\n          ...PrismicLocationElementsWidgetRowData\n\n          data {\n            name {\n              text\n            }\n            status_delivery\n            status_store\n            geo_city\n            geo_state\n            geo_country\n            geo_location_address\n            geo_location_state\n            phone\n            featured_specials {\n              label\n              caption\n              destination\n            }\n            hours {\n              days\n              start_time\n              end_time\n            }\n            meta_reserve_spot_link {\n              url\n            }\n            meta_menu {\n              url\n            }\n            meta_google_maps_url {\n              url\n            }\n            nearby_locations {\n              nearby_name\n              nearby_slug\n              color_background\n              color_primary\n              color_secondary\n              color_tertiary\n            }\n            about_headline {\n              text\n            }\n            color_background\n            color_primary\n            color_secondary\n            color_tertiary\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: calc(${Root.Size} / 2);\n    margin-bottom: calc(${Root.Size} / 2);\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n        top: calc((${Root.Size} * 1.8) * -1);\n        width: calc(${Root.Size} * 1.5);\n        height: calc(${Root.Size} * 1.5);\n      }\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n\n        @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n          right: calc((${Root.Size} * 1.5) + (${Root.Size} * 0.25));\n        }\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n        bottom: calc((${Root.Size} * .3) * -1);\n      }\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size} / 3) calc(${Root.Size} / 4);\n      height: ${props =>\n        props.SectionSize\n          ? 'calc((' + Root.Size + '* 3) * ' + props.SectionSize + ')'\n          : 'calc((' + Root.Size + '* 3) * 3)'};\n    }\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Nightsky)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: calc(${Root.Size} / 2);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const useTransform = this.props.SliderSettings.useTransform\n      ? this.props.SliderSettings.useTransform\n      : true;\n    const infinite = this.props.SliderSettings.infinite\n      ? this.props.SliderSettings.infinite\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: infinite,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n      useTransform: useTransform,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Md + 'px',\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle className=\"slide-section\">\n    <SlideSectionStyle.Inner Gutter={Gutter} className=\"slide-section-inner\">\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            {Header ? <h2>{Header}</h2> : null}\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n    padding-right: calc(${Root.Grid.Gutter.Right} + ${Root.Size});\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: ${props =>\n    props.JustifyContent ? props.JustifyContent : 'flex-start'};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible !important; \n      overflow: visible;\n      \n      .wrapper {\n        overflow-y: hidden;\n      }\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden; \n      overflow-y: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden;\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      min-height: 150px;\n\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n  JustifyContent,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n    className=\"hero-inner\"\n  >\n    <HeroContentStyle\n      className=\"hero-content\"\n      JustifyContent={JustifyContent}\n      Flex={Flex}\n    >\n      {children}\n    </HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: calc(${Root.Size} / 5);\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: calc(${Root.Size} / 5);\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: calc(${Root.Size} / 5);\n    top: calc(${Root.Size} / 5);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: calc(${Root.Size} / 5);\n  top: calc(${Root.Size} / 5);\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Root.Grid.Gutter.Right};\n  width: ${Root.Grid.Gutter.Left};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle className=\"sidebar\">\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      {/* <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      /> */}\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n\n  .post-details {\n    opacity: 0.4;\n    display: block;\n    margin-bottom: calc(${Root.Size} / 4);\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-bottom: calc(${Root.Nav.Size} + ${Root.Size});\n  }\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","//  Turn strings into slugs.\n\nconst slugify = string => {\n  const a = 'àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœṕŕßśșțùúüûǘẃẍÿź·/_,:;';\n  const b = 'aaaaaaaaceeeeghiiiimnnnoooooprssstuuuuuwxyz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with ‘and’\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n};\n\nexport default slugify;","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n    .img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  /* -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000; */\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  /* column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    column-width: 100%;\n    column-count: 1;\n  } */\n\n\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    flex: 30%;\n    margin: calc(${Root.Size} / 5);\n    width: 30%;\n    display: flex;\n    color: ${Theme.Color.White};\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n\n    a, i {\n      color: ${Theme.Color.White};\n    }\n    \n    svg {\n      fill: ${Theme.Color.White};\n    }\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    .widget-content {\n      flex: auto;\n      margin: calc(${Root.Size} / 5) 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { node } from 'prop-types';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Categories Map\nexport const tagDataTransformer = tags => {\n  if (tags) {\n    let tagsMap = tags.map((tag, index) => {\n      return {\n        Name: tag.tag_name,\n        Icon: tag.tag_icon,\n        Slug: tag.tag_slug,\n      };\n    });\n\n    return tagsMap;\n  } else {\n    return null;\n  }\n};\n\n// Function to create our Categories Map\nexport const categoryDataTransformer = categories => {\n  if (categories) {\n    let categoriesMap = categories.map((category, index) => {\n      return {\n        node: {\n          id: category.node.id,\n          Name: category.node.data.name ? category.node.data.name.text : '',\n          Icon: category.node.data.icon,\n          Headline: category.node.data.headline,\n          Slug: category.node.uid,\n          Breadcrumb: {\n            Destination: '/learn/all/',\n            Label: 'All Questions',\n          },\n          PageTheme: {\n            Color: {\n              Background: category.node.data.color_background,\n              Primary: category.node.data.color_primary,\n              Secondary: category.node.data.color_secondary,\n              Tertiary: category.node.data.color_tertiary,\n            },\n          },\n          Tags: tagDataTransformer(category.node.data.tags),\n        },\n      };\n    });\n\n    return categoriesMap;\n  } else {\n    return 'null';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  JustifyContent,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'simple-hero tint' : 'simple-hero'}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      JustifyContent={JustifyContent}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: calc((${Root.Size} / 4) * -1);\n      transform: translateY(-50%);\n      width: 2px;\n      height: 2px;\n      border-radius: 50%;\n      background-color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    svg {\n      transform: rotate(180deg) translateX(0%);\n      transform-origin: center center;\n      width: 1rem;\n      height: 1rem;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n      transition: all 0.25s ease;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    }\n\n    &:hover {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      text-decoration: none;\n      svg {\n        transform: rotate(180deg) translateX(50%);\n      }\n    }\n  }\n`;\n\nBreadCrumb.Label = styled(Link)`\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc((${Root.Size} / 4) * 1.75);\n  position: relative;\n  text-transform: capitalize;\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle TextColor={TextColor}>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label to={crumb.Destination} key={index}>\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SuggestionListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SuggestionListStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    touch-action: pan-x;\n    -webkit-overflow-scrolling: touch;\n    -webkit-transform: translate3d(0,0,0);\n    -webkit-backface-visibility: hidden;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size} / 4);\n      font-size: 0.8rem;\n      text-transform: uppercase;\n      letter-spacing: 1px;\n\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        letter-spacing: 0.3px;\n      }\n\n      &:first-child {\n        opacity: 0.3;\n        font-weight: normal;\n      }\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 0.8rem;\n          text-transform: uppercase;\n          letter-spacing: 1px;\n          font-weight: bold;\n          padding: 0 calc(${Root.Size} / 4);\n        }\n      }\n    }\n  }\n`;\n\nexport default SuggestionListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SuggestionList Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport SuggestionListStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst SuggestionList = ({\n  List,\n  Label,\n  BaseUrl,\n  TextColor,\n  GradientColor,\n  Padding,\n  Affix,\n}) => (\n  <SuggestionListStyle\n    className=\"suggestion-list\"\n    GradientColor={GradientColor}\n    Padding={Padding}\n  >\n    <ul>\n      {Label ? <li>{Label}</li> : null}\n      {List.map((item, index) => (\n        <li key={index}>\n          <Btn\n            BgColor=\"none\"\n            Label={item.nearby_name}\n            Destination={\n              Affix\n                ? BaseUrl + item.nearby_slug + Affix\n                : BaseUrl + item.nearby_slug\n            }\n            TextColor={TextColor}\n          />\n        </li>\n      ))}\n    </ul>\n  </SuggestionListStyle>\n);\n\nexport default SuggestionList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SpecialsListings> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const QuestionListingsStyles = styled.div`\n  appearance: none;\n`;\n\nQuestionListingsStyles.Header = styled.div`\n  padding-left: ${Root.Grid.Gutter.Left};\n  padding-right: ${Root.Grid.Gutter.Right};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Nightsky)};\n`;\n\nexport default QuestionListingsStyles;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Transformers\nimport { questionDataTransformer } from 'templates/Question/Transformer';\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Styles\nimport QuestionListingsStyles from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Slug === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory.length > 0) {\n      return matchedCategory[0].node;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          ## Prismic Sourcing\n\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n\n          allPrismicQuestion {\n            edges {\n              node {\n                id\n                uid\n                tags\n                data {\n                  title {\n                    text\n                  }\n                  short_answer\n                  long_answer\n                  date\n                  author {\n                    id\n                    document {\n                      id\n                      ... on PrismicPerson {\n                        data {\n                          name {\n                            html\n                            text\n                          }\n                        }\n                      }\n                    }\n                  }\n                  category {\n                    uid\n                  }\n                  cover_image {\n                    alt\n                    localFile {\n                      id\n                      childImageSharp {\n                        fluid(maxWidth: 1200) {\n                          ...GatsbyImageSharpFluid\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        const questionsMap = questionDataTransformer(\n          data.allPrismicQuestion.edges\n        );\n\n        // console.log('categoryMap');\n        // console.log(categoryMap);\n\n        // console.log('questionsMap');\n        // console.log(questionsMap);\n\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        return (\n          <>\n            {questionsMap.map((Question, index) => {\n              let QuestionCategory = Question.node.category\n                ? Question.node.category\n                : 'none';\n\n              // console.log('QuestionCategory');\n              // console.log(QuestionCategory);\n\n              // return <h1>Masonry</h1>;\n              // If the Question's Category is the same as the Filter supplied:\n              if (QuestionCategory == CategoryFilter) {\n                // If there isn't a TagFilter applied:\n                if (TagFilter == 'all') {\n                  // Use our helper function above to find the right Category's Data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    CategoryFilter\n                  );\n\n                  return (\n                    <DefaultWidget\n                      BgColor={filteredCategory.PageTheme.Color.Background}\n                      TextColor={filteredCategory.PageTheme.Color.Primary}\n                      Destination={\n                        '/learn' + QuestionSlugString + '/' + Question.node.slug\n                      }\n                      Subhead={filteredCategory.Name}\n                      Headline={Question.node.title}\n                      IconName={filteredCategory.Icon}\n                      IconColor={filteredCategory.PageTheme.Color.Primary}\n                      BgQuery={\n                        Question.node.coverImage\n                          ? Question.node.coverImage\n                          : false\n                      }\n                      BgImageAltText={\n                        QuestionCategory +\n                        ' & Cannabis | ' +\n                        Question.node.title\n                      }\n                      TintColor={Theme.Color.Black}\n                      TintOpacity={0.6}\n                      key={index}\n                    />\n                  );\n                } else {\n                  // If there is a TagFilter applied, check the Tags Array\n                  // to see if it includes our filter:\n                  if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                    // Use our helper function above to find the right Category's Data.\n                    let filteredCategory = categoryMatch(\n                      categoryMap,\n                      CategoryFilter\n                    );\n\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn' +\n                          QuestionSlugString +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    // If it doesn't match anything, return false. And cry.\n                    return null;\n                  }\n                }\n              } else {\n                // If we want to display all the Questions, let's make their\n                // slug their root category.\n                if (CategoryFilter == 'all') {\n                  // Use our helper function to match the Category data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    QuestionCategory\n                  );\n\n                  // console.log('all filteredCategory');\n                  // console.log(filteredCategory);\n                  // console.log('Question');\n                  // console.log(Question);\n\n                  if (filteredCategory) {\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn/' +\n                          filteredCategory.Slug +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    return (\n                      <DefaultWidget\n                        BgColor={Theme.Color.Black}\n                        TextColor={Theme.Color.Whitee}\n                        Destination={'/learn/' + Question.node.slug}\n                        Subhead=\"Cannabis Questions\"\n                        Headline={Question.node.title}\n                        IconName=\"question\"\n                        IconColor={Theme.Color.White}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={'Cannabis Q&A | ' + Question.node.title}\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  }\n                } else {\n                  // If nothing is supplied, don't return anything. Also, cry.\n                  return null;\n                }\n              }\n            })}\n          </>\n        );\n      }}\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  TextColor,\n  CategoryFilter,\n  TagFilter,\n  Header,\n}) => (\n  <QuestionListingsStyles>\n    {Header ? (\n      <QuestionListingsStyles.Header TextColor={TextColor}>\n        <h2>{Header}</h2>\n      </QuestionListingsStyles.Header>\n    ) : null}\n\n    <MasonrySection\n      Columns={3}\n      ColumnGap={0.25}\n      BgColor={BgColor ? BgColor : Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n    >\n      {/* If the CategoryFilter is supplied */}\n      {/* {console.log('CategoryFilter Passed:')}\n    {console.log(CategoryFilter)} */}\n\n      {CategoryFilter ? (\n        <QuestionCards\n          CategorySlug={CategorySlug}\n          TagSlug={TagSlug ? TagSlug : null}\n          CategoryFilter={CategoryFilter}\n          TagFilter={TagFilter ? TagFilter : 'all'}\n          AllCategories={AllCategories}\n        />\n      ) : (\n        // If it isn't, revert to 'all'\n        <QuestionCards\n          CategorySlug={CategorySlug}\n          TagSlug={TagSlug ? TagSlug : null}\n          CategoryFilter=\"all\"\n          TagFilter={TagFilter}\n          AllCategories={AllCategories}\n        />\n      )}\n    </MasonrySection>\n  </QuestionListingsStyles>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Columns Map\nexport const questionDataTransformer = question => {\n  // Check if it's empty first:\n  if (question) {\n    // If the question data is an array:\n    if (Array.isArray(question) == true) {\n      let questionMap = question.map((questionPost, index) => {\n        return {\n          node: {\n            id: questionPost.node.id ? questionPost.node.id : '',\n            slug: questionPost.node.uid ? questionPost.node.uid : '',\n            date: questionPost.node.data.date\n              ? questionPost.node.data.date\n              : '',\n            author: questionPost.node.data.author\n              ? questionPost.node.data.author.document[0].data.name.text\n              : 'Sierra Well',\n            coverImage: questionPost.node.data.cover_image.localFile\n              ? questionPost.node.data.cover_image.localFile.childImageSharp\n                  .fluid\n              : false,\n            title: questionPost.node.data.title.text\n              ? questionPost.node.data.title.text\n              : '',\n            category: questionPost.node.data.category\n              ? questionPost.node.data.category.uid\n              : '',\n            tags: questionPost.node.tags ? questionPost.node.tags : '',\n            shortAnswer: questionPost.node.data.short_answer\n              ? questionPost.node.data.short_answer\n              : '',\n            longAnswer: questionPost.node.data.long_answer\n              ? questionPost.node.data.long_answer\n              : '',\n          },\n        };\n        // return console.log(questionPost)\n      });\n\n      return questionMap;\n    }\n\n    // If it's not an array:\n    else {\n      let questionMap = {\n        id: question.id ? question.id : '',\n        slug: question.uid ? question.uid : '',\n        date: question.data.date ? question.data.date : '',\n        author: question.data.author\n          ? question.data.author.document[0].data.name.text\n          : 'Sierra Well',\n        coverImage: question.data.cover_image.localFile\n          ? question.data.cover_image.localFile.childImageSharp.fluid\n          : false,\n        title: question.data.title.text ? question.data.title.text : '',\n        category: question.data.category ? question.data.category.uid : '',\n        tags: question.tags ? question.tags : '',\n        shortAnswer: question.data.short_answer\n          ? question.data.short_answer\n          : '',\n        longAnswer: question.data.long_answer ? question.data.long_answer : '',\n      };\n\n      return questionMap;\n    }\n  }\n\n  // If the question data doesn't exist\n  else {\n    return 'No data supplied.';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic location.data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any location.data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Columns Map\nexport const locationLandingTransformer = location => {\n  if (location) {\n    let locationMap = {\n      edges: {\n        node: {\n          id: location.id,\n          slug: location.uid,\n          name: location.data.name.text,\n          geography: {\n            city: location.data.geo_city,\n            state: location.data.geo_state,\n            country: location.data.geo_country,\n          },\n          status: {\n            delivery: location.data.status_delivery,\n            store: location.data.status_store,\n          },\n          meta: {\n            reserveSpot: location.data.meta_reserve_spot_link,\n            menu: location.data.meta_menu,\n            maps: location.data.meta_google_maps_url,\n          },\n          contactDetails: {\n            phone: location.data,\n            location: {\n              address: location.data.geo_location_address,\n              state: location.data.geo_location_state,\n            },\n            hours: location.data.hours,\n          },\n          nearby: location.data.nearby_locations,\n          about: {\n            headline: location.data.about_headline.text,\n            PageTheme: {\n              Color: {\n                Background: location.data.color_background,\n                Primary: location.data.color_primary,\n                Secondary: location.data.color_secondary,\n                Tertiary: location.data.color_tertiary,\n              },\n            },\n            summary: {\n              headline: location.data.about_headline.text,\n            },\n          },\n          featuredSpecials: location.data.featured_specials,\n        },\n      },\n    };\n\n    return locationMap;\n  } else {\n    return 'null';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) calc(${Root.Size} / 2);\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.6;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.15;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// HeroStrip Component:\n// The HeroStrip component, typically used in Hero components.\n// Example: https://www.dropbox.com/s/fkq5n663abznqpt/Screenshot%202019-04-19%2018.20.13.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\n\n// Styles\nimport HeroStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst HeroStrip = ({ Items, BgColor, TextColor }) => (\n  <HeroStripStyle\n    className=\"hero-strip\"\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    <HeroStripStyle.Inner TextColor={TextColor}>\n      {Items.map((Item, index) => {\n        if (Item.Destination) {\n          return (\n            <div key={index} className=\"hero-strip-item focus\">\n              <Link to={Item.Destination}>\n                <span>{Item.Caption}</span>\n                <span>{Item.Label}</span>\n              </Link>\n            </div>\n          );\n        } else {\n          return (\n            <div key={index} className=\"hero-strip-item\">\n              <div>\n                <span>{Item.Caption}</span>\n                <span>{Item.Label}</span>\n              </div>\n            </div>\n          );\n        }\n      })}\n    </HeroStripStyle.Inner>\n  </HeroStripStyle>\n);\n\nexport default HeroStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: center;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Transformers\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        return (\n          <SlideSection\n            Widgets={categoryWidgets(categoryMap)}\n            SectionSize={6}\n            Header=\"Browse Categories\"\n            Gutter={[0, 1, 1, 1]}\n            Theme={{\n              TextColor: Theme.Color.Slate,\n              BgColor: 'none',\n            }}\n            SliderSettings={{\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              autoplay: false,\n              arrows: true,\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SimpleListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SimpleListStyle = styled.div`\n  display: flex;\n`;\n\nSimpleListStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSimpleListStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: 0.6;\n      font-size: 1.2rem;\n      padding-bottom: calc(${Root.Size} / 4);\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default SimpleListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SimpleListStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleList = ({ List, TextColor }) => (\n  <SimpleListStyle className=\"simple-list\" TextColor={TextColor}>\n    <SimpleListStyle.List TextColor={TextColor}>\n      {List.map((item, index) => {\n        return (\n          <SimpleListStyle.Item key={index}>\n            <span>{item.Label}</span>\n            <span>{item.Data}</span>\n          </SimpleListStyle.Item>\n        );\n      })}\n    </SimpleListStyle.List>\n  </SimpleListStyle>\n);\n\nexport default SimpleList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleHeroStyle = styled.div`\n  appearance: none;\n\n  .btn {\n    margin-right: calc(${Root.Size} / 4);\n  }\n`;\n\nexport default CastleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Simple Hero component:\n// slice_type: hero\n// example: https://www.dropbox.com/s/vp50dnga8ix2n8t/Screenshot%202019-05-07%2018.37.41.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport SocialStrip from 'components/library/SocialStrip';\nimport Bread from 'components/library/Breadcrumb';\nimport Btn from 'components/library/Btn/';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleHeroStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleHero Component\nconst CastleHero = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleHeroStyle>\n      <SimpleHero\n        Padding={\n          primaryData.padding\n            ? primaryData.padding.replace(/\\s/g, '').split(',')\n            : null\n        }\n        Background={primaryData.background_color}\n        BgQuery={\n          primaryData.background_image.localFile\n            ? primaryData.background_image.localFile.childImageSharp.fluid\n            : false\n        }\n        TextColor={primaryData.text_color}\n        Tint={primaryData.tint_opacity}\n      >\n        <Block AlignItems=\"flex-start\" Width={1} maxWidth={0.75}>\n          {/* Check for Breadcrumbs */}\n          {primaryData.breadcrumb_url ? (\n            <Bread\n              Crumbs={[\n                {\n                  Destination: primaryData.breadcrumb_url,\n                  Label: primaryData.breadcrumb_label,\n                },\n              ]}\n              TextColor={primaryData.text_color}\n            />\n          ) : null}\n\n          {/* Check for Headline */}\n          <h1 itemProp=\"name\">\n            {primaryData.headline.text\n              ? primaryData.headline.text\n              : 'Enter a headline...'}\n          </h1>\n          {primaryData.body_text ? (\n            <p className=\"p-lg\">{primaryData.body_text} </p>\n          ) : null}\n\n          {/* Check for CTA */}\n          {repeatableData[0].cta_destination != null\n            ? repeatableData.map((item, index) => {\n                return (\n                  <>\n                    <Btn\n                      Label={item.cta_label}\n                      BgColor={item.cta_bg_color}\n                      TextColor={item.cta_text_color}\n                      Destination={item.cta_destination}\n                      IconPosition={item.cta_icon ? 'left' : null}\n                      IconClass={item.cta_icon ? item.cta_icon : null}\n                      IconFas\n                    />\n                  </>\n                );\n              })\n            : null}\n\n          {/* Check if Social Sharing is enabled */}\n          {primaryData.social_sharing.toLowerCase() == 'yes' ? (\n            <SocialStrip\n              Margin={[0.35, 0, 0, 0]}\n              Location={location}\n              TextColor={primaryData.text_color}\n            />\n          ) : null}\n        </Block>\n      </SimpleHero>\n    </CastleHeroStyle>\n  );\n};\n\nexport default CastleHero;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n//\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n//\n// ///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsHeroData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsHero {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            text_alignment\n            background_color\n            text_color\n            tint_color\n            tint_opacity\n            padding\n            social_sharing\n            breadcrumb_url\n            breadcrumb_label\n            background_image {\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsHeroData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsHero {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            text_alignment\n            background_color\n            text_color\n            tint_color\n            tint_opacity\n            padding\n            social_sharing\n            breadcrumb_url\n            breadcrumb_label\n            background_image {\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleHeroStyle = styled.div`\n  appearance: none;\n\n  .block {\n    .block-content {\n      width: 100% !important;\n      align-items: stretch;\n    }\n  }\n\n  .btn {\n    margin-right: calc(${Root.Size} / 4);\n  }\n`;\n\nexport default CastleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Full Split Section component:\n// slice_type: full_split_section\n// example: https://www.dropbox.com/s/3s19gold67oyspe/Screenshot%202019-05-08%2017.00.10.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleFullSplitSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSplitSection Component\nconst CastleSplitSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleFullSplitSectionStyle>\n      <SplitSection\n        Flex={primaryData.direction == 'normal' ? 'row' : 'row-reverse'}\n      >\n        <Block\n          Padding={[1, 1, 1, 2]}\n          Width={0.5}\n          BgColor={primaryData.background_color}\n          TextColor={primaryData.text_color}\n        >\n          <h2>{primaryData.headline.text}</h2>\n          <p className=\"p-md\">{primaryData.body_text}</p>\n          {/* Check for CTA */}\n          {repeatableData[0].cta_destination != null\n            ? repeatableData.map((item, index) => {\n                return (\n                  <>\n                    <Btn\n                      Label={item.cta_label}\n                      BgColor={item.cta_bg_color}\n                      TextColor={item.cta_text_color}\n                      Destination={item.cta_destination}\n                      IconPosition={item.cta_icon ? 'left' : null}\n                      IconClass={item.cta_icon ? item.cta_icon : null}\n                      IconFas\n                    />\n                  </>\n                );\n              })\n            : null}\n        </Block>\n\n        <Block\n          Style=\"centered\"\n          BgColor={primaryData.background_color}\n          BgQuery={\n            primaryData.image.localFile\n              ? primaryData.image.localFile.childImageSharp.fluid\n              : null\n          }\n          BgAlt={primaryData.image.alt}\n          Width={0.5}\n        />\n      </SplitSection>\n    </CastleFullSplitSectionStyle>\n  );\n};\n\nexport default CastleSplitSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n//\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n//\n// ///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsFullSplitSectionData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsFullSplitSection {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            background_color\n            text_color\n            direction\n            image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsFullSplitSectionData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsFullSplitSection {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            background_color\n            text_color\n            direction\n            image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n\n  .cta-wrap {\n    display: flex;\n    .btn {\n      margin-right: calc(${Root.Size} / 4);\n    }\n  }\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection component:\n// slice_type: simple_section\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport SimpleSection from 'components/library/Section/SimpleSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleSimpleSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSimpleSection Component\nconst CastleSimpleSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleSimpleSectionStyle>\n      <SimpleSection\n        BgColor={primaryData.background_color}\n        BgMatch=\"placeholder_bg_4.jpg\"\n        BgTint={primaryData.tint_opacity}\n        BgAlt=\"Our Awesome Alt Tag\"\n        TextColor={primaryData.text_color}\n        Style={primaryData.text_alignment}\n      >\n        <Block\n          Style=\"centered\"\n          Padding={\n            primaryData.padding\n              ? primaryData.padding.replace(/\\s/g, '').split(',')\n              : null\n          }\n          maxWidth={0.5}\n        >\n          {/* Check for Headline */}\n          <h2>\n            {primaryData.headline.text\n              ? primaryData.headline.text\n              : 'Enter a headline...'}\n          </h2>\n\n          {/* Check for Body Text */}\n          {primaryData.body_text ? (\n            <p className=\"p-md\">{primaryData.body_text} </p>\n          ) : null}\n\n          {/* Check for CTA */}\n          <div className=\"cta-wrap\">\n            {repeatableData[0].cta_destination != null\n              ? repeatableData.map((item, index) => {\n                  return (\n                    <Btn\n                      Label={item.cta_label}\n                      BgColor={item.cta_bg_color}\n                      TextColor={item.cta_text_color}\n                      Destination={item.cta_destination}\n                      IconPosition={item.cta_icon ? 'left' : null}\n                      IconClass={item.cta_icon ? item.cta_icon : null}\n                      IconFas\n                      key={index}\n                    />\n                  );\n                })\n              : null}\n          </div>\n        </Block>\n      </SimpleSection>\n    </CastleSimpleSectionStyle>\n  );\n};\n\nexport default CastleSimpleSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n//\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n//\n// ///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsSimpleSectionData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsSimpleSection {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            subheadline\n            text_color\n            background_color\n            text_alignment\n            padding\n            tint_color\n            tint_opacity\n            bg_image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsSimpleSectionData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsSimpleSection {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            subheadline\n            text_color\n            background_color\n            text_alignment\n            padding\n            tint_color\n            tint_opacity\n            bg_image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n\n  .btn {\n    margin-right: calc(${Root.Size} / 4);\n  }\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection component:\n// slice_type: simple_section\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport SimpleSection from 'components/library/Section/SimpleSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleSplitSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSplitSection Component\nconst CastleSplitSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleSplitSectionStyle>\n      <SimpleSection\n        BgColor={primaryData.background_color}\n        TextColor={primaryData.text_color}\n        Gutter={[1, 0, 1, 1]}\n        Flex={primaryData.direction == 'normal' ? 'row' : 'row-reverse'}\n      >\n        <Block\n          Style=\"centered\"\n          BgColor={primaryData.background_color}\n          BgQuery={\n            primaryData.image.localFile\n              ? primaryData.image.localFile.childImageSharp.fluid\n              : null\n          }\n          BgAlt={primaryData.image.alt}\n          Width={0.5}\n        />\n\n        <Block\n          Padding={[3, 1, 3, 1]}\n          Width={0.5}\n          TextColor={primaryData.text_color}\n        >\n          <h2>{primaryData.headline.text}</h2>\n          <p className=\"p-md\">{primaryData.body_text}</p>\n          {/* Check for CTA */}\n          {repeatableData[0].cta_destination != null\n            ? repeatableData.map((item, index) => {\n                return (\n                  <>\n                    <Btn\n                      Label={item.cta_label}\n                      BgColor={item.cta_bg_color}\n                      TextColor={item.cta_text_color}\n                      Destination={item.cta_destination}\n                      IconPosition={item.cta_icon ? 'left' : null}\n                      IconClass={item.cta_icon ? item.cta_icon : null}\n                      IconFas\n                      key={index}\n                    />\n                  </>\n                );\n              })\n            : null}\n        </Block>\n      </SimpleSection>\n    </CastleSplitSectionStyle>\n  );\n};\n\nexport default CastleSplitSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n\n///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsSplitSectionData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsSplitSection {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            background_color\n            text_color\n            direction\n            image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsSplitSectionData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsSplitSection {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            background_color\n            text_color\n            direction\n            image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitImageHero component:\n// slice_type: split_image_hero\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport Bread from 'components/library/Breadcrumb/';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleSplitSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSplitSection Component\nconst CastleSplitSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleSplitSectionStyle>\n      <SimpleHero\n        imgLeft={primaryData.direction == 'normal' ? null : '0'}\n        imgRight={primaryData.direction == 'normal' ? '0' : null}\n        imgBottom=\"0\"\n        imgWidth=\"50%\"\n        Size={\n          primaryData.padding\n            ? primaryData.padding.replace(/\\s/g, '').split(',')\n            : null\n        }\n        className=\"simple-hero\"\n        Background={primaryData.background_color}\n        JustifyContent={primaryData.direction == 'normal' ? null : 'flex-end'}\n        BgQuery={\n          primaryData.background_image.localFile\n            ? primaryData.background_image.localFile.childImageSharp.fluid\n            : false\n        }\n        TextColor={primaryData.text_color}\n        Tint={primaryData.tint_opacity}\n      >\n        <Block AlignItems=\"flex-start\" Width={0.5}>\n          {/* Check for Breadcrumbs */}\n          {primaryData.breadcrumb_url ? (\n            <Bread\n              Crumbs={[\n                {\n                  Destination: primaryData.breadcrumb_url,\n                  Label: primaryData.breadcrumb_label,\n                },\n              ]}\n              TextColor={primaryData.text_color}\n            />\n          ) : null}\n\n          {/* Check for Headline */}\n          <h1>\n            {primaryData.headline.text\n              ? primaryData.headline.text\n              : 'Enter a headline...'}\n          </h1>\n\n          {/* Check for Body Text */}\n          {primaryData.body_text ? (\n            <p className=\"p-lg\">{primaryData.body_text} </p>\n          ) : null}\n\n          {/* Check for CTA */}\n          {repeatableData[0].cta_destination != null\n            ? repeatableData.map((item, index) => {\n                return (\n                  <Btn\n                    Label={item.cta_label}\n                    BgColor={item.cta_bg_color}\n                    TextColor={item.cta_text_color}\n                    Destination={item.cta_destination}\n                    IconPosition={item.cta_icon ? 'left' : null}\n                    IconClass={item.cta_icon ? item.cta_icon : null}\n                    IconFas\n                  />\n                );\n              })\n            : null}\n        </Block>\n        <Block className=\"hero-img\">\n          <ImgMatch src=\"hero-phone.png\" alt=\"100% Free Delivery\" />\n        </Block>\n      </SimpleHero>\n    </CastleSplitSectionStyle>\n  );\n};\n\nexport default CastleSplitSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n\n///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsSplitImageHeroData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsSplitImageHero {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            background_image {\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            body_text\n            background_color\n            text_color\n            direction\n            breadcrumb_label\n            breadcrumb_url\n            social_sharing\n            tint_color\n            tint_opacity\n            padding\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsSplitImageHeroData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsSplitImageHero {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            background_image {\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            body_text\n            background_color\n            text_color\n            direction\n            breadcrumb_label\n            breadcrumb_url\n            social_sharing\n            tint_color\n            tint_opacity\n            padding\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// PromotionalStrip component:\n// slice_type: simple_section\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport HeroStrip from 'components/library/HeroStrip';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleSplitSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSplitSection Component\nconst CastleSplitSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items.length > 0 ? data.items : 0;\n\n  // Function to create our Items map.\n  const promotionalItemsTransformer = data => {\n    if (data != 0) {\n      // Create a new map from Prismic Data.\n      let itemList = data.map((item, index) => {\n        return {\n          Caption: item.caption,\n          Label: item.label,\n          Destination: item.destination ? item.destination : null,\n        };\n      });\n\n      // Return new map.\n      return itemList;\n    } else {\n      // Else, don't return anything.\n      return null;\n    }\n  };\n\n  return (\n    <CastleSplitSectionStyle>\n      <HeroStrip\n        BgColor={\n          primaryData.bg_color ? primaryData.bg_color : Theme.Color.White\n        }\n        TextColor={\n          primaryData.text_color ? primaryData.text_color : Theme.Color.Nightsky\n        }\n        Items={promotionalItemsTransformer(repeatableData)}\n      />\n    </CastleSplitSectionStyle>\n  );\n};\n\nexport default CastleSplitSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n\n///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsPromotionalStripData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsPromotionalStrip {\n          slice_type\n          primary {\n            bg_color\n            text_color\n          }\n          items {\n            caption\n            label\n            destination\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsPromotionalStripData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsPromotionalStrip {\n          slice_type\n          primary {\n            bg_color\n            text_color\n          }\n          items {\n            caption\n            label\n            destination\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// StickyScrollSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst StickyScrollSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nStickyScrollSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: column;\n  }\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    padding: 0;\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nStickyScrollSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: column;\n  }\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n\n  .block {\n    .gallery-img {\n      padding: 0 0 calc(${Root.Size} / 2) 0;\n\n      &:last-child {\n        padding: 0;\n      }\n    }\n\n    &.sticky-block {\n      .block-content {\n        position: sticky;\n        top: calc(${Root.Nav.Size});\n        padding-bottom: ${Root.Size};\n        height: calc(100vh - ${Root.Nav.Size});\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n          padding-top: calc(${Root.Size} * 2);\n          height: auto;\n        }\n      }\n    }\n  }\n\n  .txt-caption {\n    font-size: 1.4rem;\n    font-weight: bold;\n    color: ${Theme.Color.Slate};\n    display: block;\n    margin-bottom: calc(${Root.Size} /  4);\n  }\n`;\n\nexport default StickyScrollSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// StickyScrollSection Component:\n// Desired outcome: https://www.dropbox.com/s/brll80qg306ywmk/Screenshot%202019-05-06%2015.01.12.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\nimport Block from 'components/library/Block';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport StickyScrollSectionStyle from './styles.scss';\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Enable Overflows\nexport const ReleaseOverflow = createGlobalStyle`\n  html, body {\n    overflow: visible;\n  }\n\n  .wrapper {\n    overflow: visible;\n  }\n`;\n\n// Render Element\nconst StickyScrollSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  Content,\n  Gallery,\n  GalleryQueries,\n  Gutter,\n  Flex,\n  Button,\n}) => (\n  <StickyScrollSectionStyle\n    Style={Style}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    <ReleaseOverflow />\n    <StickyScrollSectionStyle.Inner Gutter={Gutter}>\n      <StickyScrollSectionStyle.Content Flex={Flex} className=\"sticky-section\">\n        <Block Padding={[0, 1, 0, 1]} className=\"sticky-block\">\n          <span className=\"txt-caption\">{Content.Subheadline}</span>\n          <h2>{Content.Headline}</h2>\n          <p className=\"p-md\">{Content.Body}</p>\n\n          {/* Check if a Btn exists, display if so. */}\n          {Button ? (\n            <Btn\n              Label={Button.Label}\n              BgColor={Button.BgColor}\n              TextColor={Button.TextColor}\n              Destination={Button.Destination}\n              IconPosition=\"left\"\n              IconClass={Button.IconClass ? Button.IconClass : null}\n              IconFas\n            />\n          ) : null}\n        </Block>\n        <Block Padding={[0, 1, 0, 1]}>\n          {Gallery\n            ? Gallery.map((Img, index) => {\n                return (\n                  <div key=\"index\" className=\"gallery-img\">\n                    <ImgMatch src={Img.Src} AltText={Img.Alt} />\n                  </div>\n                );\n              })\n            : null}\n          {GalleryQueries\n            ? GalleryQueries.map((query, index) => {\n                return (\n                  <div key=\"index\" className=\"gallery-img\">\n                    <ImgQuery src={query.Fluid} AltText={query.Alt} />\n                  </div>\n                );\n              })\n            : null}\n        </Block>\n      </StickyScrollSectionStyle.Content>\n    </StickyScrollSectionStyle.Inner>\n  </StickyScrollSectionStyle>\n);\n\nexport default StickyScrollSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// StickyGallery component:\n// slice_type: sticky_gallery\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport StickyScrollSection from 'components/library/Section/StickyScrollSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleStickyGalleryStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSimpleSection Component\nconst CastleSimpleSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items.length > 0 ? data.items : 0;\n\n  // Function to create our GalleryQueries map.\n  const galleryImgQueriesTransformer = data => {\n    if (data != 0) {\n      // Create a new map from Prismic Data.\n      let queries = data.map((Query, index) => {\n        return {\n          Fluid: Query.src.localFile.childImageSharp.fluid\n            ? Query.src.localFile.childImageSharp.fluid\n            : false,\n          Alt: Query.src.alt,\n        };\n      });\n\n      // Return new map.\n      return queries;\n    } else {\n      // Else, return 0.\n      return 0;\n    }\n  };\n\n  return (\n    <CastleStickyGalleryStyle>\n      <StickyScrollSection\n        BgColor={primaryData.background_color}\n        TextColor={primaryData.text_color}\n        Content={{\n          Subheadline: primaryData.subheadline,\n          Headline: primaryData.headline.text,\n          Body: primaryData.body_text,\n        }}\n        Flex={primaryData.direction == 'normal' ? 'row' : 'row-reverse'}\n        GalleryQueries={galleryImgQueriesTransformer(repeatableData)}\n        Button={{\n          Label: primaryData.cta_label,\n          BgColor: primaryData.cta_bg_color,\n          TextColor: primaryData.cta_text_color,\n          Destination: primaryData.cta_destination,\n          IconClass: primaryData.cta_icon,\n        }}\n      />\n    </CastleStickyGalleryStyle>\n  );\n};\n\nexport default CastleSimpleSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n//\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n//\n// ///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsStickyGalleryData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsStickyGallery {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            subheadline\n            direction\n            body_text\n            background_color\n            text_color\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n          items {\n            src {\n              alt\n              copyright\n              url\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsStickyGalleryData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsStickyGallery {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            subheadline\n            direction\n            body_text\n            background_color\n            text_color\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n          items {\n            src {\n              alt\n              copyright\n              url\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// CastleWidgetRow component:\n// slice_type: widget_row\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Style Overrides\nimport CastleWidgetRowStyle from './styles.scss';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleWidgetRow Component\nconst CastleWidgetRow = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items.length > 0 ? data.items : 0;\n\n  // Function to create our Items map.\n  const widgetContentTransformer = data => {\n    if (data != 0) {\n      // Create a new map from Prismic Data.\n      let itemList = data.map((item, index) => {\n        return {\n          // Begin WidgetContent\n          Flex: 1,\n          WidgetContent: [\n            {\n              Destination: item.widget_destination,\n              Style: 'Generic',\n              Meta: {\n                Generic: {\n                  BgColor: item.widget_bg_color,\n                  BgQuery: item.widget_background_image.localFile\n                    ? item.widget_background_image.localFile.childImageSharp\n                        .fluid\n                    : false,\n                  Subhead: item.widget_subheadline,\n                  Headline: item.widget_headline.text,\n                  TextColor: item.widget_text_color,\n                  IconColor: item.widget_text_color,\n                  IconName: item.widget_icon_class, // FontAwesome Icon Name\n                  TintColor: item.widget_tint_color\n                    ? item.widget_tint_color\n                    : Theme.Color.Black,\n                  TintOpacity: item.widget_tint_opacity,\n                  IconSize: '',\n                },\n              },\n            },\n          ],\n          // End WidgetContent\n        };\n      });\n\n      // Return new map.\n      return itemList;\n    } else {\n      // Else, don't return anything.\n      return null;\n    }\n  };\n\n  return (\n    <CastleWidgetRowStyle>\n      <Block maxWidth=\"100%\">\n        <SlideSection\n          Widgets={widgetContentTransformer(repeatableData)}\n          SectionSize={primaryData.section_size}\n          Header={\n            primaryData.headline.text\n              ? primaryData.headline.text\n              : 'Keep Browsing'\n          }\n          Gutter={\n            primaryData.padding\n              ? primaryData.padding.replace(/\\s/g, '').split(',')\n              : null\n          }\n          Theme={{\n            TextColor: primaryData.text_color,\n            BgColor: primaryData.bg_color,\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: primaryData.autoplay == 'On' ? true : false,\n            arrows: true,\n          }}\n        />\n      </Block>\n    </CastleWidgetRowStyle>\n  );\n};\n\nexport default CastleWidgetRow;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n//\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n//\n// ///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsWidgetRowData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsWidgetRow {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            section_size\n            text_color\n            bg_color\n            padding\n            autoplay\n          }\n          items {\n            widget_headline {\n              text\n            }\n            widget_background_image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            widget_destination\n            widget_subheadline\n            widget_icon_class\n            widget_text_color\n            widget_bg_color\n            widget_tint_color\n            widget_tint_opacity\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsWidgetRowData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsWidgetRow {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            section_size\n            text_color\n            bg_color\n            padding\n            autoplay\n          }\n          items {\n            widget_headline {\n              text\n            }\n            widget_background_image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n            widget_destination\n            widget_subheadline\n            widget_icon_class\n            widget_text_color\n            widget_bg_color\n            widget_tint_color\n            widget_tint_opacity\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// ::::::::      :::      ::::::::  ::::::::::: :::        ::::::::::\n// :+:    :+:   :+: :+:   :+:    :+:     :+:     :+:        :+:\n// +:+         +:+   +:+  +:+            +:+     +:+        +:+\n// +#+        +#++:++#++: +#++:++#++     +#+     +#+        +#++:++#\n// +#+        +#+     +#+        +#+     +#+     +#+        +#+\n// #+#    #+# #+#     #+# #+#    #+#     #+#     #+#        #+#\n//  ########  ###     ###  ########      ###     ########## ##########\n//\n// Castle.js // By Peter Laxalt // www.laxaltandmciver.co\n// This is the page builder for Elements.\n// Future regex for matching {{ variables }} https://regex101.com/r/xgOodL/1\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport CastleStyle from './styles.scss';\n\n// Components\nimport CastleHero from './components/CastleHero';\nimport CastleFullSplitSection from './components/CastleFullSplitSection';\nimport CastleSimpleSection from './components/CastleSimpleSection';\nimport CastleSplitSection from './components/CastleSplitSection';\nimport CastleSplitImageHero from './components/CastleSplitImageHero';\nimport CastlePromotionalStrip from './components/CastlePromotionalStrip';\nimport CastleStickyGallery from './components/CastleStickyGallery';\nimport CastleWidgetRow from './components/CastleWidgetRow';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Castle\nclass CastleBuilder extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  // Render\n  render() {\n    const bricks = this.props.Bricks;\n    const location = this.props.Location;\n\n    return (\n      <>\n        {bricks.map((brick, index) => {\n          switch (brick.slice_type) {\n            case 'hero':\n              return (\n                <CastleHero data={brick} location={location} key={index} />\n              );\n            case 'full_split_section':\n              return (\n                <CastleFullSplitSection\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'split_section':\n              return (\n                <CastleSplitSection\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'split_image_hero':\n              return (\n                <CastleSplitImageHero\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'promotional_strip':\n              return (\n                <CastlePromotionalStrip\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'sticky_gallery':\n              return (\n                <CastleStickyGallery\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'simple_section':\n              return (\n                <CastleSimpleSection\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'widget_row':\n              return (\n                <CastleWidgetRow data={brick} location={location} key={index} />\n              );\n          }\n        })}\n      </>\n    );\n  }\n}\n\nconst Castle = ({ Bricks, Location }) => (\n  <CastleStyle>\n    <CastleBuilder Bricks={Bricks} Location={Location} />\n  </CastleStyle>\n);\n\nexport default Castle;\n","// <AwardBadgeStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardBadgeStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: calc(${Root.Size} * 3);\n  height: calc(${Root.Size} * 3);\n  background: ${Theme.Color.Primary};\n  color: ${Theme.Color.White};\n  border-radius: 50%;\n  box-shadow: 0 0px 8px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  text-align: center;\n  padding: calc(${Root.Size} / 2);\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    width: calc(${Root.Size} * 4);\n    height: calc(${Root.Size} * 4);\n  }\n\n  .img {\n    width: 50%;\n  }\n\n  span {\n    margin-top: calc((${Root.Size} / 6) * 0.75);\n    padding-top: calc((${Root.Size} / 6) * 0.75);\n    text-align: center;\n    width: 100%;\n    position: relative;\n    font-weight: bold;\n    font-size: 0.9rem;\n    line-height: 1.3;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      font-size: 0.4rem;\n      line-height: 1.1;\n      text-transform: uppercase;\n      width: 80%;\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: 50%;\n      top: 0;\n      transform: translateX(-50%);\n      height: 1px;\n      width: ${Theme.Base.Size.Md};\n      background: ${Theme.Color.White};\n    }\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    left: 3%;\n    right: 3%;\n    top: 3%;\n    bottom: 3%;\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 50%;\n  }\n`;\n\nexport default AwardBadgeStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport AwardBadgeStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Text, TextColor, BgColor }) => (\n  <AwardBadgeStyle\n    className=\"award-badge\"\n    TextColor={TextColor}\n    BgColor={BgColor}\n  >\n    <ImgMatch src=\"logos/leafly.png\" AltText=\"Leafly\" />\n    <span>{Text}</span>\n  </AwardBadgeStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AwardHoursStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardHoursStyle = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: stretch;\n  flex: 1;\n\n  .simple-list {\n    padding-left: calc(${Root.Size} / 2);\n    margin-left: calc(${Root.Size} / 2);\n    border-left: 1px solid\n      ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    display: flex;\n    align-items: center;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      border-left: none;\n      padding-left: 0;\n      margin-left: 0;\n    }\n\n    ul {\n      justify-content: center;\n\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        display: flex;\n        flex-direction: row;\n        padding: 0;\n\n        li {\n          margin-right: calc(${Root.Size} / 2);\n          font-size: 0.6rem;\n        }\n      }\n    }\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    flex-direction: row-reverse;\n  }\n`;\n\nAwardHoursStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nAwardHoursStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: 0.6;\n      font-size: 1.2rem;\n      padding-bottom: calc((${Root.Size} / 2) / 2);\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        font-size: 0.5rem;\n      }\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n      @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n        font-size: 0.5rem;\n      }\n    }\n  }\n`;\n\nexport default AwardHoursStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport AwardBadge from 'components/library/AwardBadge';\nimport SimpleList from 'components/library/SimpleList';\n\n// Styles\nimport AwardHoursStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Hours, TextColor }) => (\n  <AwardHoursStyle className=\"award-hours\" TextColor={TextColor}>\n    <AwardBadge\n      Logo=\"leafly\"\n      Text=\"2018 Voted Best Boutique Dispensary\"\n      BgColor={Theme.Color.Primary}\n      TextColor={Theme.Color.White}\n    />\n    <SimpleList TextColor={TextColor} List={Hours} />\n  </AwardHoursStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SpecialListingsStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SpecialListingsStyle = styled.div`\n  appearance: none;\n  position: relative;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White}\n\n  &:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    background-color: ${Theme.Color.Black};\n    opacity: 0.1;\n  }\n\n  .masonry-section {\n    .widget-content {\n      z-index: 100;\n\n      &:first-child {\n        width: 100%;\n        flex: 100%;\n        display: block;\n      }\n      &:nth-child(2) {\n        width: 100%;\n        flex: 100%;\n        display: block;\n      }\n\n      .tag {\n        text-transform: capitalize;\n        display: inline-block;\n        font-size: 1rem;\n        margin-right: calc(${Root.Size} / 6);\n        position: relative;\n\n        &:before {\n          content: '';\n          position: absolute;\n          right: calc(((${Root.Size} / 6) / 1.7) * -1);\n          top: 50%;\n          transform: translateY() (-50%);\n          width: 2px;\n          height: 2px;\n          border-radius: 50%;\n          background-color: ${Theme.Color.White};\n        }\n\n        &:last-child {\n          margin-right: 0;\n          &:before {\n            display: none;\n          }\n        }\n      }\n    }\n  }\n\n  .hero-strip {\n    position: sticky;\n    top: ${Root.Nav.Size};\n    z-index: 400;\n    /* background-color: rgba(255, 255, 255, 0.1) !important;\n    span {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.White} !important;      \n    } */\n  }\n`;\n\nSpecialListingsStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n  padding-left: ${Root.Grid.Gutter.Left};\n  padding-right: ${Root.Grid.Gutter.Right};\n\n  h2 {\n    padding-bottom: 0;\n    margin-bottom: 0;\n    margin-top: ${Root.Size};\n  }\n`;\n\nSpecialListingsStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Nightsky)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nexport default SpecialListingsStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport HeroStrip from 'components/library/HeroStrip';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SpecialListingsStyle from './styles.scss';\nimport { createGlobalStyle } from 'styled-components';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Enable Overflows\nexport const ReleaseOverflow = createGlobalStyle`\n  html, body {\n    overflow: visible;\n  }\n\n  .wrapper {\n    overflow: visible;\n  }\n`;\n\n// The Specials Cards.\nconst SpecialCards = ({ PageLocation }) => {\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allPrismicSpecial {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  title {\n                    text\n                  }\n                  icon\n                  tags\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  cover_image {\n                    alt\n                    localFile {\n                      id\n                      childImageSharp {\n                        fluid(maxWidth: 1200) {\n                          ...GatsbyImageSharpFluid\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allPrismicSpecial.edges.map((Special, index) => {\n          let tagList = Special.node.data.tags.replace(/\\s/g, '').split(',');\n          let styledTagList =\n            tagList.length > 0\n              ? tagList.map((tag, index) => (\n                  <span className=\"tag\" index={index}>\n                    {tag}\n                  </span>\n                ))\n              : 'Specials';\n\n          return (\n            <DefaultWidget\n              BgColor={Special.node.data.color_background}\n              TextColor={Special.node.data.color_primary}\n              Destination={PageLocation + '/' + Special.node.uid}\n              Subhead={styledTagList}\n              Headline={Special.node.data.title.text}\n              IconName={Special.node.data.icon}\n              IconColor={Special.node.data.color_primary}\n              BgQuery={\n                Special.node.data.cover_image.localFile\n                  ? Special.node.data.cover_image.localFile.childImageSharp\n                      .fluid\n                  : false\n              }\n              // BgImageFile={Question.node.coverImage}\n              BgImageAltText={\n                Special.node.data.cover_image.localFile\n                  ? Special.node.data.cover_image.alt\n                  : null\n              }\n              TintColor={\n                Special.node.data.cover_image.localFile\n                  ? Theme.Color.Black\n                  : null\n              }\n              TintOpacity={Special.node.data.cover_image.localFile ? 0.6 : null}\n              key={index}\n            >\n              {/* {console.log(tagList)} */}\n            </DefaultWidget>\n          );\n        })\n      }\n    />\n  );\n};\n\nconst SpecialListings = ({\n  Gutter,\n  BgColor,\n  TextColor,\n  LocationData,\n  PageLocation,\n  Header,\n}) => {\n  // Function to create our Promotional Items map.\n  const promotionalItemsTransformer = data => {\n    if (data != 0) {\n      // Create a new map from Prismic Data.\n      let itemList = data.map((item, index) => {\n        return {\n          Caption: item.caption,\n          Label: item.label,\n          Destination: item.destination ? item.destination : null,\n        };\n      });\n\n      // Return new map.\n      return itemList;\n    } else {\n      // Else, don't return anything.\n      return null;\n    }\n  };\n\n  return (\n    <SpecialListingsStyle\n      className=\"specials-listings\"\n      BgColor={BgColor}\n      TextColor={TextColor}\n    >\n      <ReleaseOverflow />\n      {LocationData ? (\n        LocationData.featuredSpecials.length > 0 ? (\n          <HeroStrip\n            BgColor={Theme.Color.White}\n            TextColor={Theme.Color.Nightsky}\n            Items={promotionalItemsTransformer(LocationData.featuredSpecials)}\n          />\n        ) : null\n      ) : null}\n\n      {Header ? (\n        <SpecialListingsStyle.SectionHeader>\n          <SpecialListingsStyle.Headline TextColor={TextColor}>\n            <h2>{Header}</h2>\n          </SpecialListingsStyle.Headline>\n        </SpecialListingsStyle.SectionHeader>\n      ) : null}\n\n      <MasonrySection\n        Columns={3}\n        ColumnGap={0.25}\n        BgColor={BgColor ? BgColor : Theme.Color.White}\n        TextColor={TextColor ? TextColor : Theme.Color.Nightsky}\n        Gutter={Gutter ? Gutter : [0.5, 1, 2, 1]}\n      >\n        {/* {console.log(LocationData.featuredSpecials.length)} */}\n        <SpecialCards PageLocation={PageLocation} />\n      </MasonrySection>\n    </SpecialListingsStyle>\n  );\n};\n\nexport default SpecialListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}