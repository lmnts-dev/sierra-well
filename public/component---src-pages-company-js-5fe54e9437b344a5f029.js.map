{"version":3,"sources":["webpack:///./src/pages/company.js","webpack:///./src/elements/Icons/styles.scss.js","webpack:///./src/elements/Icons/SVG/Carat.js","webpack:///./src/elements/Icons/index.js","webpack:///./src/components/core/HorizontalContent/styles.scss.js","webpack:///./src/components/library/Widgets/Container/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/index.js","webpack:///./src/components/library/Widgets/Container/index.js","webpack:///./src/components/core/HorizontalContent/index.js","webpack:///./src/components/core/VerticalContent/styles.scss.js","webpack:///./src/components/core/VerticalContent/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_media__WEBPACK_IMPORTED_MODULE_1__","react_media__WEBPACK_IMPORTED_MODULE_1___default","components_core_Layout__WEBPACK_IMPORTED_MODULE_2__","components_core_HorizontalContent__WEBPACK_IMPORTED_MODULE_3__","components_core_VerticalContent__WEBPACK_IMPORTED_MODULE_4__","constants_Theme__WEBPACK_IMPORTED_MODULE_5__","constants_styles_Base__WEBPACK_IMPORTED_MODULE_6__","PageTheme","Color","Background","Primary","Secondary","Theme","Tertiary","LargeContent","a","createElement","SmallContent","Index","_ref","data","BgColor","PrimaryColor","SecondaryColor","TertiaryColor","query","minWidth","Base","Media","Width","Md","render","maxWidth","IconStyle","styled","span","_templateObject","Root","IconSize","props","Black","Carat","react_default","width","height","viewBox","fillRule","transform","points","Error","className","Icon","Name","styles_scss","SVG_Carat","Icons_Error","HorizontalContentStyle","div","Footer","Size","Inner","_templateObject2","Sm","FadeIn","Slide","_templateObject3","Nav","_templateObject4","Column","_templateObject5","Divider","ColWidth","_templateObject6","WidgetContainerStyle","styles_scss_templateObject","styles_scss_templateObject2","Radius","Transition","Duration","CssEase","WidgetStyle","Default_styles_scss_templateObject","White","TextColor","BgImage","TintColor","TintOpacity","ViewWidthPadding","Subhead","Default_styles_scss_templateObject2","ViewWidthFontSize","Headline","styles_scss_templateObject3","i","styles_scss_templateObject4","Widget","Destination","IconColor","IconName","Default_styles_scss","gatsby_browser_entry","to","Icons","WidgetContainer","WidgetContent","Container_styles_scss","map","Content","index","Default","key","Tahoe","Dank","Nightsky","WrapperLock","createGlobalStyle","HorizontalContent_templateObject","SimpleSlider","_this","_React$Component","call","this","handleWheel","bind","assertThisInitialized_default","e","preventDefault","deltaY","slider","slickPrev","slickNext","_this2","Fragment","Helmet","rel","type","href","onWheel","lib_default","Object","assign","ref","c","dots","speed","arrows","slidesToShow","infinite","children","React","Component","SlideColumns","Container","HorizontalContent","HorizontalContent_SimpleSlider","HorizontalContent_SlideColumns","VerticalContentStyle","VerticalContent_templateObject","VerticalContent"],"mappings":"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","file":"component---src-pages-company-js-5fe54e9437b344a5f029.js","sourcesContent":["// Index.js:\n// This is the home page of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport Media from 'react-media';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport HorizontalContent from 'components/core/HorizontalContent';\nimport VerticalContent from 'components/core/VerticalContent';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Page Theme\nconst PageTheme = {\n  Color: {\n    Background: 'Lavender',\n    Primary: 'Lavender',\n    Secondary: Theme.Color.Secondary,\n    Tertiary: Theme.Color.Tertiary,\n  },\n};\n\n// Large Device Content\nconst LargeContent = () => <HorizontalContent />;\n\n// Small Device Content\nconst SmallContent = () => <VerticalContent />;\n\n// Render Page\nconst Index = ({ data }) => (\n  <Layout\n    BgColor={PageTheme.Color.Background}\n    PrimaryColor={PageTheme.Color.Primary}\n    SecondaryColor={PageTheme.Color.Secondary}\n    TertiaryColor={PageTheme.Color.Tertiary}\n  >\n    <Media\n      query={{ minWidth: Base.Media.Width.Md }}\n      render={() => <LargeContent />}\n    />\n\n    <Media\n      query={{ maxWidth: Base.Media.Width.Md }}\n      render={() => <SmallContent />}\n    />\n  </Layout>\n);\n\nexport default Index;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst IconStyle = styled.span`\n  font-size: ${Root.IconSize};\n  line-height: 0;\n  height: ${Root.IconSize};\n  width: ${Root.IconSize};\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n\n  svg {\n    fill: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n  }\n`;\n\nexport default IconStyle;\n","// Carat Icon:\n// Simple carat (>) icon.\n\n// Core\nimport React from 'react';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Carat = () => (\n  <svg width=\"13px\" height=\"22px\" viewBox=\"0 0 13 22\">\n    <g fillRule=\"evenodd\">\n      <g transform=\"translate(-488.000000, -591.000000)\" fillRule=\"nonzero\">\n        <polygon points=\"488.428658 592.571342 489.571342 591.428658 500.142685 602 489.571342 612.571342 488.428658 611.428658 497.857315 602\" />\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Carat;\n","// Icons Component:\n//\n// https://fontawesome.com/icons/\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Styles\nimport IconStyle from './styles.scss';\n\n// Icon Files\nimport Carat from './SVG/Carat';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst Error = () => {\n  <i className=\"fas fa-exclamation-circle\" />;\n};\n\nconst Icon = props => {\n  switch (props.Name) {\n    case 'Carat':\n      return (\n        <IconStyle Color={props.Color}>\n          <Carat />\n        </IconStyle>\n      );\n    default:\n      return (\n        <IconStyle Color={props.Color}>\n          <Error />\n        </IconStyle>\n      );\n  }\n};\n\n// const Icon = ({ name }) => {\n//   <IconStyle>\n//     <IconsLibrary name={name} />\n//   </IconStyle>;\n// };\n\nexport default Icon;\n\n///////////////\n","// Layout Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframe\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst HorizontalContentStyle = styled.div`\n  width: 100%;\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: ${Root.Footer.Size};\n  overflow: visible;\n\n  .slick-list {\n    overflow: visible;\n  }\n`;\n\n// The Slide Group Wrapper\nHorizontalContentStyle.Inner = styled.div`\n  width: 100%;\n  padding: 0;\n\n  /* Padding on first slide */\n  .slick-slide {\n    padding: 0;\n    overflow: visible;\n    div {\n      outline: 0;\n      &:focus {\n        outline: 0;\n      }\n      .col {\n        &:first-child {\n          padding-left: ${Theme.Base.Size.Sm};\n        }\n      }\n    }\n    &:first-child {\n      padding: 0 0 0 ${Theme.Base.Size.Sm};\n      .col {\n        &:first-child {\n          padding-left: 0;\n        }\n      }\n    }\n  }\n\n  .widget {\n    ${FadeIn};\n  }\n`;\n\n// The Individual Slide Wrapper\nHorizontalContentStyle.Slide = styled.div`\n  width: 100%;\n  padding: 0;\n  overflow: visible;\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n`;\n\n// The Individual Slide Inner\nHorizontalContentStyle.Slide.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  overflow: visible;\n  padding-bottom: ${Theme.Base.Size.Sm};\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n`;\n\n// The Column Wrapper\nHorizontalContentStyle.Column = styled.div`\n  padding: ${Theme.Base.Size.Sm} ${Theme.Base.Size.Sm} ${Theme.Base.Size.Sm} 0;\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n  display: flex;\n  flex-direction: column;\n  flex: ${props => (props.Divider ? 'unset' : '1')};\n  width: ${props =>\n    props.ColWidth\n      ? props.ColWidth\n      : props.Divider\n      ? Theme.Base.Size.Md\n      : 'auto'};\n`;\n\nHorizontalContentStyle.Column.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  .widget {\n    &:first-child {\n      padding-top: 0;\n    }\n  }\n\n  ${props => {\n    if (props.Divider)\n      return `\n        width: ${Theme.Base.Size.Md};\n        &:before {\n          content: '';\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          left: calc(50% - ${Base.Size.Sm / 2 + 'px'});\n          width: 1px;\n          opacity: .05;\n          background-color: { Theme.Color.Indigo };\n        }\n    `;\n  }}\n`;\n\nexport default HorizontalContentStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetContainerStyle = styled.div`\n  padding-top: ${Theme.Base.Size.Sm};\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: center;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n`;\n\nexport default WidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n      transform: scale(1.3);\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Example Usage:\n// <Widget\n// WidgetContent={WidgetContent}\n// BgImage=\"https://source.unsplash.com/1600x1200/?cannabis\"\n// TintColor={Theme.Color.Black}\n// TintOpacity=\".5\"\n// Subhead=\"Subhead\"\n// Headline=\"Headline\"\n// TextColor={Theme.Color.White}\n// IconColor={Theme.Color.White}\n// IconName=\"graduation-cap\"\n// Destination=\"/subpage\"\n// />;\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Widget = ({\n  BgColor,\n  BgImage,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n  >\n    <Link to={Destination}>\n      <WidgetStyle.Subhead>{Subhead}</WidgetStyle.Subhead>\n      <WidgetStyle.Headline>{Headline}</WidgetStyle.Headline>\n      <Icon className=\"svg-carat\" Name=\"Carat\" Color={IconColor} />\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n    </Link>\n  </WidgetStyle>\n);\n\nexport default Widget;\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetContainerStyle from './styles.scss';\n\n// Components\nimport Widget from './../Library/Default/';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Widget Itself\nconst WidgetContainer = ({ WidgetContent }) => (\n  <WidgetContainerStyle className=\"widget\">\n    <WidgetContainerStyle.Inner>\n      {WidgetContent.map((Content, index) => (\n        <Widget\n          BgColor={Content.BgColor}\n          BgImage={Content.BgImage}\n          TextColor={Content.TextColor}\n          TintColor={Content.TintColor}\n          TintOpacity={Content.TintOpacity}\n          Destination={Content.Destination}\n          Subhead={Content.Subhead}\n          Headline={Content.Headline}\n          IconName={Content.IconName}\n          IconColor={Content.IconColor}\n          key={index}\n        />\n      ))}\n    </WidgetContainerStyle.Inner>\n  </WidgetContainerStyle>\n);\n\nexport default WidgetContainer;\n","// ScrollWrapper.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport posed, { PoseGroup } from 'react-pose';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\nimport HorizontalContentStyle from 'components/core/HorizontalContent/styles.scss';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Widget Content\n\nconst WidgetContent = [\n  {\n    BgColor: Theme.Color.Tahoe,\n    BgImage: 'https://source.unsplash.com/1600x1200/?cannabis',\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.White,\n    IconColor: Theme.Color.White, // FontAwesome Icon Name\n    IconName: 'rocket',\n    Destination: '/subpage',\n    TintColor: '#000000',\n    TintOpacity: '.4',\n    WidgetStyle: 'default',\n  },\n  {\n    BgColor: Theme.Color.Dank,\n    BgImage: 'none',\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.Black,\n    IconColor: Theme.Color.Black,\n    IconName: 'rocket',\n    Destination: '/subpage',\n    TintColor: '',\n    TintOpacity: '',\n    WidgetStyle: 'default',\n  },\n  {\n    BgColor: Theme.Color.Nightsky,\n    BgImage: 'none',\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.White,\n    IconColor: Theme.Color.White,\n    IconName: 'rocket',\n    Destination: '/subpage',\n    TintColor: '',\n    TintOpacity: '',\n    WidgetStyle: 'default',\n  },\n];\n\n// Lock Wrapper Scrollssss\nconst WrapperLock = createGlobalStyle`\n  .wrapper {\n    overflow: hidden;\n  }\n`;\n\n//  Pose Animation\n// const WidgetItem = posed(Widget)({\n//   enter: { opacity: 1 },\n//   exit: { opacity: 0 },\n// });\n\n// The Slider Itself\nclass SimpleSlider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleWheel = this.handleWheel.bind(this);\n  }\n\n  handleWheel(e) {\n    // Disable defaultss\n    e.preventDefault();\n\n    // Previous / Next Slide based on mouse scroll\n    if (e.deltaY < 0) {\n      this.slider.slickPrev();\n    } else {\n      this.slider.slickNext();\n    }\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: false,\n      speed: 1500,\n      arrows: false,\n      slidesToShow: 1.05,\n      infinite: false,\n    };\n\n    return (\n      <>\n        <WrapperLock />\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <div onWheel={e => this.handleWheel(e)}>\n          <Slider ref={c => (this.slider = c)} {...settings}>\n            {this.props.children}\n          </Slider>\n        </div>\n      </>\n    );\n  }\n}\n\nconst SlideColumns = () => (\n  <>\n    <HorizontalContentStyle.Column className=\"col\">\n      <HorizontalContentStyle.Column.Inner className=\"col-inner\">\n        <WidgetContainer WidgetContent={WidgetContent} />\n      </HorizontalContentStyle.Column.Inner>\n    </HorizontalContentStyle.Column>\n\n    <HorizontalContentStyle.Column Divider className=\"divider\">\n      <HorizontalContentStyle.Column.Inner Divider />\n    </HorizontalContentStyle.Column>\n  </>\n);\n\n// The Content Itself\nconst HorizontalContent = ({ children }) => (\n  <HorizontalContentStyle>\n    <HorizontalContentStyle.Inner>\n      <SimpleSlider>\n        <HorizontalContentStyle.Slide>\n          <HorizontalContentStyle.Slide.Inner>\n            <SlideColumns />\n          </HorizontalContentStyle.Slide.Inner>\n        </HorizontalContentStyle.Slide>\n      </SimpleSlider>\n    </HorizontalContentStyle.Inner>\n  </HorizontalContentStyle>\n);\n\nexport default HorizontalContent;\n","// Layout Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframe\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst VerticalContentStyle = styled.div`\n  width: 100%;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: calc(${Root.Nav.Size} + ${Theme.Base.Size.Sm});\n  padding-bottom: calc(${Root.Nav.Size} + ${Theme.Base.Size.Sm});\n`;\n\n// The Content Inner\nVerticalContentStyle.Inner = styled.div`\n  width: 100%;\n  padding: 0;\n\n  .widget {\n    ${FadeIn};\n  }\n`;\n\nexport default VerticalContentStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// ScrollWrapper.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport posed, { PoseGroup } from 'react-pose';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\nimport VerticalContentStyle from 'components/core/VerticalContent/styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scrolls\nconst WrapperLock = createGlobalStyle`\n  .wrapper {\n    overflow-y: auto;\n  }\n`;\n\n// The Content Itself\nconst VerticalContent = ({ children }) => (\n  <VerticalContentStyle>\n    <VerticalContentStyle.Inner>Vertical Content</VerticalContentStyle.Inner>\n  </VerticalContentStyle>\n);\n\nexport default VerticalContent;\n"],"sourceRoot":""}