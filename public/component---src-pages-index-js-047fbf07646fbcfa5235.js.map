{"version":3,"sources":["webpack:///./src/components/library/Widgets/Container/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Article/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideHeader/styles.scss.js","webpack:///./src/components/library/Widgets/Container/index.js","webpack:///./src/data/index.js","webpack:///./src/pages/index.js"],"names":["WidgetContainerStyle","styled","div","_templateObject","Theme","Base","Size","Sm","props","Flex","Inner","_templateObject2","Root","Radius","Transition","Duration","CssEase","Color","Black","WidgetStyle","styles_scss_templateObject","BgColor","White","TextColor","BgImage","TintColor","TintOpacity","ViewWidthPadding","Media","Width","Md","Subhead","styles_scss_templateObject2","ViewWidthFontSize","Headline","_templateObject3","Icon","i","_templateObject4","IconSize","SideHeader_styles_scss_templateObject","SideHeader_styles_scss_templateObject2","styles_scss_templateObject3","styles_scss_templateObject4","WidgetSlider","_React$Component","call","this","render","_this","react_default","a","createElement","Fragment","Helmet","rel","type","href","lib_default","Object","assign","ref","g","slider","dots","speed","arrows","autoplaySpeed","slidesToShow","autoplay","infinite","children","React","Component","WidgetType","_React$Component2","WidgetContent","Container_WidgetSlider","map","Content","index","Style","Default","Meta","Generic","Destination","IconName","IconColor","key","WidgetContainer","_ref","styles_scss","className","Container_WidgetType","Triple","Dank","BgPlaceholder","PageTheme","Background","Primary","Nightsky","Secondary","Tertiary","LargeContent","HorizontalContent","class","Container","SmallContent","VerticalContent","Index","data","Layout","PrimaryColor","SecondaryColor","TertiaryColor","DeviceQuery","Query","pages_LargeContent","pages_SmallContent"],"mappings":"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","file":"component---src-pages-index-js-047fbf07646fbcfa5235.js","sourcesContent":["// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetContainerStyle = styled.div`\n  padding-top: ${Theme.Base.Size.Sm};\n  width: 100%;\n  flex: ${props => (props.Flex ? props.Flex : '1')};\n  display: flex;\n  flex-direction: column;\n`;\n\nWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n\n  /* Slick Slider Adjustments */\n\n  .slick-slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    .slick-dots {\n      bottom: ${Theme.Base.Size.Sm};\n      left: ${Theme.Base.Size.Sm};\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .slick-slider,\n  .slick-list,\n  .slick-track {\n    flex: 1;\n  }\n\n  .slick-list,\n  .slick-slider {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n  }\n\n  .slick-slide {\n    display: flex !important;\n    flex-direction: column;\n    align-items: stretch;\n    flex: 1;\n\n    &:first-child {\n      padding: 0;\n    }\n\n    div {\n      &:first-child {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n    }\n\n    .widget-content {\n      flex: 1;\n\n      div {\n        &:first-child {\n          flex: unset;\n          display: unset;\n          flex-direction: unset;\n          align-items: unset;\n        }\n      }\n    }\n  }\n`;\n\nexport default WidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport WidgetContainerStyle from './styles.scss';\n\n// Components\nimport DefaultWidget from '../Library/Default';\nimport ArticleWidget from '../Library/Article';\nimport SideHeaderWidget from '../Library/SideHeader';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Widget Slider:\n// For WidgetContainers with multiple widgets\n// inside of them.\nclass WidgetSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: true,\n      speed: 1500,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: 1,\n      autoplay: true,\n      infinite: true,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={g => (this.slider = g)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// WidgetType\nclass WidgetType extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  // Render\n  render() {\n    const WidgetContent = this.props.WidgetContent;\n    return (\n      <WidgetSlider>\n        {WidgetContent.map((Content, index) => {\n          switch (Content.Style) {\n            case 'Article':\n              return (\n                <DefaultWidget\n                  BgColor={Content.Meta.Generic.BgColor}\n                  BgImage={Content.Meta.Generic.BgImage}\n                  TextColor={Content.Meta.Generic.TextColor}\n                  TintColor={Content.Meta.Generic.TintColor}\n                  TintOpacity={Content.Meta.Generic.TintOpacity}\n                  Destination={Content.Destination}\n                  Subhead={Content.Meta.Generic.Subhead}\n                  Headline={Content.Meta.Generic.Headline}\n                  IconName={Content.Meta.Generic.IconName}\n                  IconColor={Content.Meta.Generic.IconColor}\n                  key={index}\n                />\n              );\n            case 'Generic':\n              return (\n                <DefaultWidget\n                  BgColor={Content.Meta.Generic.BgColor}\n                  BgImage={Content.Meta.Generic.BgImage}\n                  TextColor={Content.Meta.Generic.TextColor}\n                  TintColor={Content.Meta.Generic.TintColor}\n                  TintOpacity={Content.Meta.Generic.TintOpacity}\n                  Destination={Content.Destination}\n                  Subhead={Content.Meta.Generic.Subhead}\n                  Headline={Content.Meta.Generic.Headline}\n                  IconName={Content.Meta.Generic.IconName}\n                  IconColor={Content.Meta.Generic.IconColor}\n                  key={index}\n                />\n              );\n          }\n        })}\n      </WidgetSlider>\n    );\n  }\n}\n\nconst WidgetContainer = ({ WidgetContent, Flex }) => (\n  <WidgetContainerStyle className=\"widget\" Flex={Flex}>\n    <WidgetContainerStyle.Inner>\n      <WidgetType WidgetContent={WidgetContent} />\n    </WidgetContainerStyle.Inner>\n  </WidgetContainerStyle>\n);\n\nexport default WidgetContainer;\n","/* eslint-disable */\n\n// Images\nimport BgPlaceholder from '../assets/images/placeholder_bg.jpg';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// data/index.js:\n// Dummy data.\n// Core Widget Structure:\n// {\n//   Destination: '/subpage',\n//   Style: '',\n//   Meta: {\n//     Generic: {\n//       BgColor: '',\n//       BgImage: '',\n//       Subhead: '',\n//       Headline: '',\n//       TextColor: '',\n//       IconColor: '',\n//       IconName: '', // FontAwesome Icon Name\n//       TintColor: '',\n//       TintOpacity: '',\n//       IconSize: ''\n//     },\n\n//     SideHeader: {\n//       Headline: '',\n//       Intro: '',\n//       Body: ''\n//     },\n\n//     Article: {\n//       Type: '',\n//       Subhead: '',\n//       Headline: '',\n//       Excerpt: '',\n//       Category: '',\n//       Date: '',\n//       Location: '',\n//       Tags: [],\n//       Body: '',\n//       BgColor: '',\n//       BgImage: '',\n//       TextColor: '',\n//       IconColor: '',\n//       IconName: '', // FontAwesome Icon Name\n//       TintColor: '',\n//       TintOpacity: '',\n//       IconSize: ''\n//     },\n\n//     Category: {\n//       Label: '',\n//       BgColor: '',\n//       BgImage: '',\n//     },\n//   }\n// },\n\nexport const WidgetContent = {\n  Triple: [\n    {\n      Destination: '/subpage',\n      Style: 'Article',\n      Meta: {\n        Generic: {\n          BgColor: 'blue',\n          BgImage: '',\n          Subhead: 'Subhead',\n          Headline: 'Article',\n          TextColor: Theme.Color.White,\n          IconColor: Theme.Color.White,\n          IconName: 'robot', // FontAwesome Icon Name\n          TintColor: '#000000',\n          TintOpacity: '.4',\n          IconSize: '',\n        },\n      },\n    },\n    {\n      Destination: '/subpage',\n      Style: 'Generic',\n      Meta: {\n        Generic: {\n          BgColor: Theme.Color.Dank,\n          BgImage: '',\n          Subhead: 'Subhead',\n          Headline: 'Generic 1',\n          TextColor: Theme.Color.Black,\n          IconColor: Theme.Color.Black,\n          IconName: 'tree', // FontAwesome Icon Name\n          TintColor: '',\n          TintOpacity: '',\n          IconSize: '',\n        },\n      },\n    },\n    {\n      Destination: '/subpage',\n      Style: 'Generic',\n      Meta: {\n        Generic: {\n          BgColor: Theme.Color.Black,\n          BgImage: BgPlaceholder,\n          Subhead: 'Subhead',\n          Headline: 'Generic 2',\n          TextColor: Theme.Color.White,\n          IconColor: Theme.Color.White,\n          IconName: 'rocket', // FontAwesome Icon Name\n          TintColor: '#000000',\n          TintOpacity: '.4',\n          IconSize: '',\n        },\n      },\n    },\n  ]\n};\n","// Index.js:\n// This is the home page of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport Device from './../components/core/DeviceQuery';\nimport Layout from 'components/core/Layout';\n\n// Mobile Components\nimport VerticalContent from 'components/core/VerticalContent';\n\n// Desktop Components\nimport {\n  HorizontalContent,\n  SlideGroup,\n  Slide,\n  SlideColumn,\n} from 'components/core/HorizontalContent';\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Data\nimport { WidgetContent } from 'data';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Page Theme\nconst PageTheme = {\n  Color: {\n    Background: Theme.Color.Background,\n    Primary: Theme.Color.Nightsky,\n    Secondary: Theme.Color.Nightsky,\n    Tertiary: Theme.Color.Background,\n  },\n};\n\n// Large Device Content\nconst LargeContent = () => (\n  <HorizontalContent>\n    <SlideGroup class=\"home-slider\">\n      <Slide>\n        <SlideColumn>\n          <WidgetContainer WidgetContent={WidgetContent.Triple} />\n        </SlideColumn>\n\n        {/* <SlideColumn Divider />\n\n        <SlideColumn>\n          <WidgetContainer WidgetContent={WidgetContent.Double} />\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n        </SlideColumn>\n\n        <SlideColumn>\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n          <WidgetContainer WidgetContent={WidgetContent.Double} />\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n        </SlideColumn>\n\n        <SlideColumn>\n          <WidgetContainer WidgetContent={WidgetContent.Double} />\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n        </SlideColumn> */}\n      </Slide>\n\n      {/* <Slide>\n        <SlideColumn>\n          <WidgetContainer WidgetContent={WidgetContent.Single} Flex={1} />\n          <WidgetContainer WidgetContent={WidgetContent.Single} Flex={2} />\n        </SlideColumn>\n\n        <SlideColumn>\n          <WidgetContainer WidgetContent={WidgetContent.Double} Flex={1} />\n          <WidgetContainer WidgetContent={WidgetContent.Triple} Flex={2} />\n        </SlideColumn>\n\n        <SlideColumn>\n          <WidgetContainer WidgetContent={WidgetContent.Triple} />\n        </SlideColumn>\n\n        <SlideColumn Divider />\n\n        <SlideColumn>\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n        </SlideColumn>\n\n        <SlideColumn>\n          <WidgetContainer WidgetContent={WidgetContent.Single} />\n        </SlideColumn>\n      </Slide> */}\n    </SlideGroup>\n  </HorizontalContent>\n);\n\n// Small Device Content\nconst SmallContent = () => <VerticalContent />;\n\n// Render Page\nconst Index = ({ data }) => (\n  <Layout\n    BgColor={PageTheme.Color.Background}\n    PrimaryColor={PageTheme.Color.Primary}\n    SecondaryColor={PageTheme.Color.Secondary}\n    TertiaryColor={PageTheme.Color.Tertiary}\n  >\n    <Device Query=\"Desktop\">\n      <LargeContent />\n    </Device>\n\n    <Device Query=\"Mobile\">\n      <SmallContent />\n    </Device>\n  </Layout>\n);\n\nexport default Index;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}