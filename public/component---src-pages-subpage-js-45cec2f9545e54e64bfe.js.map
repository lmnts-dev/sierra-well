{"version":3,"sources":["webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/components/core/SubLevelPage/styles.scss.js","webpack:///./src/components/core/SubLevelPage/index.js","webpack:///./src/pages/subpage.js"],"names":["SidebarWidgetStyle","styled","div","_templateObject","Theme","Base","Size","Sm","FadeIn","Inner","_templateObject2","props","BgColor","Color","White","Root","Radius","Transition","Duration","CssEase","TextColor","Black","BgImage","TintColor","TintOpacity","Subhead","_templateObject3","Headline","_templateObject4","Icon","i","_templateObject5","SidebarWidget","_ref","IconName","IconColor","Destination","react_default","a","createElement","styles_scss","className","gatsby_browser_entry","to","Icons","Name","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Footer","Grid","Gutter","Left","Sidebar","children","PrimaryColor","SecondaryColor","TertiaryColor","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","Background","SubLevelPage_styles_scss_templateObject2","Right","SubLevelPage","SubLevelPage_styles_scss","Library_Sidebar","PageTheme","Dank","Primary","Secondary","Tertiary","Index","data","Layout","core_SubLevelPage"],"mappings":"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","file":"component---src-pages-subpage-js-45cec2f9545e54e64bfe.js","sourcesContent":["// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n      transform: scale(1.3);\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  bottom: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n        <Icon className=\"svg-carat\" Name=\"Carat\" Color={IconColor} />\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: sticky;\n  top: ${Root.Nav.Size};\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm} ${Theme.Base.Size.Sm} ${Root.Footer.Size}\n    ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Locations\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"rocket\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Culture\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"rocket\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Contact\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"rocket\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding-right: ${Root.Grid.Gutter.Right};\n\n  .content-stretch {\n    height: 200vh;\n    padding: ${Root.Size};\n  }\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner>{children}</SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\nexport default SubLevelPage;\n","// Index.js:\n// This is the home page of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport SubLevelPage from 'components/core/SubLevelPage';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Page Theme\nconst PageTheme = {\n  Color: {\n    Background: Theme.Color.Dank,\n    Primary: Theme.Color.Dank,\n    Secondary: Theme.Color.Black,\n    Tertiary: Theme.Color.Dank,\n  },\n};\n\nconst Index = ({ data }) => (\n  <Layout\n    BgColor={PageTheme.Color.Background}\n    PrimaryColor={PageTheme.Color.Primary}\n    SecondaryColor={PageTheme.Color.Secondary}\n    TertiaryColor={PageTheme.Color.Tertiary}\n  >\n    <SubLevelPage\n      BgColor={PageTheme.Color.Background}\n      PrimaryColor={PageTheme.Color.Primary}\n      SecondaryColor={PageTheme.Color.Secondary}\n      TertiaryColor={PageTheme.Color.Tertiary}\n    >\n      <div className=\"content-stretch\">\n        <h1>\n          Reno’s first Cannabis dispensary — located in the heart of downtown.\n        </h1>\n      </div>\n    </SubLevelPage>\n  </Layout>\n);\n\nexport default Index;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}