{"version":3,"sources":["webpack:///./src/templates/Learn/Category/layout.js","webpack:///./src/templates/Learn/Category/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js"],"names":["SlideSectionWithData","props","_React$Component","call","this","render","BaseUrl","BgColor","Data","PageTheme","Color","Background","TextColor","Secondary","Tags","CategorySlug","Slug","Widgets","map","Tag","index","Flex","WidgetContent","Destination","Style","Meta","Generic","BgImage","Subhead","Headline","Name","IconColor","IconName","Icon","TintColor","TintOpacity","IconSize","react_default","a","createElement","SlideSection","SectionSize","Header","Theme","Black","SliderSettings","slidesToShow","slidesToScroll","autoplay","arrows","React","Component","LearnSection","_ref","Category","Block","maxWidth","Padding","layout_SlideSectionWithData","PageWrapper","_ref2","children","Location","CategoryTheme","Layout","PrimaryColor","Primary","SecondaryColor","TertiaryColor","Tertiary","SubLevelPage","SimpleHero","className","Breadcrumb","Crumbs","Label","Btn","IconClass","IconPosition","SocialStrip","Margin","White","Nightsky","QuestionFooter","TemplateLayout","_ref3","layout_PageWrapper","node","layout_LearnSection","QuestionListings","CategoryFilter","TagFilter","Gutter","Snow","LearnCategoryTemplate","_ref4","Filter","Fragment","layout_TemplateLayout","key","__webpack_require__","d","__webpack_exports__","query","LearnCategoryPage","layout","data","allQuestionCategoriesJson","edges","location","href","BlockStyle","styled","div","_templateObject","flex","AlignItems","css","_templateObject2","JustifyContent","BgTint","Width","Base","Grid","SiteWidth","Root","Size","BgMatch","BgQuery","BgAlt","styles_scss","ImgMatch","src","AltText","ImgQuery","SlideSectionStyle","Sm","Inner","SectionInnerStyle","Left","Content","SectionContentStyle","_templateObject3","Media","Md","SectionHeader","_templateObject4","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","PrevArrow","SectionSlider","_settings","_this","ArrowColor","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","responsive","breakpoint","Helmet","rel","type","lib_default","ref","h","slider","ViewAll","SlideSection_styles_scss","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","WrapperLock","createGlobalStyle","WrapperRelease","SimpleSectionStyle","Right","FluidHeight","SimpleSection","SimpleSection_styles_scss","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SimpleHeroStyle","Nav","Tint","TintBorder","Hero","BreadCrumb","Link","Bread","crumb","to","WidgetSection","Slider","WidgetSection_styles_scss","SidebarWidgetStyle","FadeIn","Radius","i","SidebarWidget","gatsby_browser_entry","SidebarStyle","styles_scss_templateObject","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroStripStyle","ViewWidthFontSize","QuestionCards","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","slug","title","BgImageFile","coverImage","BgImageAltText","tags","includes","toLowerCase","_234893462","QuestionListings_QuestionCards","SocialStripStyle","span","target","BrowseCategories","categoryWidgets","widgetArray","viewAll","unshift","Slate","_4273665236","HideCategories","QuestionFooter_BrowseCategories"],"mappings":"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","file":"component---src-templates-learn-category-index-js-9faf9365265fc54534dd.js","sourcesContent":["// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/' + BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={this.props.Header ? this.props.Header : this.props.Data.Name}\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections.\nconst LearnSection = ({ Category }) => {\n  return (\n    <Block maxWidth=\"100%\" Padding={[0, 0, 0.5, 0]}>\n      <SlideSectionWithData Header=\"Related\" BaseUrl=\"learn\" Data={Category} />\n    </Block>\n  );\n};\n\n// PageWrapper component for page theming.\nconst PageWrapper = ({ children, Data, Location, Category, CategoryTheme }) => {\n  return (\n    <Layout\n      BgColor={CategoryTheme.Color.Background}\n      PrimaryColor={CategoryTheme.Color.Primary}\n      SecondaryColor={CategoryTheme.Color.Secondary}\n      TertiaryColor={CategoryTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={CategoryTheme.Color.Background}\n        PrimaryColor={CategoryTheme.Color.Primary}\n        SecondaryColor={CategoryTheme.Color.Secondary}\n        TertiaryColor={CategoryTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero TextColor={CategoryTheme.Color.Secondary}>\n          <Block className=\"blocksky\" maxWidth={0.75}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: Category.Breadcrumb.Destination,\n                  Label: Category.Breadcrumb.Label,\n                },\n              ]}\n              TextColor={CategoryTheme.Color.Secondary}\n            />\n            <h1 className=\"h2\">{Category.Headline}</h1>\n            <Btn\n              IconClass=\"intercom\"\n              Label=\"Ask a question\"\n              BgColor={CategoryTheme.Color.Tertiary}\n              TextColor={CategoryTheme.Color.Primary}\n              Destination=\"/learn/all\"\n              IconPosition=\"left\"\n            />\n            <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={CategoryTheme.Color.Secondary}\n            />\n          </Block>\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.White}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n\n        {/* The Question / Category / Tag footer. */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          <QuestionFooter />\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n\n        {/* ///////////// */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({ Category, Location }) => {\n  return (\n    <PageWrapper\n      CategoryTheme={Category.node.PageTheme}\n      Category={Category.node}\n      Location={Location}\n    >\n      <LearnSection Category={Category.node} />\n      <QuestionListings\n        CategoryFilter={Category.node.Name}\n        TagFilter=\"all\"\n        Gutter={[0, 1, 1, 1]}\n        BgColor={Theme.Color.Snow}\n        CategorySlug={Category.node.Slug}\n      />\n    </PageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LearnCategoryTemplate = ({ Filter, Location, Data }) => {\n  return (\n    <>\n      {Data.map((Category, index) => {\n        return (\n          <TemplateLayout key={index} Category={Category} Location={Location} />\n        );\n      })}\n    </>\n  );\n};\n\nexport default LearnCategoryTemplate;\n","// learn/all.js:\n// This is the overview of all Learn items.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LearnCategoryTemplate from './layout';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LearnCategoryPage = props => (\n  <LearnCategoryTemplate\n    Data={props.data.allQuestionCategoriesJson.edges}\n    Location={props.location.href}\n  />\n);\n\nexport default LearnCategoryPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n//\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const query = graphql`\n  query($Slug: String!) {\n    allQuestionCategoriesJson(filter: { Slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          Name\n          Icon\n          Headline\n          Slug\n          Tags {\n            Name\n            Icon\n            Slug\n          }\n          Breadcrumb {\n            Destination\n            Label\n          }\n          PageTheme {\n            Color {\n              Background\n              Primary\n              Secondary\n              Tertiary\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size}) calc(${Root.Size} / 4);\n      height: ${props =>\n        props.SectionSize\n          ? 'calc((' + Root.Size + '* 3) * ' + props.SectionSize + ')'\n          : 'calc((' + Root.Size + '* 3) * 3)'};\n    }\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Md + 'px',\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible !important; \n      overflow: visible;\n      \n      .wrapper {\n        overflow-y: hidden;\n      }\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden; \n      overflow-y: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden;\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n    .img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: ${props => (props.JustifyContent ? props.JustifyContent : 'flex-start')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n  JustifyContent,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle\n      className=\"hero-content\"\n      JustifyContent={JustifyContent}\n      Flex={Flex}\n    >\n      {children}\n    </HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  JustifyContent,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      JustifyContent={JustifyContent}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    column-width: 100%;\n    column-count: 1;\n  }\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}