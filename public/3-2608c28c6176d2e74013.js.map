{"version":3,"sources":["webpack:///./src/components/core/HorizontalContent/styles.scss.js","webpack:///./src/assets/images/placeholder_bg.jpg","webpack:///./src/components/core/HorizontalContent/index.js","webpack:///./src/components/library/Widgets/Container/SectionWidget/styles.scss.js","webpack:///./src/components/library/Widgets/Container/SectionWidget/index.js","webpack:///./src/components/library/SlideSection/styles.scss.js","webpack:///./src/components/library/SlideSection/index.js","webpack:///./src/components/core/VerticalContent/styles.scss.js","webpack:///./src/components/core/VerticalContent/index.js","webpack:///./src/components/library/Widgets/Library/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/index.js","webpack:///./src/components/library/Widgets/Container/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Article/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/index.js","webpack:///./src/components/library/Widgets/Library/SideHeader/styles.scss.js","webpack:///./src/components/library/Widgets/Container/index.js","webpack:///./src/components/core/HorizontalContent/SlideColumn/index.js","webpack:///./src/components/core/HorizontalContent/SlideContainer/index.js","webpack:///./src/components/core/HorizontalContent/WrapperLock/index.js","webpack:///./src/components/core/HorizontalContent/SlideGroup/index.js","webpack:///./node_modules/@babel/runtime/helpers/objectDestructuringEmpty.js"],"names":["HorizontalContentStyle","styled","div","_templateObject","Root","Footer","Size","Inner","_templateObject2","Theme","Base","Sm","FadeIn","Slide","_templateObject3","Nav","_templateObject4","Column","_templateObject5","props","Divider","ColWidth","Md","_templateObject6","module","exports","__webpack_require__","p","d","__webpack_exports__","HorizontalContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","components_core_HorizontalContent_styles_scss__WEBPACK_IMPORTED_MODULE_1__","_ref","children","a","createElement","SectionWidgetContainerStyle","Grid","Gutter","Left","Right","SectionSize","Radius","Transition","Duration","CssEase","Color","Black","SectionWidgetContainer","WidgetContent","react_default","styles_scss","className","Default","BgColor","BgImage","TextColor","TintColor","TintOpacity","Destination","Subhead","Headline","IconName","IconColor","SlideSectionStyle","styles_scss_templateObject","styles_scss_templateObject2","SectionHeader","CallToAction","SectionSlider","_React$Component","call","this","render","_this","Fragment","Helmet","rel","type","href","lib_default","Object","assign","ref","h","slider","dots","speed","arrows","autoplaySpeed","slidesToShow","infinite","React","Component","SlideSection","Widgets","SlideSection_styles_scss","Btn","Label","IconClass","SlideSection_SectionSlider","map","Widget","index","SectionWidget","key","VerticalContentStyle","VerticalContent_styles_scss_templateObject","VerticalContent_styles_scss_templateObject2","White","BgPlaceholder","WidgetStyle","Dank","Tahoe","WrapperRelease","createGlobalStyle","VerticalContent_templateObject","Media","Width","VerticalContent","VerticalContent_styles_scss","library_SlideSection","ViewWidthPadding","ViewWidthFontSize","Icon","i","IconSize","DefaultWidget","gatsby_browser_entry","to","Icons","Name","WidgetContainerStyle","Flex","CrossWidgetStyle","Cross_styles_scss_templateObject","Cross_styles_scss_templateObject2","CrossWidget","objectDestructuringEmpty_default","Cross_styles_scss","Nightsky","Primary","Slate","Gunmetal","SideHeader_styles_scss_templateObject","SideHeader_styles_scss_templateObject2","styles_scss_templateObject3","styles_scss_templateObject4","WidgetSlider","g","autoplay","WidgetType","_React$Component2","length","Container_WidgetSlider","console","log","Content","Style","Meta","Generic","Cross","WidgetContainer","Container_WidgetType","SlideColumn","HorizontalContent_styles_scss","Container","SlideContainer","Columns","Type","HorizontalContent_SlideColumn","WrapperLock","WrapperLock_templateObject","SlideGroup","handleWheel","bind","assertThisInitialized_default","inheritsLoose_default","_proto","prototype","e","deltaY","slickPrev","slickNext","_this2","SlidesData","HorizontalContent_WrapperLock","onWheel","c","HorizontalContent_SlideContainer","obj","TypeError"],"mappings":"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","file":"3-2608c28c6176d2e74013.js","sourcesContent":["// Layout Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframe\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst HorizontalContentStyle = styled.div`\n  width: 100%;\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: ${Root.Footer.Size};\n  overflow: visible;\n\n  .slick-list {\n    overflow: visible;\n  }\n`;\n\n// The Slide Group Wrapper\nHorizontalContentStyle.Inner = styled.div`\n  width: 100%;\n  padding: 0;\n\n  /* Padding on first slide */\n  .slick-slide {\n    padding: 0;\n    overflow: visible;\n    div {\n      outline: 0;\n      &:focus {\n        outline: 0;\n      }\n      .col {\n        &:first-child {\n          padding-left: ${Theme.Base.Size.Sm};\n        }\n      }\n    }\n    &:first-child {\n      padding: 0 0 0 ${Theme.Base.Size.Sm};\n      .col {\n        &:first-child {\n          padding-left: 0;\n        }\n      }\n    }\n  }\n\n  .widget {\n    ${FadeIn};\n  }\n`;\n\n// The Individual Slide Wrapper\nHorizontalContentStyle.Slide = styled.div`\n  width: 100%;\n  padding: 0;\n  overflow: visible;\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n`;\n\n// The Individual Slide Inner\nHorizontalContentStyle.Slide.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  overflow: visible;\n  padding-bottom: ${Theme.Base.Size.Sm};\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n`;\n\n// The Column Wrapper\nHorizontalContentStyle.Column = styled.div`\n  padding: ${Theme.Base.Size.Sm} ${Theme.Base.Size.Sm} ${Theme.Base.Size.Sm} 0;\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n  display: flex;\n  flex-direction: column;\n  flex: ${props => (props.Divider ? 'unset' : '1')};\n  width: ${props =>\n    props.ColWidth\n      ? props.ColWidth\n      : props.Divider\n      ? Theme.Base.Size.Md\n      : 'auto'};\n`;\n\nHorizontalContentStyle.Column.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n  max-width: 100%;\n  .widget {\n    &:first-child {\n      padding-top: 0;\n    }\n  }\n\n  ${props => {\n    if (props.Divider)\n      return `\n        width: ${Theme.Base.Size.Md};\n        &:before {\n          content: '';\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          // left: calc(50% - ${Base.Size.Sm / 2 + 'px'});\n          left: 50%;\n          width: 1px;\n          opacity: .05;\n          background-color: { Theme.Color.Indigo };\n        }\n    `;\n  }}\n`;\n\nexport default HorizontalContentStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","module.exports = __webpack_public_path__ + \"static/placeholder_bg-550f86f04f4ca2184e4ab3ed90b5caf3.jpg\";","// HorizontalContent.js:\n// For building out\n// Horizontally focused pages, like top-level\n// navigation pages.\n\n// Core\nimport React from 'react';\n\n// Styles\nimport HorizontalContentStyle from 'components/core/HorizontalContent/styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Horizontal Content Itself\nexport const HorizontalContent = ({ children }) => (\n  <HorizontalContentStyle>\n    <HorizontalContentStyle.Inner>{children}</HorizontalContentStyle.Inner>\n  </HorizontalContentStyle>\n);\n\nexport default HorizontalContent;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SectionWidgetContainerStyle = styled.div`\n  padding-top: ${Theme.Base.Size.Sm};\n  padding-bottom: ${Theme.Base.Size.Sm};\n  padding-left: ${Root.Grid.Gutter.Left};\n  padding-right: ${Root.Grid.Gutter.Right};\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: ${props =>\n    props.SectionSize == 'Large'\n      ? '400px'\n      : props.SectionSize == 'Medium'\n      ? '350px'\n      : '200px'};\n`;\n\nSectionWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n\n  /* Slick Slider Adjustments */\n\n  .slick-slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    .slick-dots {\n      bottom: ${Theme.Base.Size.Sm};\n      left: ${Theme.Base.Size.Sm};\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .slick-slider,\n  .slick-list,\n  .slick-track {\n    flex: 1;\n  }\n\n  .slick-list,\n  .slick-slider {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n  }\n\n  .slick-slide {\n    display: flex !important;\n    flex-direction: column;\n    align-items: stretch;\n    flex: 1;\n\n    &:first-child {\n      padding: 0;\n    }\n\n    div {\n      &:first-child {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n    }\n\n    .widget-content {\n      flex: 1;\n\n      div {\n        &:first-child {\n          flex: unset;\n          display: unset;\n          flex-direction: unset;\n          align-items: unset;\n        }\n      }\n    }\n  }\n`;\n\nexport default SectionWidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport SectionWidgetContainerStyle from './styles.scss';\n\n// Components\nimport DefaultWidget from '../../Library/Default';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SectionWidgetContainer = ({ WidgetContent, SectionSize }) => (\n  <SectionWidgetContainerStyle className=\"widget\" SectionSize={SectionSize}>\n    <SectionWidgetContainerStyle.Inner>\n      <DefaultWidget\n        BgColor={WidgetContent.BgColor}\n        BgImage={WidgetContent.BgImage}\n        TextColor={WidgetContent.TextColor}\n        TintColor={WidgetContent.TintColor}\n        TintOpacity={WidgetContent.TintOpacity}\n        Destination={WidgetContent.Destination}\n        Subhead={WidgetContent.Subhead}\n        Headline={WidgetContent.Headline}\n        IconName={WidgetContent.IconName}\n        IconColor={WidgetContent.IconColor}\n      />\n    </SectionWidgetContainerStyle.Inner>\n  </SectionWidgetContainerStyle>\n);\n\nexport default SectionWidgetContainer;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: visible;\n\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-list {\n      overflow: visible;\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled.div`\n  width: 100%;\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${Theme.Base.Size.Sm} ${Root.Grid.Gutter.Right} ${Theme.Base.Size.Sm}\n    ${Root.Grid.Gutter.Left};\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport SectionWidgetContainer from 'components/library/Widgets/Container/SectionWidget';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: 1.1,\n      // autoplay: true,\n      infinite: false,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({ Widgets, SectionSize }) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner>\n      <SlideSectionStyle.SectionHeader>\n        <SlideSectionStyle.Headline>\n          <i className=\"fas fa-ghost\" />\n          <span>Header</span>\n        </SlideSectionStyle.Headline>\n        <SlideSectionStyle.CallToAction>\n          <Btn\n            Destination=\"/\"\n            BgColor=\"inherit\"\n            Label=\"View All\"\n            IconClass=\"carat\"\n          />\n        </SlideSectionStyle.CallToAction>\n      </SlideSectionStyle.SectionHeader>\n\n      <SectionSlider>\n        {Widgets.map((Widget, index) => (\n          <SectionWidgetContainer\n            WidgetContent={Widget}\n            SectionSize={SectionSize}\n            key={index}\n          />\n        ))}\n      </SectionSlider>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// Layout Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframe\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst VerticalContentStyle = styled.div`\n  width: 100%;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: calc(${Root.Nav.Size} + ${Theme.Base.Size.Sm});\n  padding-bottom: calc(${Root.Nav.Size} + ${Theme.Base.Size.Sm});\n`;\n\n// The Content Inner\nVerticalContentStyle.Inner = styled.div`\n  width: 100%;\n  padding: 0;\n\n  .widget {\n    ${FadeIn};\n  }\n`;\n\nexport default VerticalContentStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// ScrollWrapper.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport posed, { PoseGroup } from 'react-pose';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport SlideSection from 'components/library/SlideSection';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\nimport VerticalContentStyle from 'components/core/VerticalContent/styles.scss';\n\n// Assets\nimport BgPlaceholder from '../../../assets/images/placeholder_bg.jpg';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Widgets = [\n  {\n    BgColor: Theme.Color.White,\n    BgImage: BgPlaceholder,\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.White,\n    IconColor: Theme.Color.White,\n    IconName: 'rocket', // FontAwesome Icon Name\n    Destination: '/subpage',\n    TintColor: '#000000',\n    TintOpacity: '.4',\n    WidgetStyle: 'default',\n  },\n  {\n    BgColor: Theme.Color.Dank,\n    BgImage: 'none',\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.Black,\n    IconColor: Theme.Color.Black,\n    IconName: 'rocket',\n    Destination: '/subpage',\n    TintColor: '',\n    TintOpacity: '',\n    WidgetStyle: 'default',\n  },\n  {\n    BgColor: Theme.Color.Tahoe,\n    BgImage: 'none',\n    Subhead: 'Subhead',\n    Headline: 'Headline',\n    TextColor: Theme.Color.White,\n    IconColor: Theme.Color.White,\n    IconName: 'rocket',\n    Destination: '/subpage',\n    TintColor: '',\n    TintOpacity: '',\n    WidgetStyle: 'default',\n  },\n];\n\n// Lock Wrapper Scrolls\nconst WrapperRelease = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: scroll !important; /* has to be scroll, not auto */\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n`;\n\n// The Content Itself\nconst VerticalContent = ({ children }) => (\n  <>\n    <WrapperRelease />\n    <VerticalContentStyle>\n      <VerticalContentStyle.Inner>\n        <SlideSection Widgets={Widgets} SectionSize=\"Large\" />\n        <SlideSection Widgets={Widgets} SectionSize=\"Medium\" />\n        <SlideSection Widgets={Widgets} SectionSize=\"Small\" />\n      </VerticalContentStyle.Inner>\n    </VerticalContentStyle>\n  </>\n);\n\nexport default VerticalContent;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Example Usage:\n// <Widget\n// WidgetContent={WidgetContent}\n// BgImage=\"https://source.unsplash.com/1600x1200/?cannabis\"\n// TintColor={Theme.Color.Black}\n// TintOpacity=\".5\"\n// Subhead=\"Subhead\"\n// Headline=\"Headline\"\n// TextColor={Theme.Color.White}\n// IconColor={Theme.Color.White}\n// IconName=\"graduation-cap\"\n// Destination=\"/subpage\"\n// />;\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst DefaultWidget = ({\n  BgColor,\n  BgImage,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <WidgetStyle.Subhead>{Subhead}</WidgetStyle.Subhead>\n      <WidgetStyle.Headline>{Headline}</WidgetStyle.Headline>\n      <Icon className=\"svg-carat\" Name=\"Carat\" Color={IconColor} />\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n    </Link>\n  </WidgetStyle>\n);\n\nexport default DefaultWidget;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetContainerStyle = styled.div`\n  padding-top: ${Theme.Base.Size.Sm};\n  width: 100%;\n  flex: ${props => (props.Flex ? props.Flex : '1')};\n  display: flex;\n  flex-direction: column;\n`;\n\nWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n\n  /* Slick Slider Adjustments */\n\n  .slick-slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    .slick-dots {\n      bottom: ${Theme.Base.Size.Sm};\n      left: ${Theme.Base.Size.Sm};\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .slick-slider,\n  .slick-list,\n  .slick-track {\n    flex: 1;\n  }\n\n  .slick-list,\n  .slick-slider {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n  }\n\n  .slick-slide {\n    display: flex !important;\n    flex-direction: column;\n    align-items: stretch;\n    flex: 1;\n\n    &:first-child {\n      padding: 0;\n    }\n\n    div {\n      &:first-child {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n    }\n\n    .widget-content {\n      flex: 1;\n\n      div {\n        &:first-child {\n          flex: unset;\n          display: unset;\n          flex-direction: unset;\n          align-items: unset;\n        }\n      }\n    }\n  }\n`;\n\nexport default WidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Cross Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Cross Widget Content */\nconst CrossWidgetStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n`;\n\nCrossWidgetStyle.Inner = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0.75fr 1fr;\n  grid-template-rows: 1fr 0.75fr 1fr;\n  grid-gap: calc(${Root.Size} / 4);\n  justify-content: stretch;\n  justify-items: stretch;\n  grid-auto-flow: row;\n  align-items: stretch;\n  width: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n  flex: 1;\n`;\n\nexport default CrossWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// CrossWidget.js:\n\n// Visual:\n// https://www.dropbox.com/s/474d6mc15w2q1vk/Screenshot%202019-04-16%2012.41.23.png?dl=0\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport CrossWidgetStyle from './styles.scss';\nimport WidgetContainerStyle from './../../Container/styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport DefaultWidget from './../Default';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst CrossWidget = ({}) => (\n  <CrossWidgetStyle>\n    <CrossWidgetStyle.Inner>\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Nightsky}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/menu\"\n          Subhead=\"\"\n          Headline=\"View Menu\"\n          IconColor={Theme.Color.Primary}\n          IconName=\"plus\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Speak to a Real Human\"\n          IconColor={Theme.Color.White}\n          IconName=\"comment-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.White}\n          BgImage=\"\"\n          TextColor={Theme.Color.Nightsky}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Outreach\"\n          Headline=\"How we raised $5,000 for the Children’s Leukemia Foundation.\"\n          IconColor={Theme.Color.Nightsky}\n          IconName=\"heart\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"100% Free Delivery.\"\n          IconColor={Theme.Color.White}\n          IconName=\"car\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Order by Phone.\"\n          IconColor={Theme.Color.White}\n          IconName=\"phone\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"2018\"\n          Headline=\"Voted Best Boutique Dispensary\"\n          IconColor={Theme.Color.White}\n          IconName=\"trophy\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Slate}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Delivery Available\"\n          Headline=\"Reno, NV\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"May 16th\"\n          Headline=\"Fundraiser for Ronald McDonald House\"\n          IconColor={Theme.Color.White}\n          IconName=\"calendar\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Gunmetal}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Delivery Available\"\n          Headline=\"Carson City, NV\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n    </CrossWidgetStyle.Inner>\n  </CrossWidgetStyle>\n);\n\nexport default CrossWidget;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport WidgetContainerStyle from './styles.scss';\n\n// Components\nimport ArticleWidget from '../Library/Article';\nimport CrossWidget from '../Library/Cross';\nimport DefaultWidget from '../Library/Default';\nimport SideHeaderWidget from '../Library/SideHeader';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Widget Slider:\n// For WidgetContainers with multiple widgets\n// inside of them.\nclass WidgetSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: true,\n      speed: 1500,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: 1,\n      autoplay: true,\n      infinite: true,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={g => (this.slider = g)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// WidgetType\nclass WidgetType extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  // Render\n  render() {\n    const WidgetContent = this.props.WidgetContent;\n\n    // If the Widget Content is > 1, then make a Slider.\n    if (WidgetContent.length > 1) {\n      return (\n        // In this case we wrap the entire element in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // Default\n        <WidgetContainerStyle.Inner>\n          <WidgetSlider>\n            {console.log(WidgetContent.length)}\n            {WidgetContent.map((Content, index) => {\n              switch (Content.Style) {\n                case 'Article':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      key={index}\n                    />\n                  );\n                case 'Generic':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      key={index}\n                    />\n                  );\n              }\n            })}\n          </WidgetSlider>\n        </WidgetContainerStyle.Inner>\n      );\n    }\n\n    // If there is only 1 Widget.\n    else {\n      return (\n        // In this case we wrap the INDIVIDUAL elements in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii\n        // if needed, allowing for more customized Widget Components.\n        // \n        // We're only accepting the following Widgets for this section:\n        // Article\n        // Cross\n        // SideHeader\n        // Default\n        <>\n          {WidgetContent.map((Content, index) => {\n            switch (Content.Style) {\n              case 'Cross':\n                return <CrossWidget />;\n              case 'Article':\n                return (\n                  <WidgetContainerStyle.Inner>\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'Generic':\n                return (\n                  <WidgetContainerStyle.Inner>\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n            }\n          })}\n        </>\n      );\n    }\n  }\n}\n\nconst WidgetContainer = ({ WidgetContent, Flex }) => (\n  <WidgetContainerStyle className=\"widget\" Flex={Flex}>\n    <WidgetType WidgetContent={WidgetContent} />\n  </WidgetContainerStyle>\n);\n\nexport default WidgetContainer;\n","// SlideColumn.js\n\n// Core\nimport React from 'react';\n\n// Componentss\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Styles\nimport HorizontalContentStyle from './../styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SlideColumn Itself\n// <SlideColumn Divider /> returns a Divider\nclass SlideColumn extends React.Component {\n  constructor(props) {\n    // Get our this.props\n    super(props);\n  }\n\n  render() {\n    const Divider = this.props.Divider;\n    const Widgets = this.props.Widgets;\n    const children = this.props.children;\n\n    // If it's a Divider:\n    if (Divider == true) {\n      return (\n        <HorizontalContentStyle.Column Divider className=\"divider\">\n          <HorizontalContentStyle.Column.Inner Divider />\n        </HorizontalContentStyle.Column>\n      );\n    }\n\n    // If it's not:\n    else {\n      return (\n        <HorizontalContentStyle.Column className=\"col\">\n          <HorizontalContentStyle.Column.Inner className=\"col-inner\">\n            {/* Map our Widgets data. */}\n            {Widgets.map((Widget, index) => {\n              // Pass our Widgets data to our WidgetContainers\n              return (\n                <WidgetContainer\n                  key={index}\n                  WidgetContent={Widget.WidgetContent}\n                  Flex={Widget.Flex}\n                />\n              );\n            })}\n          </HorizontalContentStyle.Column.Inner>\n        </HorizontalContentStyle.Column>\n      );\n    }\n  }\n}\n\nexport default SlideColumn;\n","// SlideContainer.js:\n// For displaying and looping through data for\n// SlideColumns.\n\n// Core\nimport React from 'react';\n\n// Styles\nimport HorizontalContentStyle from '../styles.scss';\nimport SlideColumn from '../SlideColumn';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Slide Itself\nconst SlideContainer = ({ Columns }) => (\n  <HorizontalContentStyle.Slide>\n    <HorizontalContentStyle.Slide.Inner>\n      {/* Map our Columns data. */}\n      {Columns.map((Column, index) => {\n        // If our Column isn't a Divider\n        if (Column.Type != 'divider') {\n          // Pass our Widgets data to our Columns\n          return <SlideColumn key={index} Widgets={Column.Widgets} />;\n        }\n\n        // If our Column is a Divider\n        else {\n          return <SlideColumn key={index} Divider />;\n        }\n      })}\n    </HorizontalContentStyle.Slide.Inner>\n  </HorizontalContentStyle.Slide>\n);\n\nexport default SlideContainer;\n","// WrapperLock.js:\n// For locking the .wrapper class in the event\n// it's a Horizontal Scrolling Section.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nconst WrapperLock = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: scroll; /* has to be scroll, not auto */\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\nexport default WrapperLock;\n","// SlideGroup.js:\n// For displaying SlideGroups.\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport SlideContainer from './../SlideContainer';\nimport WrapperLock from './../WrapperLock';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\nimport HorizontalContentStyle from 'components/core/HorizontalContent/styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SlideGroup Itself\nexport class SlideGroup extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleWheel = this.handleWheel.bind(this);\n  }\n\n  handleWheel(e) {\n    // Disable defaults:\n    // e.preventDefault();\n\n    // Previous / Next Slide based on mouse scroll\n    if (e.deltaY < 0) {\n      this.slider.slickPrev();\n    } else {\n      this.slider.slickNext();\n    }\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: false,\n      speed: 1500,\n      arrows: false,\n      slidesToShow: 1.15,\n      infinite: false,\n    };\n\n    // Slides Data\n    const SlidesData = this.props.SlidesData;\n\n    // Return Slides\n    return (\n      <>\n        <WrapperLock />\n\n        {/* Helmet to initiate Slick Styles */}\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n\n        {/* Initiate our Previous / Next Slide based on mouses scroll */}\n        <div onWheel={e => this.handleWheel(e)}>\n          <Slider ref={c => (this.slider = c)} {...settings}>\n            {/* Loop through our Slide Data */}\n            {SlidesData.map((Slide, index) => {\n              // Pass our Slide Columns data to the Slide\n              return <SlideContainer Columns={Slide.Columns} key={index} />;\n            })}\n          </Slider>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SlideGroup;\n","function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}\n\nmodule.exports = _objectDestructuringEmpty;"],"sourceRoot":""}