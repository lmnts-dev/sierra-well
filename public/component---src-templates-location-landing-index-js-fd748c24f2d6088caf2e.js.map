{"version":3,"sources":["webpack:///./src/templates/Location/Landing/layout.js","webpack:///./src/templates/Location/Landing/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/helpers/hexToRGB.js","webpack:///./src/components/library/SuggestionList/styles.scss.js","webpack:///./src/components/library/SuggestionList/index.js"],"names":["PageWrapper","_ref","children","LocationData","LocationTheme","Location","about","PageTheme","react_default","a","createElement","Layout","BgColor","Color","Background","PrimaryColor","Primary","SecondaryColor","Secondary","TertiaryColor","Tertiary","SubLevelPage","SimpleHero","Padding","Flex","TextColor","Block","maxWidth","Breadcrumb","Crumbs","Destination","Label","geography","state","toLowerCase","slug","name","className","headline","Btn","IconClass","IconPosition","IconFas","contactDetails","location","address","meta","maps","External","SuggestionList","BaseUrl","List","nearby","Affix","GradientColor","Theme","Nightsky","TemplateLayout","_ref2","layout_PageWrapper","console","log","SimpleSection","Snow","BgQuery","BgAlt","FluidHeight","Gutter","LocationLandingTemplate","_ref3","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","query","LocationLandingPage","props","layout","data","allLocationsJson","edges","node","href","SlideSectionStyle","styled","div","_templateObject","Base","Size","Sm","Root","Black","Inner","SectionInnerStyle","_templateObject2","Grid","Left","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","Headline","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Fragment","Helmet","rel","type","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","IconclassName","SlideSection_SectionSlider","TextColr","map","Widget","index","Container","key","WidgetContent","WrapperLock","createGlobalStyle","Media","Width","Md","WrapperRelease","BlockStyle","AlignItems","Style","css","BgTint","SiteWidth","styles_scss","ImgMatch","src","AltText","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SidebarWidgetStyle","FadeIn","White","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","SimpleSectionStyle","Right","SimpleSection_styles_scss","WidgetSection","Slider","WidgetSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","allQuestionCategoriesJson","title","BgImageFile","coverImage","BgImageAltText","tags","includes","Slug","_234893462","QuestionListings","QuestionListings_QuestionCards","SimpleHeroStyle","Tint","Hero","BreadCrumb","Link","Bread","crumb","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_4273665236","QuestionFooter","HideCategories","QuestionFooter_BrowseCategories","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","SocialStripStyle","Margin","span","SocialStrip","target","hexToRGB","hex","alpha","r","parseInt","slice","g","b","SuggestionListStyle","Button","item"],"mappings":"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","file":"component---src-templates-location-landing-index-js-fd748c24f2d6088caf2e.js","sourcesContent":["// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// PageWrapper component for page theming.\nconst PageWrapper = ({ children, LocationData, Location }) => {\n  const LocationTheme = LocationData.about.PageTheme;\n\n  return (\n    <Layout\n      BgColor={LocationTheme.Color.Background}\n      PrimaryColor={LocationTheme.Color.Primary}\n      SecondaryColor={LocationTheme.Color.Secondary}\n      TertiaryColor={LocationTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={LocationTheme.Color.Background}\n        PrimaryColor={LocationTheme.Color.Primary}\n        SecondaryColor={LocationTheme.Color.Secondary}\n        TertiaryColor={LocationTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[2, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <Block maxWidth={0.5}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: 'locations/',\n                  Label: 'Locations',\n                },\n                {\n                  Destination: 'locations/',\n                  Label: LocationData.geography.state,\n                },\n                {\n                  Destination:\n                    'locations/' +\n                    LocationData.geography.state.toLowerCase() +\n                    '/' +\n                    LocationData.slug,\n                  Label: LocationData.name,\n                },\n              ]}\n              TextColor={LocationTheme.Color.Primary}\n            />\n            <h1 className=\"h2\">{LocationData.about.headline}</h1>\n            <Btn\n              IconClass=\"plus\"\n              Label=\"View Menu\"\n              BgColor={LocationTheme.Color.Primary}\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={\n                '/menu/' +\n                LocationData.geography.state.toLowerCase() +\n                '/' +\n                LocationData.slug\n              }\n              IconPosition=\"left\"\n              IconFas\n            />\n            <Btn\n              className=\"btn-address\"\n              IconClass=\"map-marker-alt\"\n              Label={LocationData.contactDetails.location.address}\n              BgColor=\"none\"\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={LocationData.meta.maps}\n              IconPosition=\"left\"\n              External\n              IconFas\n            />\n            {/* <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n          </Block>\n          <SuggestionList\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={LocationData.nearby}\n            Affix=\"/menu\"\n            Label=\"Nearby\"\n            TextColor={LocationTheme.Color.Primary}\n            GradientColor={LocationTheme.Color.Background}\n            Padding={[1, 0, 0, 0]}\n          />\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({ LocationData, Location }) => {\n  return (\n    <PageWrapper LocationData={LocationData} Location={Location}>\n      {console.log(LocationData)}\n\n      {/* ///////////// */}\n\n      <SimpleSection\n        BgColor={Theme.Color.Snow}\n        BgQuery=\"placeholder_bg_4.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        FluidHeight={true}\n        Gutter={[0, 0, 0, 0]}\n      />\n\n      {/* ///////////// */}\n    </PageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LocationLandingTemplate = ({ LocationData, Location }) => {\n  return <TemplateLayout LocationData={LocationData} Location={Location} />;\n};\n\nexport default LocationLandingTemplate;\n","// templates/Location/Landing/index.js:\n// This is the Location Landing page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LocationLandingTemplate from './layout';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationLandingPage = props => {\n  return (\n    <LocationLandingTemplate\n      LocationData={props.data.allLocationsJson.edges[0].node}\n      Location={props.location.href}\n    />\n  );\n};\n\nexport default LocationLandingPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n//\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const query = graphql`\n  query($Slug: String!) {\n    allLocationsJson(filter: { slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          slug\n          name\n          geography {\n            city\n            state\n            country\n          }\n          status {\n            delivery\n            store\n          }\n          meta {\n            reserveSpot\n            menu\n            maps\n          }\n          contactDetails {\n            phone\n            location {\n              address\n              state\n            }\n            hours {\n              days\n              startTime\n              endTime\n            }\n          }\n          nearby {\n            name\n            slug\n          }\n          about {\n            headline\n            PageTheme {\n              Color {\n                Background\n                Primary\n                Secondary\n                Tertiary\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: visible;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n  padding-right: ${Root.Size};\n  padding-top: calc(${Root.Size} * ${props => (props.Size ? props.Size : '2')});\n  padding-bottom: calc(\n    ${Root.Size} * ${props => (props.Size ? props.Size : '2')}\n  );\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        '*' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle Flex={Flex}>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0, 0.5);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgQuery,\n  BgAlt,\n  Flex,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgQuery} AltText={BgAlt} />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Convert #HEXCODES to RGBA\n// hexToRGB('#FF0000', 0.5);\n\nconst hexToRGB = (hex, alpha) => {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  } else {\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n  }\n};\n\nexport default hexToRGB;\n","// <SuggestionListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SuggestionListStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size} / 4);\n      font-size: 1.2rem;\n\n      &:first-child {\n        opacity: .3;\n      }\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.2rem;\n          font-weight: normal;\n          padding: 0 calc(${Root.Size} / 4);\n        }\n      }\n    }\n  }\n`;\n\nexport default SuggestionListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SuggestionList Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport SuggestionListStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst SuggestionList = ({\n  List,\n  Label,\n  BaseUrl,\n  TextColor,\n  GradientColor,\n  Padding,\n  Affix,\n}) => (\n  <SuggestionListStyle\n    className=\"suggestion-list\"\n    GradientColor={GradientColor}\n    Padding={Padding}\n  >\n    <ul>\n      {Label ? <li>{Label}</li> : null}\n      {List.map((item, index) => (\n        <li key={index}>\n          <Btn\n            BgColor=\"none\"\n            Label={item.name}\n            Destination={\n              Affix ? BaseUrl + item.slug + Affix : BaseUrl + item.slug\n            }\n            TextColor={TextColor}\n          />\n        </li>\n      ))}\n    </ul>\n  </SuggestionListStyle>\n);\n\nexport default SuggestionList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}