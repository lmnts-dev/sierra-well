{"version":3,"sources":["webpack:///./src/components/library/Section/styles.scss.js","webpack:///./src/components/library/Widgets/Container/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Article/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/index.js","webpack:///./src/components/library/Widgets/Library/Cross/index.js","webpack:///./src/components/library/Widgets/Library/SideHeader/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideHeader/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/styles.scss.js","webpack:///./src/components/library/Forecast/styles.scss.js","webpack:///./src/components/library/Forecast/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/index.js","webpack:///./src/components/library/Widgets/Library/SideWidget/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideWidget/index.js","webpack:///./src/components/library/Widgets/Container/index.js"],"names":["SectionInnerStyle","styled","div","_templateObject","Root","Grid","Gutter","Left","Size","SectionContentStyle","_templateObject2","props","FullWidth","Theme","Base","SiteWidth","WidgetContainerStyle","Sm","Flex","Inner","Radius","Transition","Duration","CssEase","Color","Black","WidgetStyle","styles_scss_templateObject","BgColor","White","TextColor","BgImage","TintColor","TintOpacity","ViewWidthPadding","Media","Width","Md","Subhead","styles_scss_templateObject2","ViewWidthFontSize","Headline","_templateObject3","Icon","i","_templateObject4","IconSize","CrossWidgetStyle","Cross_styles_scss_templateObject","Nav","Footer","Cross_styles_scss_templateObject2","Default_styles_scss_templateObject","Default_styles_scss_templateObject2","styles_scss_templateObject3","styles_scss_templateObject4","DefaultWidget","_ref","Destination","IconColor","IconName","react_default","a","createElement","Default_styles_scss","className","gatsby_browser_entry","to","Icons","Name","CrossWidget","objectDestructuringEmpty_default","Cross_styles_scss","styles_scss","Default","Nightsky","Primary","Slate","Gunmetal","SideHeaderWidgetStyle","SideHeader_styles_scss_templateObject","SideHeader_styles_scss_templateObject2","Header","h1","SideHeader_styles_scss_templateObject3","ViewHeightFontSize","Body","SideHeader_styles_scss_templateObject4","IntroCopy","p","_templateObject5","BodyCopy","_templateObject6","SideHeaderWidget","SideHeader_styles_scss","SideForecastStyle","SideForecast_styles_scss_templateObject","SideForecast_styles_scss_templateObject2","SideForecast_styles_scss_templateObject3","SideForecast_styles_scss_templateObject4","styles_scss_templateObject5","ForecastStyle","Forecast_styles_scss_templateObject","Top","Forecast_styles_scss_templateObject2","Bottom","Forecast_styles_scss_templateObject3","Forecast","_this","_React$Component","call","this","state","forecast","componentDidMount","_this2","axios","get","then","res","data","setState","render","Forecast_styles_scss","React","Component","SideForecast","Location","SideForecast_styles_scss","library_Forecast","SideWidgetStyle","SideWidget_styles_scss_templateObject","SideWidget_styles_scss_templateObject2","SideWidget_styles_scss_templateObject3","SideWidget_styles_scss_templateObject4","SideWidget_styles_scss_templateObject5","SideWidget","SideWidget_styles_scss","WidgetSlider","Fragment","Helmet","rel","type","href","lib_default","Object","assign","ref","g","slider","dots","speed","arrows","autoplaySpeed","slidesToShow","autoplay","infinite","children","WidgetType","_React$Component2","WidgetContent","length","Container_WidgetSlider","map","Content","index","Style","Meta","Generic","key","Library_SideWidget","Library_SideForecast","Cross","SideHeader","WidgetContainer","Container_WidgetType"],"mappings":"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","file":"3-c663f06a82e09b06d34f.js","sourcesContent":["// SectionInnerStyle Styles:\n// These are nearly identical to the Hero base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n  padding-right: ${Root.Size};\n`;\n\nexport const SectionContentStyle = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  display: flex;\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetContainerStyle = styled.div`\n  padding-top: ${Theme.Base.Size.Sm};\n  width: 100%;\n  flex: ${props => (props.Flex ? props.Flex : '1')};\n  display: flex;\n  flex-direction: column;\n`;\n\nWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n\n  /* Slick Slider Adjustments */\n\n  .slick-slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    .slick-dots {\n      bottom: ${Theme.Base.Size.Sm};\n      left: ${Theme.Base.Size.Sm};\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .slick-slider,\n  .slick-list,\n  .slick-track {\n    flex: 1;\n  }\n\n  .slick-list,\n  .slick-slider {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n  }\n\n  .slick-slide {\n    display: flex !important;\n    flex-direction: column;\n    align-items: stretch;\n    flex: 1;\n\n    &:first-child {\n      padding: 0;\n    }\n\n    div {\n      &:first-child {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n    }\n\n    .widget-content {\n      flex: 1;\n\n      div {\n        &:first-child {\n          flex: unset;\n          display: unset;\n          flex-direction: unset;\n          align-items: unset;\n        }\n      }\n    }\n  }\n`;\n\nexport default WidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Cross Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Cross Widget Content */\nconst CrossWidgetStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n`;\n\nCrossWidgetStyle.Inner = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0.75fr 1fr;\n  grid-template-rows: 1fr 0.75fr 1fr;\n  grid-gap: calc(${Root.Size} / 4);\n  justify-content: stretch;\n  justify-items: stretch;\n  grid-auto-flow: row;\n  align-items: stretch;\n  width: calc(100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size}));\n  flex: 1;\n`;\n\nexport default CrossWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Example Usage:\n// <Widget\n// WidgetContent={WidgetContent}\n// BgImage=\"https://source.unsplash.com/1600x1200/?cannabis\"\n// TintColor={Theme.Color.Black}\n// TintOpacity=\".5\"\n// Subhead=\"Subhead\"\n// Headline=\"Headline\"\n// TextColor={Theme.Color.White}\n// IconColor={Theme.Color.White}\n// IconName=\"graduation-cap\"\n// Destination=\"/subpage\"\n// />;\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst DefaultWidget = ({\n  BgColor,\n  BgImage,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <WidgetStyle.Subhead>{Subhead}</WidgetStyle.Subhead>\n      <WidgetStyle.Headline>{Headline}</WidgetStyle.Headline>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n    </Link>\n  </WidgetStyle>\n);\n\nexport default DefaultWidget;\n","// CrossWidget.js:\n\n// Visual:\n// https://www.dropbox.com/s/474d6mc15w2q1vk/Screenshot%202019-04-16%2012.41.23.png?dl=0\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport CrossWidgetStyle from './styles.scss';\nimport WidgetContainerStyle from './../../Container/styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport DefaultWidget from './../Default';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst CrossWidget = ({}) => (\n  <CrossWidgetStyle>\n    <CrossWidgetStyle.Inner>\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Nightsky}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/menu\"\n          Subhead=\"\"\n          Headline=\"View Menu\"\n          IconColor={Theme.Color.Primary}\n          IconName=\"plus\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Speak to a Real Human\"\n          IconColor={Theme.Color.White}\n          IconName=\"comment-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.White}\n          BgImage=\"\"\n          TextColor={Theme.Color.Nightsky}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Outreach\"\n          Headline=\"How we raised $5,000 for the Children’s Leukemia Foundation.\"\n          IconColor={Theme.Color.Nightsky}\n          IconName=\"heart\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"100% Free Delivery.\"\n          IconColor={Theme.Color.White}\n          IconName=\"car\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Order by Phone.\"\n          IconColor={Theme.Color.White}\n          IconName=\"phone\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"2018\"\n          Headline=\"Voted Best Boutique Dispensary\"\n          IconColor={Theme.Color.White}\n          IconName=\"trophy\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Slate}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Delivery Available\"\n          Headline=\"Reno, NV\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"May 16th\"\n          Headline=\"Fundraiser for Ronald McDonald House\"\n          IconColor={Theme.Color.White}\n          IconName=\"calendar\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Gunmetal}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Delivery Available\"\n          Headline=\"Carson City, NV\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n    </CrossWidgetStyle.Inner>\n  </CrossWidgetStyle>\n);\n\nexport default CrossWidget;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideHeaderWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: none;\n  position: relative;\n  overflow: hidden;\n  cursor: crosshair;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSideHeaderWidgetStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Root.ViewWidthPadding};\n  flex: 1;\n  width: 100%;\n  position: relative;\n`;\n\nSideHeaderWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  opacity: 0.3;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideHeaderWidgetStyle.Body = styled.div``;\n\nSideHeaderWidgetStyle.IntroCopy = styled.p`\n  font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n  padding-bottom: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: light;\n`;\n\nSideHeaderWidgetStyle.BodyCopy = styled.p`\n  font-size: ${Root.ViewWidthFontSize};\n  padding-top: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: regular;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: calc(${Root.ViewWidthFontSize} * 1.5);\n    height: 1px;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n`;\n\nexport default SideHeaderWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideHeaderWidgetStyle.js:\n\n// Core\nimport React from 'react';\n\n// Styles\nimport SideHeaderWidgetStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideHeaderWidget = ({ Header, IntroCopy, BodyCopy, TextColor }) => (\n  <SideHeaderWidgetStyle TextColor={TextColor} className=\"widget-content\">\n    <SideHeaderWidgetStyle.Inner>\n      <SideHeaderWidgetStyle.Header>{Header}</SideHeaderWidgetStyle.Header>\n      <SideHeaderWidgetStyle.Body>\n        <SideHeaderWidgetStyle.IntroCopy>\n          {IntroCopy}\n        </SideHeaderWidgetStyle.IntroCopy>\n        <SideHeaderWidgetStyle.BodyCopy>\n          {BodyCopy}\n        </SideHeaderWidgetStyle.BodyCopy>\n      </SideHeaderWidgetStyle.Body>\n    </SideHeaderWidgetStyle.Inner>\n  </SideHeaderWidgetStyle>\n);\n\nexport default SideHeaderWidget;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideForecastStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideForecastStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideForecastStyle.Body = styled.div``;\n\nSideForecastStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nSideForecastStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Button Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst ForecastStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nForecastStyle.Top = styled.div`\n  font-size: calc(${Root.ViewHeightFontSize} * 5);\n  font-family: 'Roboto', 'Helvetica', sans-serif;\n  font-weight: 100;\n  padding-right: calc(${Root.ViewWidthPadding} * 1.2);\n  margin-left: -5px;\n  position: relative;\n\n  &:before,\n  &:after {\n    position: absolute;\n    right: 0;\n  }\n\n  &:before {\n    content: '';\n    top: calc(${Root.ViewWidthPadding} / 2.2);\n    width: calc(${Root.ViewWidthPadding} / 1.4);\n    height: calc(${Root.ViewWidthPadding} / 1.4);\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 100%;\n  }\n\n  &:after {\n    content: 'F';\n    color: ${Theme.Color.White};\n    font-size: calc(${Root.ViewWidthPadding});\n    line-height: 0;\n    right: calc(${Root.ViewWidthPadding} / 5.5);\n    bottom: calc(${Root.ViewWidthPadding} / 1.1);\n  }\n`;\n\nForecastStyle.Bottom = styled.div`\n  span {\n    display: block;\n    line-height: 1.4;\n    font-size: calc(${Root.ViewWidthFontSize} / 1.25);\n  }\n`;\n\nexport default ForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Forecast Component:\n// This is the component to display a\n// Forecast from a specific location.\n\n// TODO: Fix CORS Console Error\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport axios from 'axios';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport ForecastStyle from 'components/library/Forecast/styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  state = {\n    forecast: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        'https://api.darksky.net/forecast/20fcdf5192dab046a8b9303c6f6d2667/37.8267,-122.4233'\n      )\n      .then(res => {\n        const forecast = res.data;\n        this.setState({ forecast });\n      });\n  }\n\n  render() {\n    return (\n      <ForecastStyle>\n        <ForecastStyle.Top>\n          <span>64</span>\n        </ForecastStyle.Top>\n        <ForecastStyle.Bottom>\n          <span>Overcast Clouds</span>\n          <span>45% Humidity</span>\n        </ForecastStyle.Bottom>\n      </ForecastStyle>\n    );\n  }\n}\n\n// const Forecast = ({}) => (\n//   <ForecastStyle>\n//     <ForecastStyle.Top>\n//       <span>64</span>\n//     </ForecastStyle.Top>\n//     <ForecastStyle.Bottom>\n//       <span>Overcast Clouds</span>\n//       <span>45% Humidity</span>\n//     </ForecastStyle.Bottom>\n//   </ForecastStyle>\n// );\n\nexport default Forecast;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SideForecastStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideForecastStyle from './styles.scss';\n\n// Components\nimport Forecast from '../../../Forecast';\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideForecast = ({\n  BgColor,\n  BgImage,\n  Location,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideForecastStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideForecastStyle.Header>{Location}</SideForecastStyle.Header>\n      <SideForecastStyle.Body>\n        <Forecast Location={Location} />\n      </SideForecastStyle.Body>\n    </Link>\n  </SideForecastStyle>\n);\n\nexport default SideForecast;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideWidgetStyle.Body = styled.div``;\n\nSideWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: calc(${Root.Size} / 1.5);\n`;\n\nSideWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideWidgetStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideWidget = ({\n  BgColor,\n  BgImage,\n  Header,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideWidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <SideWidgetStyle.Header>{Header}</SideWidgetStyle.Header>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideWidgetStyle.Body>\n        <SideWidgetStyle.Subhead>{Subhead}</SideWidgetStyle.Subhead>\n      </SideWidgetStyle.Body>\n      <SideWidgetStyle.Icon\n        className={'fas fa-' + IconName}\n        Color={IconColor}\n      />\n    </Link>\n  </SideWidgetStyle>\n);\n\nexport default SideWidget;\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport WidgetContainerStyle from './styles.scss';\n\n// Components\nimport ArticleWidget from '../Library/Article';\nimport CrossWidget from '../Library/Cross';\nimport DefaultWidget from '../Library/Default';\nimport SideHeaderWidget from '../Library/SideHeader';\nimport SideForecast from '../Library/SideForecast';\nimport SideWidget from '../Library/SideWidget';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Widget Slider:\n// For WidgetContainers with multiple widgets\n// inside of them.\nclass WidgetSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: true,\n      speed: 1500,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: 1,\n      autoplay: true,\n      infinite: true,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={g => (this.slider = g)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// WidgetType\nclass WidgetType extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  // Render\n  render() {\n    const WidgetContent = this.props.WidgetContent;\n\n    // If the Widget Content is > 1, then make a Slider.\n    if (WidgetContent.length > 1) {\n      return (\n        // In this case we wrap the entire element in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // SideForecast\n        // SideWidget\n        // Default\n        <WidgetContainerStyle.Inner>\n          <WidgetSlider>\n            {WidgetContent.map((Content, index) => {\n              switch (Content.Style) {\n                case 'Article':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      key={index}\n                    />\n                  );\n                case 'SideWidget':\n                  return (\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                      key={index}\n                    />\n                  );\n                case 'SideForecast':\n                  return (\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  );\n                case 'Generic':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      key={index}\n                    />\n                  );\n              }\n            })}\n          </WidgetSlider>\n        </WidgetContainerStyle.Inner>\n      );\n    }\n\n    // If there is only 1 Widget.\n    else {\n      return (\n        // In this case we wrap the INDIVIDUAL elements in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii\n        // if needed, allowing for more customized Widget Components.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // Cross\n        // SideHeader\n        // SideForecast\n        // SideWidget\n        // Default\n        <>\n          {WidgetContent.map((Content, index) => {\n            switch (Content.Style) {\n              case 'Cross':\n                return <CrossWidget key={index} />;\n              case 'Article':\n                return (\n                  <WidgetContainerStyle.Inner key={index}>\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'Generic':\n                return (\n                  <WidgetContainerStyle.Inner key={index}>\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideWidget':\n                return (\n                  <WidgetContainerStyle.Inner key={index}>\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideForecast':\n                return (\n                  <WidgetContainerStyle.Inner key={index}>\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideHeader':\n                return (\n                  <SideHeaderWidget\n                    Header={Content.Meta.SideHeader.Header}\n                    IntroCopy={Content.Meta.SideHeader.IntroCopy}\n                    BodyCopy={Content.Meta.SideHeader.BodyCopy}\n                    TextColor={Content.Meta.SideHeader.TextColor}\n                    key={index}\n                  />\n                );\n            }\n          })}\n        </>\n      );\n    }\n  }\n}\n\nconst WidgetContainer = ({ WidgetContent, Flex }) => (\n  <WidgetContainerStyle className=\"widget\" Flex={Flex}>\n    <WidgetType WidgetContent={WidgetContent} />\n  </WidgetContainerStyle>\n);\n\nexport default WidgetContainer;\n"],"sourceRoot":""}