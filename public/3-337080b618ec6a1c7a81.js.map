{"version":3,"sources":["webpack:///./src/components/library/Section/styles.scss.js","webpack:///./src/components/core/ImgMatch/index.js","webpack:///./src/components/library/Widgets/Container/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Article/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/index.js","webpack:///./src/components/library/Widgets/Library/SideHeader/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideHeader/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/styles.scss.js","webpack:///./src/components/library/Forecast/styles.scss.js","webpack:///./src/components/library/Forecast/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/index.js","webpack:///./src/components/library/Widgets/Library/SideWidget/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideWidget/index.js","webpack:///./src/components/library/Widgets/Container/index.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Widgets/Library/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/index.js"],"names":["SectionInnerStyle","styled","div","_templateObject","Root","Grid","Gutter","Left","Size","SectionContentStyle","_templateObject2","props","FullWidth","Theme","Base","SiteWidth","Image","_ref","AltText","src","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","data","_public_static_d_346298689_json__WEBPACK_IMPORTED_MODULE_3__","match","useMemo","allFile","edges","find","_ref2","node","relativePath","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_5___default","Object","assign","className","objectFit","objectPosition","alt","fluid","childImageSharp","WidgetContainerStyle","Sm","Flex","Width","Inner","Radius","Transition","Duration","CssEase","Color","Black","WidgetStyle","styles_scss_templateObject","BgColor","White","TextColor","BgImage","TintColor","TintOpacity","ViewWidthPadding","Media","Md","Subhead","styles_scss_templateObject2","ViewWidthFontSize","Headline","_templateObject3","Icon","i","_templateObject4","IconSize","CrossWidgetStyle","Cross_styles_scss_templateObject","Nav","Footer","Cross_styles_scss_templateObject2","CrossWidget","objectDestructuringEmpty_default","react_default","Cross_styles_scss","styles_scss","Default","Nightsky","Destination","IconColor","Primary","IconName","Slate","Gunmetal","SideHeaderWidgetStyle","SideHeader_styles_scss_templateObject","SideHeader_styles_scss_templateObject2","Header","h1","styles_scss_templateObject3","ViewHeightFontSize","Body","styles_scss_templateObject4","IntroCopy","p","_templateObject5","BodyCopy","_templateObject6","SideHeaderWidget","SideHeader_styles_scss","SideForecastStyle","SideForecast_styles_scss_templateObject","SideForecast_styles_scss_templateObject2","SideForecast_styles_scss_templateObject3","SideForecast_styles_scss_templateObject4","styles_scss_templateObject5","ForecastStyle","Forecast_styles_scss_templateObject","Top","Forecast_styles_scss_templateObject2","Bottom","Forecast_styles_scss_templateObject3","Forecast","_this","_React$Component","call","this","state","forecast","componentDidMount","_this2","axios","get","then","res","setState","render","Forecast_styles_scss","React","Component","SideForecast","Location","SideForecast_styles_scss","gatsby_browser_entry","to","Icons","Name","library_Forecast","SideWidgetStyle","SideWidget_styles_scss_templateObject","SideWidget_styles_scss_templateObject2","SideWidget_styles_scss_templateObject3","SideWidget_styles_scss_templateObject4","SideWidget_styles_scss_templateObject5","SideWidget","SideWidget_styles_scss","WidgetSlider","Fragment","Helmet","rel","type","href","lib_default","ref","g","slider","dots","speed","arrows","autoplaySpeed","slidesToShow","autoplay","infinite","children","WidgetType","_React$Component2","WidgetContent","length","Container_WidgetSlider","map","Content","index","Style","Meta","Generic","BgQuery","key","Library_SideWidget","Library_SideForecast","Cross","SideHeader","WidgetContainer","Container_WidgetType","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","ImgQuery","fadeIn","DefaultWidget","BgImageFile","BgImageAltText","ImgMatch"],"mappings":"yfAeO,IAAMA,EAAoBC,IAAOC,IAAVC,IAGPC,IAAKC,KAAKC,OAAOC,KAAUH,IAAKI,KACpCJ,IAAKI,MAGXC,EAAsBR,IAAOC,IAAVQ,IAKjB,SAAAC,GAAK,OAAKA,EAAMC,UAAY,OAASC,IAAMC,KAAKT,KAAKU,4HCerDC,IAnCD,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,IAAQR,EAAYS,IAAAH,EAAA,mBACtCI,EAAOC,EAAAD,KAiBPE,EAAQC,kBACZ,kBAAMH,EAAKI,QAAQC,MAAMC,KAAK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAAcV,IAAQU,EAAKC,gBACzD,CAACT,EAAMF,IAGT,OACEY,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CACEC,UAAU,MACVC,UAAU,QACVC,eAAe,UACfC,IAAKtB,GAAoB,KACzBuB,MAAOlB,EAAMM,KAAKa,gBAAgBD,OAC9B9B,6uECtBV,IAAMgC,EAAuB1C,IAAOC,IAAVC,IACTU,IAAMC,KAAKN,KAAKoC,GACvB,SAAAjC,GAAK,OAAKA,EAAMkC,KAAOlC,EAAMkC,KAAO,KAGnC,SAAAlC,GAAK,OACZA,EAAMmC,MAAQ,QAAU1C,IAAKI,KAAO,MAAQG,EAAMmC,MAAQ,IAAM,SAGpEH,EAAqBI,MAAQ9C,IAAOC,IAApCQ,IAKmBN,IAAK4C,OAIJnC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAaZtC,IAAMC,KAAKN,KAAKoC,GAClB/B,IAAMC,KAAKN,KAAKoC,GA4BE/B,IAAMuC,MAAMC,OAwD7BV,kwDCpHf,IAAMW,EAAcrD,IAAOC,IAAVqD,IAMK,SAAA5C,GAAK,OACvBA,EAAM6C,QAAU7C,EAAM6C,QAAU3C,IAAMuC,MAAMK,OAG5B5C,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAEjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAIjE,SAAA1C,GACA,GAAIA,EAAMgD,QACR,MACE,mCAEAhD,EAAMgD,QAFN,qIAaJ,SAAAhD,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,MACE,6LASAlD,EAAMiD,UATN,wBAYAjD,EAAMkD,YAZN,gCAcoBhD,IAAMC,KAAKmC,WAAWC,SAd1C,WAeArC,IAAMC,KAAKmC,WAAWE,QAftB,sBA8BO/C,IAAK0D,iBACP,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAEjDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAMjB/C,IAAK0D,iBACP1D,IAAK0D,iBAEMjD,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAIPtC,IAAMC,KAAKiD,MAAMjB,MAAMkB,GAEpBnD,IAAMuC,MAAMC,MACvBxC,IAAMuC,MAAMK,MAKV5C,IAAMuC,MAAMK,MAMb5C,IAAMuC,MAAMK,MAKX5C,IAAMuC,MAAMK,MAKrB,SAAA9C,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,sEAUVP,EAAYW,QAAUhE,IAAOC,IAA7BgE,IACe9D,IAAK+D,mBAIpBb,EAAYc,SAAWnE,IAAOC,IAA9BmE,IACejE,IAAK+D,mBAKpBb,EAAYgB,KAAOrE,IAAOsE,EAA1BC,IAEWpE,IAAK0D,iBACJ1D,IAAK0D,iBACF1D,IAAKqE,SAEA5D,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAMyC,MAAQzC,EAAMyC,MAAQvC,IAAMuC,MAAMC,QAG9CC,8kBC9If,IAAMoB,EAAmBzE,IAAOC,IAAVyE,IAINvE,IAAKwE,IAAIpE,KAAcJ,IAAKyE,OAAOrE,KAC1CK,IAAMC,KAAKN,KAAKoC,IAIzB8B,EAAiB3B,MAAQ9C,IAAOC,IAAhC4E,IAImB1E,IAAKI,KAMRJ,IAAKwE,IAAIpE,KAAcJ,IAAKyE,OAAOrE,KAC1CK,IAAMC,KAAKN,KAAKoC,IAKV8B,iBC0HAK,EA7IK,SAAA9D,GAAA,OAAA+D,IAAA/D,GAClBgE,EAAAjD,EAAAC,cAACiD,EAAD,KACED,EAAAjD,EAAAC,cAACiD,EAAiBnC,MAAlB,KACEkC,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMiC,SACrB1B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,QACZrB,QAAQ,GACRG,SAAS,gBACTmB,UAAW1E,IAAMuC,MAAMoC,QACvBC,SAAS,UAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,GACRG,SAAS,wBACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,iBAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMK,MACrBE,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMiC,SACvBzB,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,WACRG,SAAS,+DACTmB,UAAW1E,IAAMuC,MAAMiC,SACvBI,SAAS,WAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,GACRG,SAAS,sBACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,SAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,GACRG,SAAS,kBACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,WAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,OACRG,SAAS,iCACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,YAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMsC,MACrB/B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,qBACRG,SAAS,WACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,oBAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,WACRG,SAAS,uCACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,cAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMuC,SACrBhC,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,qBACRG,SAAS,kBACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,mgDC5InB,IAAMG,EAAwB3F,IAAOC,IAAV2F,IAWPhF,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,QAGrEuC,EAAsB7C,MAAQ9C,IAAOC,IAArC4F,IAIa1F,IAAK0D,kBAMlB8B,EAAsBG,OAAS9F,IAAO+F,GAAtCC,IAES7F,IAAK0D,iBACJ1D,IAAK0D,iBAIK1D,IAAK8F,oBAWzBN,EAAsBO,KAAOlG,IAAOC,IAApCkG,KAEAR,EAAsBS,UAAYpG,IAAOqG,EAAzCC,IACoBnG,IAAK+D,kBACL/D,IAAK0D,kBAKzB8B,EAAsBY,SAAWvG,IAAOqG,EAAxCG,IACerG,IAAK+D,kBACH/D,IAAK0D,iBAUJ1D,IAAK+D,kBAEC,SAAAxD,GAAK,OACvBA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,QAIvCuC,QC7DAc,EAhBU,SAAAzF,GAAA,IAAG8E,EAAH9E,EAAG8E,OAAQM,EAAXpF,EAAWoF,UAAWG,EAAtBvF,EAAsBuF,SAAU9C,EAAhCzC,EAAgCyC,UAAhC,OACvBuB,EAAAjD,EAAAC,cAAC0E,EAAD,CAAuBjD,UAAWA,EAAWrB,UAAU,kBACrD4C,EAAAjD,EAAAC,cAAC0E,EAAsB5D,MAAvB,KACEkC,EAAAjD,EAAAC,cAAC0E,EAAsBZ,OAAvB,KAA+BA,GAC/Bd,EAAAjD,EAAAC,cAAC0E,EAAsBR,KAAvB,KACElB,EAAAjD,EAAAC,cAAC0E,EAAsBN,UAAvB,KACGA,GAEHpB,EAAAjD,EAAAC,cAAC0E,EAAsBH,SAAvB,KACGA,+nECJX,IAAMI,EAAoB3G,IAAOC,IAAV2G,IAMD,SAAAlG,GAAK,OACvBA,EAAM6C,QAAU7C,EAAM6C,QAAU3C,IAAMuC,MAAMK,OAG5B5C,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAEjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAIjE,SAAA1C,GACA,GAAIA,EAAMgD,QACR,MACE,mCAEAhD,EAAMgD,QAFN,qIAaJ,SAAAhD,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,MACE,6LASAlD,EAAMiD,UATN,wBAYAjD,EAAMkD,YAZN,gCAcoBhD,IAAMC,KAAKmC,WAAWC,SAd1C,WAeArC,IAAMC,KAAKmC,WAAWE,QAftB,sBA+BO/C,IAAK0D,iBACP,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAEjDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAMjB/C,IAAK0D,iBACP1D,IAAK0D,iBAEJ,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAChDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAIPtC,IAAMC,KAAKiD,MAAMjB,MAAMkB,GAEpBnD,IAAMuC,MAAMC,MACvBxC,IAAMuC,MAAMK,MAKV5C,IAAMuC,MAAMK,MAMb5C,IAAMuC,MAAMK,MAKX5C,IAAMuC,MAAMK,MAKrB,SAAA9C,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,sEAUV+C,EAAkBb,OAAS9F,IAAO+F,GAAlCc,IAES1G,IAAK0D,iBACJ1D,IAAK0D,iBAIK1D,IAAK8F,oBAUzBU,EAAkBT,KAAOlG,IAAOC,IAAhC6G,KAEAH,EAAkB3C,QAAUhE,IAAOC,IAAnC8G,IACe5G,IAAK+D,mBAIpByC,EAAkBtC,KAAOrE,IAAOsE,EAAhC0C,IAEW7G,IAAK0D,iBACJ1D,IAAK0D,iBACF1D,IAAKqE,SAEA5D,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAMyC,MAAQzC,EAAMyC,MAAQvC,IAAMuC,MAAMC,QAG9CuD,09BC9Jf,IAAMM,GAAgBjH,IAAOC,IAAViH,MAMnBD,GAAcE,IAAMnH,IAAOC,IAA3BmH,IACoBjH,IAAK8F,mBAGD9F,IAAK0D,iBAYb1D,IAAK0D,iBACH1D,IAAK0D,iBACJ1D,IAAK0D,iBACAjD,IAAMuC,MAAMK,MAMvB5C,IAAMuC,MAAMK,MACHrD,IAAK0D,iBAET1D,IAAK0D,iBACJ1D,IAAK0D,kBAIxBoD,GAAcI,OAASrH,IAAOC,IAA9BqH,IAIsBnH,IAAK+D,mBAIZ+C,UCQAM,eA/Cb,SAAAA,EAAY7G,GAAO,IAAA8G,EAAA,OAEjBA,EAAAC,EAAAC,KAAAC,KAAMjH,IAANiH,MAGFC,MAAQ,CACNC,SAAU,IANOL,sCASnBM,kBAAA,WAAoB,IAAAC,EAAAJ,KAClBK,IACGC,IACC,uFAEDC,KAAK,SAAAC,GACJ,IAAMN,EAAWM,EAAI/G,KACrB2G,EAAKK,SAAS,CAAEP,kBAItBQ,OAAA,WACE,OACErD,EAAAjD,EAAAC,cAACsG,GAAD,KACEtD,EAAAjD,EAAAC,cAACsG,GAAcnB,IAAf,KACEnC,EAAAjD,EAAAC,cAAA,mBAEFgD,EAAAjD,EAAAC,cAACsG,GAAcjB,OAAf,KACErC,EAAAjD,EAAAC,cAAA,+BACAgD,EAAAjD,EAAAC,cAAA,kCA7BauG,IAAMC,WCwBdC,GA9BM,SAAAzH,GAAA,IACnBuC,EADmBvC,EACnBuC,QACAG,EAFmB1C,EAEnB0C,QACAgF,EAHmB1H,EAGnB0H,SAEAjF,GALmBzC,EAInBgD,QAJmBhD,EAKnByC,WACAE,EANmB3C,EAMnB2C,UACAC,EAPmB5C,EAOnB4C,YACAyB,EARmBrE,EAQnBqE,YAEAC,GAVmBtE,EASnBwE,SATmBxE,EAUnBsE,WAVmB,OAYnBN,EAAAjD,EAAAC,cAAC2G,EAAD,CACEpF,QAASA,EACTG,QAASA,EACTD,UAAWA,EACXE,UAAWA,EACXC,YAAaA,EACbxB,UAAU,kBAEV4C,EAAAjD,EAAAC,cAAC4G,EAAA,KAAD,CAAMC,GAAIxD,GACRL,EAAAjD,EAAAC,cAAC8G,EAAA,EAAD,CAAM1G,UAAU,YAAY2G,KAAK,QAAQ5F,MAAOmC,IAChDN,EAAAjD,EAAAC,cAAC2G,EAAkB7C,OAAnB,KAA2B4C,GAC3B1D,EAAAjD,EAAAC,cAAC2G,EAAkBzC,KAAnB,KACElB,EAAAjD,EAAAC,cAACgH,GAAD,CAAUN,SAAUA,ksECxB5B,IAAMO,GAAkBjJ,IAAOC,IAAViJ,KAOC,SAAAxI,GAAK,OACvBA,EAAM6C,QAAU7C,EAAM6C,QAAU3C,IAAMuC,MAAMK,OAG5B5C,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAEjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAIjE,SAAA1C,GACA,GAAIA,EAAMgD,QACR,MACE,mCAEAhD,EAAMgD,QAFN,qIAaJ,SAAAhD,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,MACE,6LASAlD,EAAMiD,UATN,wBAYAjD,EAAMkD,YAZN,gCAcoBhD,IAAMC,KAAKmC,WAAWC,SAd1C,WAeArC,IAAMC,KAAKmC,WAAWE,QAftB,sBA+BO/C,IAAK0D,iBACP,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAEjDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAMjB/C,IAAK0D,iBACP1D,IAAK0D,iBAEMjD,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAClB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAI/CxC,IAAMC,KAAKiD,MAAMjB,MAAMkB,GAEpBnD,IAAMuC,MAAMC,MACvBxC,IAAMuC,MAAMK,MAKV5C,IAAMuC,MAAMK,MAMb5C,IAAMuC,MAAMK,MAKX5C,IAAMuC,MAAMK,MAKrB,SAAA9C,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,sEAUVqF,GAAgBnD,OAAS9F,IAAO+F,GAAhCoD,KAEShJ,IAAK0D,iBACJ1D,IAAK0D,iBAIK1D,IAAK8F,oBAUzBgD,GAAgB/C,KAAOlG,IAAOC,IAA9BmJ,MAEAH,GAAgBjF,QAAUhE,IAAOC,IAAjCoJ,KACelJ,IAAK+D,kBAEI/D,IAAKI,MAG7B0I,GAAgB5E,KAAOrE,IAAOsE,EAA9BgF,KAEWnJ,IAAK0D,iBACJ1D,IAAK0D,iBACF1D,IAAKqE,SAEA5D,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAMyC,MAAQzC,EAAMyC,MAAQvC,IAAMuC,MAAMC,QAG9C6F,UC9HAM,GAlCI,SAAAvI,GAAA,IACjBuC,EADiBvC,EACjBuC,QACAG,EAFiB1C,EAEjB0C,QACAoC,EAHiB9E,EAGjB8E,OACA9B,EAJiBhD,EAIjBgD,QACAP,EALiBzC,EAKjByC,UACAE,EANiB3C,EAMjB2C,UACAC,EAPiB5C,EAOjB4C,YACAyB,EARiBrE,EAQjBqE,YACAG,EATiBxE,EASjBwE,SACAF,EAViBtE,EAUjBsE,UAViB,OAYjBN,EAAAjD,EAAAC,cAACwH,GAAD,CACEjG,QAASA,EACTG,QAASA,EACTD,UAAWA,EACXE,UAAWA,EACXC,YAAaA,EACbxB,UAAU,kBAEV4C,EAAAjD,EAAAC,cAAC4G,EAAA,KAAD,CAAMC,GAAIxD,GACRL,EAAAjD,EAAAC,cAACwH,GAAgB1D,OAAjB,KAAyBA,GACzBd,EAAAjD,EAAAC,cAAC8G,EAAA,EAAD,CAAM1G,UAAU,YAAY2G,KAAK,QAAQ5F,MAAOmC,IAChDN,EAAAjD,EAAAC,cAACwH,GAAgBtD,KAAjB,KACElB,EAAAjD,EAAAC,cAACwH,GAAgBxF,QAAjB,KAA0BA,IAE5BgB,EAAAjD,EAAAC,cAACwH,GAAgBnF,KAAjB,CACEjC,UAAW,UAAYoD,EACvBrC,MAAOmC,OCjBTmE,eACJ,SAAAA,EAAY/I,GAAO,OAEjB+G,EAAAC,KAAAC,KAAMjH,IAFWiH,iCAKnBU,OAAA,WAAS,IAAAb,EAAAG,KAYP,OACE3C,EAAAjD,EAAAC,cAAAgD,EAAAjD,EAAA2H,SAAA,KACE1E,EAAAjD,EAAAC,cAAC2H,EAAA,OAAD,KACE3E,EAAAjD,EAAAC,cAAA,QAAM4H,IAAI,aAAaC,KAAK,WAAWC,KAAK,0BAC5C9E,EAAAjD,EAAAC,cAAA,QACE4H,IAAI,aACJC,KAAK,WACLC,KAAK,iCAGT9E,EAAAjD,EAAAC,cAAC+H,EAAAhI,EAADG,OAAAC,OAAA,CAAQ6H,IAAK,SAAAC,GAAC,OAAKzC,EAAK0C,OAASD,IApBpB,CACfE,MAAM,EACNC,MAAO,KACPC,QAAQ,EACRC,cAAe,IACfC,aAAc,EACdC,UAAU,EACVC,UAAU,IAcL9C,KAAKjH,MAAMgK,eA7BKnC,IAAMC,WAqC3BmC,eACJ,SAAAA,EAAYjK,GAAO,OAEjBkK,EAAAlD,KAAAC,KAAMjH,IAFWiH,iCAMnBU,OAAA,WACE,IAAMwC,EAAgBlD,KAAKjH,MAAMmK,cAGjC,OAAIA,EAAcC,OAAS,EAWvB9F,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAAC+I,GAAD,KACGF,EAAcG,IAAI,SAACC,EAASC,GAC3B,OAAQD,EAAQE,OACd,IAAK,UACH,OACEnG,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS0H,EAAQG,KAAKC,QAAQ9H,QAC9BG,QAASuH,EAAQG,KAAKC,QAAQ3H,QAC9B4H,QAASL,EAAQG,KAAKC,QAAQC,QAC9B7H,UAAWwH,EAAQG,KAAKC,QAAQ5H,UAChCE,UAAWsH,EAAQG,KAAKC,QAAQ1H,UAChCC,YAAaqH,EAAQG,KAAKC,QAAQzH,YAClCyB,YAAa4F,EAAQ5F,YACrBrB,QAASiH,EAAQG,KAAKC,QAAQrH,QAC9BG,SAAU8G,EAAQG,KAAKC,QAAQlH,SAC/BqB,SAAUyF,EAAQG,KAAKC,QAAQ7F,SAC/BF,UAAW2F,EAAQG,KAAKC,QAAQ/F,UAChCiG,IAAKL,IAGX,IAAK,aACH,OACElG,EAAAjD,EAAAC,cAACwJ,GAAD,CACEjI,QAAS0H,EAAQG,KAAK7B,WAAWhG,QACjCG,QAASuH,EAAQG,KAAK7B,WAAW7F,QACjCD,UAAWwH,EAAQG,KAAK7B,WAAW9F,UACnCE,UAAWsH,EAAQG,KAAK7B,WAAW5F,UACnCC,YAAaqH,EAAQG,KAAK7B,WAAW3F,YACrCyB,YAAa4F,EAAQ5F,YACrBrB,QAASiH,EAAQG,KAAK7B,WAAWvF,QACjC8B,OAAQmF,EAAQG,KAAK7B,WAAWzD,OAChCN,SAAUyF,EAAQG,KAAK7B,WAAW/D,SAClCF,UAAW2F,EAAQG,KAAK7B,WAAWjE,UACnCiG,IAAKL,IAGX,IAAK,eACH,OACElG,EAAAjD,EAAAC,cAACyJ,GAAD,CACElI,QAAS0H,EAAQG,KAAK3C,aAAalF,QACnCG,QAASuH,EAAQG,KAAK3C,aAAa/E,QACnCD,UAAWwH,EAAQG,KAAK3C,aAAahF,UACrCE,UAAWsH,EAAQG,KAAK3C,aAAa9E,UACrCC,YAAaqH,EAAQG,KAAK3C,aAAa7E,YACvCyB,YAAa4F,EAAQ5F,YACrBqD,SAAUuC,EAAQG,KAAK3C,aAAaC,SACpC6C,IAAKL,IAGX,IAAK,UACH,OACElG,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS0H,EAAQG,KAAKC,QAAQ9H,QAC9BG,QAASuH,EAAQG,KAAKC,QAAQ3H,QAC9B4H,QAASL,EAAQG,KAAKC,QAAQC,QAC9B7H,UAAWwH,EAAQG,KAAKC,QAAQ5H,UAChCE,UAAWsH,EAAQG,KAAKC,QAAQ1H,UAChCC,YAAaqH,EAAQG,KAAKC,QAAQzH,YAClCyB,YAAa4F,EAAQ5F,YACrBrB,QAASiH,EAAQG,KAAKC,QAAQrH,QAC9BG,SAAU8G,EAAQG,KAAKC,QAAQlH,SAC/BqB,SAAUyF,EAAQG,KAAKC,QAAQ7F,SAC/BF,UAAW2F,EAAQG,KAAKC,QAAQ/F,UAChCiG,IAAKL,SAwBnBlG,EAAAjD,EAAAC,cAAAgD,EAAAjD,EAAA2H,SAAA,KACGmB,EAAcG,IAAI,SAACC,EAASC,GAC3B,OAAQD,EAAQE,OACd,IAAK,QACH,OAAOnG,EAAAjD,EAAAC,cAAC0J,EAAD,CAAaH,IAAKL,IAC3B,IAAK,UAkBL,IAAK,UACH,OACElG,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,CAA4ByI,IAAKL,GAC/BlG,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS0H,EAAQG,KAAKC,QAAQ9H,QAC9BG,QAASuH,EAAQG,KAAKC,QAAQ3H,QAC9B4H,QAASL,EAAQG,KAAKC,QAAQC,QAC9B7H,UAAWwH,EAAQG,KAAKC,QAAQ5H,UAChCE,UAAWsH,EAAQG,KAAKC,QAAQ1H,UAChCC,YAAaqH,EAAQG,KAAKC,QAAQzH,YAClCyB,YAAa4F,EAAQ5F,YACrBrB,QAASiH,EAAQG,KAAKC,QAAQrH,QAC9BG,SAAU8G,EAAQG,KAAKC,QAAQlH,SAC/BqB,SAAUyF,EAAQG,KAAKC,QAAQ7F,SAC/BF,UAAW2F,EAAQG,KAAKC,QAAQ/F,aAIxC,IAAK,aACH,OACEN,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,CAA4ByI,IAAKL,GAC/BlG,EAAAjD,EAAAC,cAACwJ,GAAD,CACEjI,QAAS0H,EAAQG,KAAK7B,WAAWhG,QACjCG,QAASuH,EAAQG,KAAK7B,WAAW7F,QACjCD,UAAWwH,EAAQG,KAAK7B,WAAW9F,UACnCE,UAAWsH,EAAQG,KAAK7B,WAAW5F,UACnCC,YAAaqH,EAAQG,KAAK7B,WAAW3F,YACrCyB,YAAa4F,EAAQ5F,YACrBrB,QAASiH,EAAQG,KAAK7B,WAAWvF,QACjC8B,OAAQmF,EAAQG,KAAK7B,WAAWzD,OAChCN,SAAUyF,EAAQG,KAAK7B,WAAW/D,SAClCF,UAAW2F,EAAQG,KAAK7B,WAAWjE,aAI3C,IAAK,eACH,OACEN,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,CAA4ByI,IAAKL,GAC/BlG,EAAAjD,EAAAC,cAACyJ,GAAD,CACElI,QAAS0H,EAAQG,KAAK3C,aAAalF,QACnCG,QAASuH,EAAQG,KAAK3C,aAAa/E,QACnCD,UAAWwH,EAAQG,KAAK3C,aAAahF,UACrCE,UAAWsH,EAAQG,KAAK3C,aAAa9E,UACrCC,YAAaqH,EAAQG,KAAK3C,aAAa7E,YACvCyB,YAAa4F,EAAQ5F,YACrBqD,SAAUuC,EAAQG,KAAK3C,aAAaC,SACpC6C,IAAKL,KAIb,IAAK,aACH,OACElG,EAAAjD,EAAAC,cAAC2J,EAAD,CACE7F,OAAQmF,EAAQG,KAAKO,WAAW7F,OAChCM,UAAW6E,EAAQG,KAAKO,WAAWvF,UACnCG,SAAU0E,EAAQG,KAAKO,WAAWpF,SAClC9C,UAAWwH,EAAQG,KAAKO,WAAWlI,UACnC8H,IAAKL,YA9LA3C,IAAMC,WA+MhBoD,IANS,SAAA5K,GAAA,IAAG6J,EAAH7J,EAAG6J,cAAejI,EAAlB5B,EAAkB4B,KAAMC,EAAxB7B,EAAwB6B,MAAxB,OACtBmC,EAAAjD,EAAAC,cAACkD,EAAD,CAAsB9C,UAAU,SAASQ,KAAMA,EAAMC,MAAOA,GAC1DmC,EAAAjD,EAAAC,cAAC6J,GAAD,CAAYhB,cAAeA,wCC1Q/B,IAAAiB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GA4BeE,IAlBE,SAAApL,KACfI,KADe,IAEfF,EAFeF,EAEfE,IACAD,EAHeD,EAGfC,QACAmB,EAJepB,EAIfoB,UACAC,EALerB,EAKfqB,UACAC,EANetB,EAMfsB,eANe,OAQf0J,EAAAjK,EAAAC,cAACmK,EAAApK,EAAD,CACES,MAAOtB,EACPmB,UAAWA,GAAwB,QACnCC,eAAgBA,GAAkC,UAClDrB,QAASA,EACTmB,UAAWA,GAAwB,MACnCiK,QAAQ,4tECRZ,IAAMhJ,EAAcrD,IAAOC,IAAVC,IAMK,SAAAQ,GAAK,OACvBA,EAAM6C,QAAU7C,EAAM6C,QAAU3C,IAAMuC,MAAMK,OAI5B5C,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAEjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAKjE,SAAA1C,GACA,GAAIA,EAAMgD,QACR,MACE,mCAEAhD,EAAMgD,QAFN,qIAyBJ,SAAAhD,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,MACE,oNAUAlD,EAAMiD,UAVN,wBAaAjD,EAAMkD,YAbN,gCAeoBhD,IAAMC,KAAKmC,WAAWC,SAf1C,WAgBArC,IAAMC,KAAKmC,WAAWE,QAhBtB,sBAiCO/C,IAAK0D,iBACP,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAEjDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAMjB/C,IAAK0D,iBACP1D,IAAK0D,iBAEJ,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAChDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAIPtC,IAAMC,KAAKiD,MAAMjB,MAAMkB,GAEpBnD,IAAMuC,MAAMC,MACvBxC,IAAMuC,MAAMK,MAKV5C,IAAMuC,MAAMK,MAMb5C,IAAMuC,MAAMK,MAKX5C,IAAMuC,MAAMK,MAKrB,SAAA9C,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,sEAUVP,EAAYW,QAAUhE,IAAOC,IAA7BQ,IACeN,IAAK+D,mBAKpBb,EAAYc,SAAWnE,IAAOC,IAA9BmE,IACejE,IAAK+D,mBAMpBb,EAAYgB,KAAOrE,IAAOsE,EAA1BC,IAEWpE,IAAK0D,iBACJ1D,IAAK0D,iBACF1D,IAAKqE,SAEA5D,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAMyC,MAAQzC,EAAMyC,MAAQvC,IAAMuC,MAAMC,QAG9CC,kCCxGAiJ,IAxCO,SAAAtL,GAAA,IACpBuC,EADoBvC,EACpBuC,QACAG,EAFoB1C,EAEpB0C,QACA4H,EAHoBtK,EAGpBsK,QACA7H,EAJoBzC,EAIpByC,UACAE,EALoB3C,EAKpB2C,UACAC,EANoB5C,EAMpB4C,YACAyB,EAPoBrE,EAOpBqE,YACArB,EARoBhD,EAQpBgD,QACAG,EAToBnD,EASpBmD,SACAmB,EAVoBtE,EAUpBsE,UACAE,EAXoBxE,EAWpBwE,SACA+G,EAZoBvL,EAYpBuL,YACAC,EAboBxL,EAapBwL,eAboB,OAepBxH,EAAAjD,EAAAC,cAACkD,EAAD,CACE3B,QAASA,EACTG,QAASA,EACTD,UAAW8I,EAAc3L,IAAMuC,MAAMK,MAAQC,EAC7CE,UAAWA,EACXC,YAAaA,EACbxB,UAAU,kBAEV4C,EAAAjD,EAAAC,cAAC4G,EAAA,KAAD,CAAMC,GAAIxD,GACRL,EAAAjD,EAAAC,cAACkD,EAAYlB,QAAb,CAAqB5B,UAAU,sBAC5B4B,GAEHgB,EAAAjD,EAAAC,cAACkD,EAAYf,SAAb,CAAsB/B,UAAU,mBAC7B+B,GAEHa,EAAAjD,EAAAC,cAAC8G,EAAA,EAAD,CAAM1G,UAAU,YAAY2G,KAAK,QAAQ5F,MAAOmC,IAChDN,EAAAjD,EAAAC,cAACkD,EAAYb,KAAb,CAAkBjC,UAAW,UAAYoD,EAAUrC,MAAOmC,KAE3DiH,EACCvH,EAAAjD,EAAAC,cAACyK,EAAA,EAAD,CAAUvL,IAAKqL,EAAatL,QAASuL,IACnC,KACHlB,EAAUtG,EAAAjD,EAAAC,cAACoK,EAAA,EAAD,CAAUlL,IAAKoK,EAASrK,QAASuL,IAAqB","file":"3-337080b618ec6a1c7a81.js","sourcesContent":["// SectionInnerStyle Styles:\n// These are nearly identical to the Hero base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n  padding-right: ${Root.Size};\n`;\n\nexport const SectionContentStyle = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  display: flex;\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Dynamic query variables in GraphQl queries for Gatsby-Image\n// Learn more: https://github.com/gatsbyjs/gatsby/issues/10482#issuecomment-485349612\n\nimport React, { useMemo } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Img from 'gatsby-image/withIEPolyfill';\n\nconst Image = ({ AltText, src, ...props }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { internal: { mediaType: { regex: \"images/\" } } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 650) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const match = useMemo(\n    () => data.allFile.edges.find(({ node }) => src === node.relativePath),\n    [data, src]\n  );\n\n  return (\n    <Img\n      className=\"img\"\n      objectFit=\"cover\"\n      objectPosition=\"50% 50%\"\n      alt={AltText ? AltText : null}\n      fluid={match.node.childImageSharp.fluid}\n      {...props}\n    />\n  );\n};\n\nexport default Image;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetContainerStyle = styled.div`\n  padding-top: ${Theme.Base.Size.Sm};\n  flex: ${props => (props.Flex ? props.Flex : '1')};\n  display: flex;\n  flex-direction: column;\n  width: ${props =>\n    props.Width ? 'calc(' + Root.Size + ' * ' + props.Width + ')' : '100%'};\n`;\n\nWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n\n  /* Slick Slider Adjustments */\n\n  .slick-slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    .slick-dots {\n      bottom: ${Theme.Base.Size.Sm};\n      left: ${Theme.Base.Size.Sm};\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .slick-slider,\n  .slick-list,\n  .slick-track {\n    flex: 1;\n  }\n\n  .slick-list,\n  .slick-slider {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n  }\n\n  .slick-slide {\n    display: flex !important;\n    flex-direction: column;\n    align-items: stretch;\n    flex: 1;\n\n    &:first-child {\n      padding: 0;\n    }\n\n    div {\n      &:first-child {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n    }\n\n    .widget-content {\n      flex: 1;\n\n      div {\n        &:first-child {\n          flex: unset;\n          display: unset;\n          flex-direction: unset;\n          align-items: unset;\n        }\n      }\n    }\n  }\n`;\n\nexport default WidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Cross Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Cross Widget Content */\nconst CrossWidgetStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(\n    (100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size})) -\n      (${Theme.Base.Size.Sm} * 2)\n  );\n`;\n\nCrossWidgetStyle.Inner = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0.75fr 1fr;\n  grid-template-rows: 1fr 0.75fr 1fr;\n  grid-gap: calc(${Root.Size} / 4);\n  justify-content: stretch;\n  justify-items: stretch;\n  grid-auto-flow: row;\n  align-items: stretch;\n  width: calc(\n    (100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size})) -\n      (${Theme.Base.Size.Sm} * 2)\n  );\n  flex: 1;\n`;\n\nexport default CrossWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// CrossWidget.js:\n\n// Visual:\n// https://www.dropbox.com/s/474d6mc15w2q1vk/Screenshot%202019-04-16%2012.41.23.png?dl=0\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport CrossWidgetStyle from './styles.scss';\nimport WidgetContainerStyle from './../../Container/styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport DefaultWidget from './../Default';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst CrossWidget = ({}) => (\n  <CrossWidgetStyle>\n    <CrossWidgetStyle.Inner>\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Nightsky}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/menu\"\n          Subhead=\"\"\n          Headline=\"View Our Menu\"\n          IconColor={Theme.Color.Primary}\n          IconName=\"plus\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Speak to a Real Human\"\n          IconColor={Theme.Color.White}\n          IconName=\"comment-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.White}\n          BgImage=\"\"\n          TextColor={Theme.Color.Nightsky}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Outreach\"\n          Headline=\"How we raised $5,000 for the Children’s Leukemia Foundation.\"\n          IconColor={Theme.Color.Nightsky}\n          IconName=\"heart\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"100% Free Delivery.\"\n          IconColor={Theme.Color.White}\n          IconName=\"car\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Order by Phone.\"\n          IconColor={Theme.Color.White}\n          IconName=\"phone\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"2018\"\n          Headline=\"Voted Best Boutique Dispensary\"\n          IconColor={Theme.Color.White}\n          IconName=\"trophy\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Slate}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Delivery Available\"\n          Headline=\"Reno, NV\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"May 16th\"\n          Headline=\"Fundraiser for Ronald McDonald House\"\n          IconColor={Theme.Color.White}\n          IconName=\"calendar\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Gunmetal}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Delivery Available\"\n          Headline=\"Carson City, NV\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n    </CrossWidgetStyle.Inner>\n  </CrossWidgetStyle>\n);\n\nexport default CrossWidget;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideHeaderWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: none;\n  position: relative;\n  overflow: hidden;\n  max-width: 350px;\n  cursor: crosshair;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSideHeaderWidgetStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Root.ViewWidthPadding};\n  flex: 1;\n  width: 100%;\n  position: relative;\n`;\n\nSideHeaderWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  opacity: 0.3;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideHeaderWidgetStyle.Body = styled.div``;\n\nSideHeaderWidgetStyle.IntroCopy = styled.p`\n  font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n  padding-bottom: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: light;\n`;\n\nSideHeaderWidgetStyle.BodyCopy = styled.p`\n  font-size: ${Root.ViewWidthFontSize};\n  padding-top: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: regular;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: calc(${Root.ViewWidthFontSize} * 1.5);\n    height: 1px;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n`;\n\nexport default SideHeaderWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideHeaderWidgetStyle.js:\n\n// Core\nimport React from 'react';\n\n// Styles\nimport SideHeaderWidgetStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideHeaderWidget = ({ Header, IntroCopy, BodyCopy, TextColor }) => (\n  <SideHeaderWidgetStyle TextColor={TextColor} className=\"widget-content\">\n    <SideHeaderWidgetStyle.Inner>\n      <SideHeaderWidgetStyle.Header>{Header}</SideHeaderWidgetStyle.Header>\n      <SideHeaderWidgetStyle.Body>\n        <SideHeaderWidgetStyle.IntroCopy>\n          {IntroCopy}\n        </SideHeaderWidgetStyle.IntroCopy>\n        <SideHeaderWidgetStyle.BodyCopy>\n          {BodyCopy}\n        </SideHeaderWidgetStyle.BodyCopy>\n      </SideHeaderWidgetStyle.Body>\n    </SideHeaderWidgetStyle.Inner>\n  </SideHeaderWidgetStyle>\n);\n\nexport default SideHeaderWidget;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideForecastStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideForecastStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideForecastStyle.Body = styled.div``;\n\nSideForecastStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nSideForecastStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Button Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst ForecastStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nForecastStyle.Top = styled.div`\n  font-size: calc(${Root.ViewHeightFontSize} * 5);\n  font-family: 'Roboto', 'Helvetica', sans-serif;\n  font-weight: 100;\n  padding-right: calc(${Root.ViewWidthPadding} * 1.2);\n  margin-left: -5px;\n  position: relative;\n\n  &:before,\n  &:after {\n    position: absolute;\n    right: 0;\n  }\n\n  &:before {\n    content: '';\n    top: calc(${Root.ViewWidthPadding} / 2.2);\n    width: calc(${Root.ViewWidthPadding} / 1.4);\n    height: calc(${Root.ViewWidthPadding} / 1.4);\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 100%;\n  }\n\n  &:after {\n    content: 'F';\n    color: ${Theme.Color.White};\n    font-size: calc(${Root.ViewWidthPadding});\n    line-height: 0;\n    right: calc(${Root.ViewWidthPadding} / 5.5);\n    bottom: calc(${Root.ViewWidthPadding} / 1.1);\n  }\n`;\n\nForecastStyle.Bottom = styled.div`\n  span {\n    display: block;\n    line-height: 1.4;\n    font-size: calc(${Root.ViewWidthFontSize} / 1.25);\n  }\n`;\n\nexport default ForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Forecast Component:\n// This is the component to display a\n// Forecast from a specific location.\n\n// TODO: Fix CORS Console Error\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport axios from 'axios';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport ForecastStyle from 'components/library/Forecast/styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  state = {\n    forecast: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        'https://api.darksky.net/forecast/20fcdf5192dab046a8b9303c6f6d2667/37.8267,-122.4233'\n      )\n      .then(res => {\n        const forecast = res.data;\n        this.setState({ forecast });\n      });\n  }\n\n  render() {\n    return (\n      <ForecastStyle>\n        <ForecastStyle.Top>\n          <span>64</span>\n        </ForecastStyle.Top>\n        <ForecastStyle.Bottom>\n          <span>Overcast Clouds</span>\n          <span>45% Humidity</span>\n        </ForecastStyle.Bottom>\n      </ForecastStyle>\n    );\n  }\n}\n\n// const Forecast = ({}) => (\n//   <ForecastStyle>\n//     <ForecastStyle.Top>\n//       <span>64</span>\n//     </ForecastStyle.Top>\n//     <ForecastStyle.Bottom>\n//       <span>Overcast Clouds</span>\n//       <span>45% Humidity</span>\n//     </ForecastStyle.Bottom>\n//   </ForecastStyle>\n// );\n\nexport default Forecast;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SideForecastStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideForecastStyle from './styles.scss';\n\n// Components\nimport Forecast from '../../../Forecast';\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideForecast = ({\n  BgColor,\n  BgImage,\n  Location,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideForecastStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideForecastStyle.Header>{Location}</SideForecastStyle.Header>\n      <SideForecastStyle.Body>\n        <Forecast Location={Location} />\n      </SideForecastStyle.Body>\n    </Link>\n  </SideForecastStyle>\n);\n\nexport default SideForecast;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  max-width: 350px;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideWidgetStyle.Body = styled.div``;\n\nSideWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: calc(${Root.Size} / 1.5);\n`;\n\nSideWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideWidgetStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideWidget = ({\n  BgColor,\n  BgImage,\n  Header,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideWidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <SideWidgetStyle.Header>{Header}</SideWidgetStyle.Header>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideWidgetStyle.Body>\n        <SideWidgetStyle.Subhead>{Subhead}</SideWidgetStyle.Subhead>\n      </SideWidgetStyle.Body>\n      <SideWidgetStyle.Icon\n        className={'fas fa-' + IconName}\n        Color={IconColor}\n      />\n    </Link>\n  </SideWidgetStyle>\n);\n\nexport default SideWidget;\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport WidgetContainerStyle from './styles.scss';\n\n// Components\nimport ArticleWidget from '../Library/Article';\nimport CrossWidget from '../Library/Cross';\nimport DefaultWidget from '../Library/Default';\nimport SideHeaderWidget from '../Library/SideHeader';\nimport SideForecast from '../Library/SideForecast';\nimport SideWidget from '../Library/SideWidget';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Widget Slider:\n// For WidgetContainers with multiple widgets\n// inside of them.\nclass WidgetSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: true,\n      speed: 1500,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: 1,\n      autoplay: true,\n      infinite: true,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={g => (this.slider = g)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// WidgetType\nclass WidgetType extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  // Render\n  render() {\n    const WidgetContent = this.props.WidgetContent;\n\n    // If the Widget Content is > 1, then make a Slider.\n    if (WidgetContent.length > 1) {\n      return (\n        // In this case we wrap the entire element in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // SideForecast\n        // SideWidget\n        // Default\n\n        <WidgetContainerStyle.Inner>\n          <WidgetSlider>\n            {WidgetContent.map((Content, index) => {\n              switch (Content.Style) {\n                case 'Article':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      key={index}\n                    />\n                  );\n                case 'SideWidget':\n                  return (\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                      key={index}\n                    />\n                  );\n                case 'SideForecast':\n                  return (\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  );\n                case 'Generic':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      key={index}\n                    />\n                  );\n              }\n            })}\n          </WidgetSlider>\n        </WidgetContainerStyle.Inner>\n      );\n    }\n\n    // If there is only 1 Widget.\n    else {\n      return (\n        // In this case we wrap the INDIVIDUAL elements in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii\n        // if needed, allowing for more customized Widget Components.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // Cross\n        // SideHeader\n        // SideForecast\n        // SideWidget\n        // Default\n        <>\n          {WidgetContent.map((Content, index) => {\n            switch (Content.Style) {\n              case 'Cross':\n                return <CrossWidget key={index} />;\n              case 'Article':\n                return (\n                  <WidgetContainerStyle.Inner key={index}>\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'Generic':\n                return (\n                  <WidgetContainerStyle.Inner key={index}>\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideWidget':\n                return (\n                  <WidgetContainerStyle.Inner key={index}>\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideForecast':\n                return (\n                  <WidgetContainerStyle.Inner key={index}>\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideHeader':\n                return (\n                  <SideHeaderWidget\n                    Header={Content.Meta.SideHeader.Header}\n                    IntroCopy={Content.Meta.SideHeader.IntroCopy}\n                    BodyCopy={Content.Meta.SideHeader.BodyCopy}\n                    TextColor={Content.Meta.SideHeader.TextColor}\n                    key={index}\n                  />\n                );\n            }\n          })}\n        </>\n      );\n    }\n  }\n}\n\nconst WidgetContainer = ({ WidgetContent, Flex, Width }) => (\n  <WidgetContainerStyle className=\"widget\" Flex={Flex} Width={Width}>\n    <WidgetType WidgetContent={WidgetContent} />\n  </WidgetContainerStyle>\n);\n\nexport default WidgetContainer;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  src,\n  AltText,\n  className,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={src}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    AltText={AltText}\n    className={className ? className : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  min-width: 100px;\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: relative;\n    z-index: 10;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Example Usage:\n// <Widget\n// WidgetContent={WidgetContent}\n// BgImage=\"https://source.unsplash.com/1600x1200/?cannabis\"\n// TintColor={Theme.Color.Black}\n// TintOpacity=\".5\"\n// Subhead=\"Subhead\"\n// Headline=\"Headline\"\n// TextColor={Theme.Color.White}\n// IconColor={Theme.Color.White}\n// IconName=\"graduation-cap\"\n// Destination=\"/subpage\"\n// />;\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst DefaultWidget = ({\n  BgColor,\n  BgImage,\n  BgQuery,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n  BgImageFile,\n  BgImageAltText,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={BgImageFile ? Theme.Color.White : TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <WidgetStyle.Subhead className=\"widget-subheadline\">\n        {Subhead}\n      </WidgetStyle.Subhead>\n      <WidgetStyle.Headline className=\"widget-headline\">\n        {Headline}\n      </WidgetStyle.Headline>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n    </Link>\n    {BgImageFile ? (\n      <ImgMatch src={BgImageFile} AltText={BgImageAltText} />\n    ) : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={BgImageAltText} /> : null}\n  </WidgetStyle>\n);\n\nexport default DefaultWidget;\n"],"sourceRoot":""}