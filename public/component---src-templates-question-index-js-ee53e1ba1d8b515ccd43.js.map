{"version":3,"sources":["webpack:///./src/templates/Question/layout.js","webpack:///./src/templates/Question/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/templates/Learn/Transformer/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/templates/Question/Transformer/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/Section/LearnSection/index.js"],"names":["PostDetails","_ref","Author","Time","react_default","a","createElement","className","itemProp","TagList","_ref2","baseUrl","categorySlug","list","Tags","CategorySlug","TextColor","CategoryName","Fragment","Breadcrumb","Crumbs","map","tag","index","Destination","Label","string","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","Theme","Color","White","QuestionTemplate","_ref3","BgQuery","PageTheme","Location","AllCategories","QuestionData","Layout","BgColor","Background","PrimaryColor","Primary","SecondaryColor","Secondary","TertiaryColor","Tertiary","SubLevelPage","itemScope","itemType","SimpleHero","Size","BgAlt","title","Tint","Block","AlignItems","Width","maxWidth","layout_TagList","tags","SocialStrip","Margin","ItemProp","SimpleSection","Snow","Nightsky","Padding","layout_PostDetails","date","author","shortAnswer","longAnswer","LearnSection","Prefix","Categories","Filter","category","QuestionFooter","__webpack_require__","d","__webpack_exports__","query","QuestionPage","props","QuestionCategory","questionDataTransformer","data","allPrismicQuestion","edges","node","categoryDataTransformer","allPrismicQuestionCategory","Category","Slug","layout","coverImage","location","href","Name","key","BlockStyle","styled","div","_templateObject","Flex","flex","Style","css","_templateObject2","JustifyContent","BgTint","Base","Grid","SiteWidth","Root","children","BgMatch","styles_scss","ImgMatch","src","AltText","ImgQuery","SlideSectionStyle","Sm","Media","Md","Black","Inner","SectionInnerStyle","Gutter","Left","Right","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","Headline","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","useTransform","infinite","arrows","settings","dots","speed","autoplaySpeed","draggable","nextArrow","prevArrow","responsive","breakpoint","Helmet","rel","type","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","Btn","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","WidgetContent","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","WrapperLock","createGlobalStyle","WrapperRelease","WidgetSection","Slider","WidgetSection_styles_scss","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","SimpleSectionStyle","FluidHeight","SimpleSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","categories","id","name","text","icon","headline","uid","color_background","color_primary","color_secondary","color_tertiary","tag_name","tag_icon","tag_slug","SimpleHeroStyle","TintBorder","Hero","BreadCrumb","Link","Bread","crumb","QuestionListingsStyles","QuestionCards","CategoryFilter","TagFilter","TagSlug","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","length","categoryMap","questionsMap","Question","filteredCategory","slug","BgImageAltText","includes","Whitee","_3828252607","QuestionListings","QuestionListings_styles_scss","QuestionListings_QuestionCards","anObject","$flags","DESCRIPTORS","$toString","define","fn","source","flags","R","concat","undefined","global","inheritIfRequired","gOPN","isRegExp","$RegExp","proto","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","constructor","proxy","set","it","keys","isObject","setPrototypeOf","module","exports","that","target","C","P","S","check","O","TypeError","test","buggy","Array","__proto__","pIE","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","getOwnPropertyDescriptor","$keys","hiddenKeys","getOwnPropertyNames","SocialStripStyle","span","question","isArray","questionPost","document","cover_image","localFile","childImageSharp","fluid","short_answer","long_answer","SplitSectionStyle","Site","SplitSection","SplitSection_styles_scss","HeroStripStyle","ViewWidthFontSize","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_1344697354","HideCategories","IconClass","IconPosition","QuestionFooter_BrowseCategories","SlideSectionWithData","BaseUrl","Data","Tag","react__WEBPACK_IMPORTED_MODULE_1___default","components_library_Section_SlideSection__WEBPACK_IMPORTED_MODULE_2__","components_library_Block__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-templates-question-index-js-ee53e1ba1d8b515ccd43.js","sourcesContent":["// templates/Question.js:\n// This is the Question template of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/core/Layout';\n\n// Components\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\n\n// Hero Components\nimport SimpleHero from 'components/library/Hero/SimpleHero';\n\n//// Section Components\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport LearnSection from 'components/library/Section/LearnSection';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport SocialStrip from 'components/library/SocialStrip';\nimport Btn from 'components/library/Btn';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Slugify Helper\n\nfunction slugify(string) {\n  const a = 'àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœṕŕßśșțùúüûǘẃẍÿź·/_,:;';\n  const b = 'aaaaaaaaceeeeghiiiimnnnoooooprssstuuuuuwxyz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with ‘and’\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n}\n\n// Post Details Snippet\nconst PostDetails = ({ Author, Time }) => (\n  <span className=\"post-details\">\n    Answered <time itemProp=\"datePublished\">{Time}</time> by{' '}\n    <span className=\"post-author\" itemProp=\"author\">\n      {Author}\n    </span>\n  </span>\n);\n\n// Breadcrumb Tag List\nconst TagList = ({ Tags, CategorySlug, CategoryName, TextColor }) => {\n  // Tag Crumb Function\n  function tagCrumbs(baseUrl, categorySlug, categoryName, list) {\n    let crumbs = list.map((tag, index) => {\n      if (index == 0) {\n        return {\n          Destination: '/' + baseUrl + '/' + categorySlug,\n          Label: categorySlug + ' Cannabis Questions',\n        };\n      } else {\n        return {\n          Destination: '/' + baseUrl + '/' + categorySlug + '/' + slugify(tag),\n          Label: tag,\n        };\n      }\n    });\n\n    return crumbs;\n  }\n\n  return (\n    <>\n      <Bread\n        Crumbs={tagCrumbs('learn', CategorySlug, CategoryName, Tags)}\n        TextColor={TextColor ? TextColor : Theme.Color.White}\n      />\n    </>\n  );\n};\n\n// The Question Template\nconst QuestionTemplate = ({\n  BgQuery,\n  PageTheme,\n  Location,\n  CategorySlug,\n  AllCategories,\n  QuestionData,\n  CategoryName,\n}) => (\n  <Layout\n    BgColor={PageTheme.Color.Background}\n    PrimaryColor={PageTheme.Color.Primary}\n    SecondaryColor={PageTheme.Color.Secondary}\n    TertiaryColor={PageTheme.Color.Tertiary}\n  >\n    <SubLevelPage\n      BgColor={PageTheme.Color.Background}\n      PrimaryColor={PageTheme.Color.Primary}\n      SecondaryColor={PageTheme.Color.Secondary}\n      TertiaryColor={PageTheme.Color.Tertiary}\n    >\n      {/* Schema.org BlogPosting */}\n      {/* Read more: https://schema.org/BlogPosting */}\n\n      <article itemScope itemType=\"http://schema.org/BlogPosting\">\n        {/* ///////////// */}\n\n        <SimpleHero\n          Size=\"2\"\n          BgQuery={BgQuery}\n          BgAlt={QuestionData.title}\n          TextColor={BgQuery ? Theme.Color.White : PageTheme.Color.Primary}\n          Tint={BgQuery ? 0.5 : 0}\n        >\n          <Block AlignItems=\"flex-start\" Width={1} maxWidth={0.75}>\n            <TagList\n              Tags={QuestionData.tags}\n              CategorySlug={CategorySlug}\n              CategoryName={CategoryName}\n              TextColor={BgQuery ? Theme.Color.White : PageTheme.Color.Primary}\n            />\n\n            <h1 itemProp=\"name\">{QuestionData.title}</h1>\n            <SocialStrip\n              Margin={[0, 0, 0, 0]}\n              Location={Location}\n              TextColor={BgQuery ? Theme.Color.White : PageTheme.Color.Primary}\n            />\n          </Block>\n        </SimpleHero>\n\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.White}\n          ItemProp=\"articleBody\"\n        >\n          {/* ///////////// */}\n\n          <SimpleSection\n            BgColor={Theme.Color.Snow}\n            TextColor={Theme.Color.Nightsky}\n          >\n            <Block Padding={[1, 0, 1, 0]} maxWidth={0.5}>\n              <PostDetails\n                Time={QuestionData.date}\n                Author={QuestionData.author}\n              />\n              <h3>{QuestionData.shortAnswer}</h3>\n              <p className=\"p-md\">{QuestionData.longAnswer}</p>\n            </Block>\n          </SimpleSection>\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n        {/* ///////////// */}\n      </article>\n\n      {/* The Related Categories. */}\n      <SubLevelPageContent\n        BgColor={Theme.Color.Snow}\n        TextColor={Theme.Color.Nightsky}\n      >\n        <LearnSection\n          Prefix=\"More from \"\n          Categories={AllCategories}\n          Filter={QuestionData.category.toLowerCase()}\n        />\n      </SubLevelPageContent>\n\n      {/* The Question / Category / Tag footer. */}\n      <SubLevelPageContent\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n      >\n        {/* ///////////// */}\n\n        <QuestionFooter />\n\n        {/* ///////////// */}\n      </SubLevelPageContent>\n    </SubLevelPage>\n  </Layout>\n);\n\nexport default QuestionTemplate;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Index.js:\n// This is the home page of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Templates\nimport QuestionTemplate from './layout';\n\n// Transformers\nimport { questionDataTransformer } from 'templates/Question/Transformer';\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Question Template\nconst QuestionPage = props => {\n  let QuestionCategory = questionDataTransformer(\n    props.data.allPrismicQuestion.edges[0].node\n  ).category;\n  let AllCategories = categoryDataTransformer(\n    props.data.allPrismicQuestionCategory.edges\n  );\n\n  return (\n    <>\n      {AllCategories.map((Category, index) => {\n        if (Category.node.Slug == QuestionCategory) {\n          return (\n            <QuestionTemplate\n              PageTheme={Category.node.PageTheme}\n              BgQuery={\n                questionDataTransformer(\n                  props.data.allPrismicQuestion.edges[0].node\n                ).coverImage\n              }\n              Location={props.location.href}\n              AllCategories={AllCategories}\n              CategorySlug={Category.node.Slug}\n              CategoryName={Category.node.Name}\n              QuestionData={questionDataTransformer(\n                props.data.allPrismicQuestion.edges[0].node\n              )}\n              key={index}\n            />\n          );\n        } else {\n          return null;\n        }\n      })}\n    </>\n  );\n};\n\nexport default QuestionPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\nexport const query = graphql`\n  query($Id: String!) {\n    allPrismicQuestionCategory {\n      edges {\n        node {\n          id\n          uid\n          data {\n            name {\n              text\n            }\n            icon\n            headline\n            color_background\n            color_primary\n            color_secondary\n            color_tertiary\n            tags {\n              tag_name\n              tag_slug\n              tag_icon\n            }\n          }\n        }\n      }\n    }\n\n    allPrismicQuestion(filter: { id: { eq: $Id } }) {\n      edges {\n        node {\n          id\n          uid\n          tags\n          data {\n            title {\n              text\n            }\n            short_answer\n            long_answer\n            date\n            author {\n              id\n              document {\n                id\n                ... on PrismicPerson {\n                  data {\n                    name {\n                      html\n                      text\n                    }\n                  }\n                }\n              }\n            }\n            category {\n              uid\n            }\n            cover_image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n        top: calc((${Root.Size} * 1.8) * -1);\n        width: calc(${Root.Size} * 1.5);\n        height: calc(${Root.Size} * 1.5);\n      }\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n\n        @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n          right: calc((${Root.Size} * 1.5) + (${Root.Size} * 0.25));\n        }\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n        bottom: calc((${Root.Size} * .3) * -1);\n      }\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size} / 3) calc(${Root.Size} / 4);\n      height: ${props =>\n        props.SectionSize\n          ? 'calc((' + Root.Size + '* 3) * ' + props.SectionSize + ')'\n          : 'calc((' + Root.Size + '* 3) * 3)'};\n    }\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Nightsky)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const useTransform = this.props.SliderSettings.useTransform\n      ? this.props.SliderSettings.useTransform\n      : true;\n    const infinite = this.props.SliderSettings.infinite\n      ? this.props.SliderSettings.infinite\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: infinite,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n      useTransform: useTransform,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Md + 'px',\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle className=\"slide-section\">\n    <SlideSectionStyle.Inner Gutter={Gutter} className=\"slide-section-inner\">\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            {Header ? <h2>{Header}</h2> : null}\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n    padding-right: calc(${Root.Grid.Gutter.Right} + ${Root.Size});\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: ${props =>\n    props.JustifyContent ? props.JustifyContent : 'flex-start'};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible !important; \n      overflow: visible;\n      \n      .wrapper {\n        overflow-y: hidden;\n      }\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden; \n      overflow-y: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden;\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      min-height: 150px;\n\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n  JustifyContent,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n    className=\"hero-inner\"\n  >\n    <HeroContentStyle\n      className=\"hero-content\"\n      JustifyContent={JustifyContent}\n      Flex={Flex}\n    >\n      {children}\n    </HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      {/* <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      /> */}\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n\n  .post-details {\n    opacity: 0.4;\n    display: block;\n    margin-bottom: calc(${Root.Size} / 4);\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-bottom: calc(${Root.Nav.Size} + ${Root.Size});\n  }\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n    .img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  /* -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000; */\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  /* column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    column-width: 100%;\n    column-count: 1;\n  } */\n\n\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    flex: 30%;\n    margin: calc(${Root.Size} / 5);\n    width: 30%;\n    display: flex;\n    color: ${Theme.Color.White};\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n\n    a, i {\n      color: ${Theme.Color.White};\n    }\n    \n    svg {\n      fill: ${Theme.Color.White};\n    }\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    .widget-content {\n      flex: auto;\n      margin: calc(${Root.Size} / 5) 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { node } from 'prop-types';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Categories Map\nexport const tagDataTransformer = tags => {\n  if (tags) {\n    let tagsMap = tags.map((tag, index) => {\n      return {\n        Name: tag.tag_name,\n        Icon: tag.tag_icon,\n        Slug: tag.tag_slug,\n      };\n    });\n\n    return tagsMap;\n  } else {\n    return null;\n  }\n};\n\n// Function to create our Categories Map\nexport const categoryDataTransformer = categories => {\n  if (categories) {\n    let categoriesMap = categories.map((category, index) => {\n      return {\n        node: {\n          id: category.node.id,\n          Name: category.node.data.name ? category.node.data.name.text : '',\n          Icon: category.node.data.icon,\n          Headline: category.node.data.headline,\n          Slug: category.node.uid,\n          Breadcrumb: {\n            Destination: '/learn/all/',\n            Label: 'All Questions',\n          },\n          PageTheme: {\n            Color: {\n              Background: category.node.data.color_background,\n              Primary: category.node.data.color_primary,\n              Secondary: category.node.data.color_secondary,\n              Tertiary: category.node.data.color_tertiary,\n            },\n          },\n          Tags: tagDataTransformer(category.node.data.tags),\n        },\n      };\n    });\n\n    return categoriesMap;\n  } else {\n    return 'null';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  JustifyContent,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'simple-hero tint' : 'simple-hero'}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      JustifyContent={JustifyContent}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: calc((${Theme.Base.Size.Sm}) * -1);\n      transform: translateY(-50%);\n      width: 2px;\n      height: 2px;\n      border-radius: 50%;\n      background-color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    svg {\n      transform: rotate(180deg) translateX(0%);\n      transform-origin: center center;\n      width: 1rem;\n      height: 1rem;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n      transition: all 0.25s ease;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    }\n\n    &:hover {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      text-decoration: none;\n      svg {\n        transform: rotate(180deg) translateX(50%);\n      }\n    }\n  }\n`;\n\nBreadCrumb.Label = styled(Link)`\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm} * 1.75);\n  position: relative;\n  text-transform: capitalize;\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle TextColor={TextColor}>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label to={crumb.Destination} key={index}>\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SpecialsListings> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const QuestionListingsStyles = styled.div`\n  appearance: none;\n`;\n\nQuestionListingsStyles.Header = styled.div`\n  padding-left: ${Root.Grid.Gutter.Left};\n  padding-right: ${Root.Grid.Gutter.Right};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Nightsky)};\n`;\n\nexport default QuestionListingsStyles;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Transformers\nimport { questionDataTransformer } from 'templates/Question/Transformer';\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Styles\nimport QuestionListingsStyles from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Slug === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory.length > 0) {\n      return matchedCategory[0].node;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          ## Prismic Sourcing\n\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n\n          allPrismicQuestion {\n            edges {\n              node {\n                id\n                uid\n                tags\n                data {\n                  title {\n                    text\n                  }\n                  short_answer\n                  long_answer\n                  date\n                  author {\n                    id\n                    document {\n                      id\n                      ... on PrismicPerson {\n                        data {\n                          name {\n                            html\n                            text\n                          }\n                        }\n                      }\n                    }\n                  }\n                  category {\n                    uid\n                  }\n                  cover_image {\n                    alt\n                    localFile {\n                      id\n                      childImageSharp {\n                        fluid(maxWidth: 1200) {\n                          ...GatsbyImageSharpFluid\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        const questionsMap = questionDataTransformer(\n          data.allPrismicQuestion.edges\n        );\n\n        // console.log('categoryMap');\n        // console.log(categoryMap);\n\n        // console.log('questionsMap');\n        // console.log(questionsMap);\n\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        return (\n          <>\n            {questionsMap.map((Question, index) => {\n              let QuestionCategory = Question.node.category\n                ? Question.node.category\n                : 'none';\n\n              // console.log('QuestionCategory');\n              // console.log(QuestionCategory);\n\n              // return <h1>Masonry</h1>;\n              // If the Question's Category is the same as the Filter supplied:\n              if (QuestionCategory == CategoryFilter) {\n                // If there isn't a TagFilter applied:\n                if (TagFilter == 'all') {\n                  // Use our helper function above to find the right Category's Data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    CategoryFilter\n                  );\n\n                  return (\n                    <DefaultWidget\n                      BgColor={filteredCategory.PageTheme.Color.Background}\n                      TextColor={filteredCategory.PageTheme.Color.Primary}\n                      Destination={\n                        '/learn' + QuestionSlugString + '/' + Question.node.slug\n                      }\n                      Subhead={filteredCategory.Name}\n                      Headline={Question.node.title}\n                      IconName={filteredCategory.Icon}\n                      IconColor={filteredCategory.PageTheme.Color.Primary}\n                      BgQuery={\n                        Question.node.coverImage\n                          ? Question.node.coverImage\n                          : false\n                      }\n                      BgImageAltText={\n                        QuestionCategory +\n                        ' & Cannabis | ' +\n                        Question.node.title\n                      }\n                      TintColor={Theme.Color.Black}\n                      TintOpacity={0.6}\n                      key={index}\n                    />\n                  );\n                } else {\n                  // If there is a TagFilter applied, check the Tags Array\n                  // to see if it includes our filter:\n                  if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                    // Use our helper function above to find the right Category's Data.\n                    let filteredCategory = categoryMatch(\n                      categoryMap,\n                      CategoryFilter\n                    );\n\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn' +\n                          QuestionSlugString +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    // If it doesn't match anything, return false. And cry.\n                    return null;\n                  }\n                }\n              } else {\n                // If we want to display all the Questions, let's make their\n                // slug their root category.\n                if (CategoryFilter == 'all') {\n                  // Use our helper function to match the Category data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    QuestionCategory\n                  );\n\n                  // console.log('all filteredCategory');\n                  // console.log(filteredCategory);\n                  // console.log('Question');\n                  // console.log(Question);\n\n                  if (filteredCategory) {\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn/' +\n                          filteredCategory.Slug +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    return (\n                      <DefaultWidget\n                        BgColor={Theme.Color.Black}\n                        TextColor={Theme.Color.Whitee}\n                        Destination={'/learn/' + Question.node.slug}\n                        Subhead=\"Cannabis Questions\"\n                        Headline={Question.node.title}\n                        IconName=\"question\"\n                        IconColor={Theme.Color.White}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={'Cannabis Q&A | ' + Question.node.title}\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  }\n                } else {\n                  // If nothing is supplied, don't return anything. Also, cry.\n                  return null;\n                }\n              }\n            })}\n          </>\n        );\n      }}\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  TextColor,\n  CategoryFilter,\n  TagFilter,\n  Header,\n}) => (\n  <QuestionListingsStyles>\n    {Header ? (\n      <QuestionListingsStyles.Header TextColor={TextColor}>\n        <h2>{Header}</h2>\n      </QuestionListingsStyles.Header>\n    ) : null}\n\n    <MasonrySection\n      Columns={3}\n      ColumnGap={0.25}\n      BgColor={BgColor ? BgColor : Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n    >\n      {/* If the CategoryFilter is supplied */}\n      {/* {console.log('CategoryFilter Passed:')}\n    {console.log(CategoryFilter)} */}\n\n      {CategoryFilter ? (\n        <QuestionCards\n          CategorySlug={CategorySlug}\n          TagSlug={TagSlug ? TagSlug : null}\n          CategoryFilter={CategoryFilter}\n          TagFilter={TagFilter ? TagFilter : 'all'}\n          AllCategories={AllCategories}\n        />\n      ) : (\n        // If it isn't, revert to 'all'\n        <QuestionCards\n          CategorySlug={CategorySlug}\n          TagSlug={TagSlug ? TagSlug : null}\n          CategoryFilter=\"all\"\n          TagFilter={TagFilter}\n          AllCategories={AllCategories}\n        />\n      )}\n    </MasonrySection>\n  </QuestionListingsStyles>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Columns Map\nexport const questionDataTransformer = question => {\n  // Check if it's empty first:\n  if (question) {\n    // If the question data is an array:\n    if (Array.isArray(question) == true) {\n      let questionMap = question.map((questionPost, index) => {\n        return {\n          node: {\n            id: questionPost.node.id ? questionPost.node.id : '',\n            slug: questionPost.node.uid ? questionPost.node.uid : '',\n            date: questionPost.node.data.date\n              ? questionPost.node.data.date\n              : '',\n            author: questionPost.node.data.author\n              ? questionPost.node.data.author.document[0].data.name.text\n              : 'Sierra Well',\n            coverImage: questionPost.node.data.cover_image.localFile\n              ? questionPost.node.data.cover_image.localFile.childImageSharp\n                  .fluid\n              : false,\n            title: questionPost.node.data.title.text\n              ? questionPost.node.data.title.text\n              : '',\n            category: questionPost.node.data.category\n              ? questionPost.node.data.category.uid\n              : '',\n            tags: questionPost.node.tags ? questionPost.node.tags : '',\n            shortAnswer: questionPost.node.data.short_answer\n              ? questionPost.node.data.short_answer\n              : '',\n            longAnswer: questionPost.node.data.long_answer\n              ? questionPost.node.data.long_answer\n              : '',\n          },\n        };\n        // return console.log(questionPost)\n      });\n\n      return questionMap;\n    }\n\n    // If it's not an array:\n    else {\n      let questionMap = {\n        id: question.id ? question.id : '',\n        slug: question.uid ? question.uid : '',\n        date: question.data.date ? question.data.date : '',\n        author: question.data.author\n          ? question.data.author.document[0].data.name.text\n          : 'Sierra Well',\n        coverImage: question.data.cover_image.localFile\n          ? question.data.cover_image.localFile.childImageSharp.fluid\n          : false,\n        title: question.data.title.text ? question.data.title.text : '',\n        category: question.data.category ? question.data.category.uid : '',\n        tags: question.tags ? question.tags : '',\n        shortAnswer: question.data.short_answer\n          ? question.data.short_answer\n          : '',\n        longAnswer: question.data.long_answer ? question.data.long_answer : '',\n      };\n\n      return questionMap;\n    }\n  }\n\n  // If the question data doesn't exist\n  else {\n    return 'No data supplied.';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: center;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Transformers\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        return (\n          <SlideSection\n            Widgets={categoryWidgets(categoryMap)}\n            SectionSize={6}\n            Header=\"Browse Categories\"\n            Gutter={[0, 1, 1, 1]}\n            Theme={{\n              TextColor: Theme.Color.Slate,\n              BgColor: 'none',\n            }}\n            SliderSettings={{\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              autoplay: false,\n              arrows: true,\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/' + BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={\n          this.props.Prefix\n            ? this.props.Prefix + this.props.Data.Name\n            : this.props.Data.Name\n        }\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ Categories, Filter, Prefix }) => {\n  if (Filter == 'all') {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a section. */}\n        {Categories.map((Category, index) => {\n          return (\n            <SlideSectionWithData\n              key={index}\n              BaseUrl=\"learn\"\n              Data={Category.node}\n            />\n          );\n        })}\n      </Block>\n    );\n  } else {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a the desired section. */}\n        {Categories.map((Category, index) => {\n          if (Category.node.Slug == Filter) {\n            return (\n              <SlideSectionWithData\n                key={index}\n                BaseUrl=\"learn\"\n                Data={Category.node}\n                Prefix={Prefix ? Prefix : null}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </Block>\n    );\n  }\n};\n\nexport default LearnSection;\n"],"sourceRoot":""}