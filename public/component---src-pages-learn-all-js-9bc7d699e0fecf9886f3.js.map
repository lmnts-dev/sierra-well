{"version":3,"sources":["webpack:///./src/pages/learn/all.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/templates/Learn/Transformer/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/templates/Question/Transformer/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/Section/LearnSection/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","components_core_Layout__WEBPACK_IMPORTED_MODULE_1__","templates_SubLevelPage__WEBPACK_IMPORTED_MODULE_2__","components_library_Hero_SimpleHero__WEBPACK_IMPORTED_MODULE_3__","components_library_Section_LearnSection__WEBPACK_IMPORTED_MODULE_4__","components_library_QuestionFooter__WEBPACK_IMPORTED_MODULE_5__","components_library_Breadcrumb__WEBPACK_IMPORTED_MODULE_6__","components_library_Btn___WEBPACK_IMPORTED_MODULE_7__","components_library_Block__WEBPACK_IMPORTED_MODULE_8__","templates_Learn_Transformer__WEBPACK_IMPORTED_MODULE_9__","constants_Theme__WEBPACK_IMPORTED_MODULE_10__","PageWrapper","_ref","children","Data","Category","CategoryTheme","a","createElement","BgColor","Theme","Color","Gunmetal","PrimaryColor","White","SecondaryColor","TertiaryColor","Nightsky","TextColor","maxWidth","Crumbs","Destination","Label","className","IconClass","IconPosition","Snow","HideCategories","LearnTemplateAll","_ref2","data","TransformedCategories","categoryDataTransformer","allPrismicQuestionCategory","edges","Filter","Categories","BlockStyle","styled","div","_templateObject","props","Flex","flex","AlignItems","Style","css","_templateObject2","JustifyContent","BgTint","Width","Base","Grid","SiteWidth","Padding","Root","Size","Block","BgMatch","BgQuery","BgAlt","react_default","styles_scss","ImgMatch","src","AltText","ImgQuery","SlideSectionStyle","Sm","Media","Md","Black","Inner","SectionInnerStyle","Gutter","Left","Right","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","Headline","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","useTransform","infinite","arrows","settings","dots","speed","autoplaySpeed","draggable","nextArrow","prevArrow","responsive","breakpoint","Fragment","Helmet","rel","type","href","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","Btn","IconclassName","SlideSection_SectionSlider","TextColr","map","Widget","index","Container","key","WidgetContent","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","WrapperLock","createGlobalStyle","WrapperRelease","WidgetSection","Primary","Slider","WidgetSection_styles_scss","HeroInner","HeroContent","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","Background","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","SimpleSectionStyle","FluidHeight","SimpleSection","SimpleSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","categories","category","node","id","name","text","icon","headline","Slug","uid","Breadcrumb","PageTheme","color_background","color_primary","Secondary","color_secondary","Tertiary","color_tertiary","Tags","tags","tag","tag_name","tag_icon","tag_slug","SimpleHeroStyle","Tint","TintBorder","SimpleHero","Hero","BreadCrumb","Link","Bread","crumb","QuestionListingsStyles","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","length","categoryMap","questionsMap","questionDataTransformer","allPrismicQuestion","Question","QuestionCategory","filteredCategory","slug","title","coverImage","BgImageAltText","includes","toLowerCase","Whitee","_3828252607","QuestionListings","QuestionListings_styles_scss","QuestionListings_QuestionCards","question","Array","isArray","questionPost","date","author","document","cover_image","localFile","childImageSharp","fluid","shortAnswer","short_answer","longAnswer","long_answer","HeroStripStyle","ViewWidthFontSize","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_1344697354","QuestionFooter","QuestionFooter_BrowseCategories","SlideSectionWithData","BaseUrl","Tag","react__WEBPACK_IMPORTED_MODULE_1___default","components_library_Section_SlideSection__WEBPACK_IMPORTED_MODULE_2__","Prefix","LearnSection","components_library_Block__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-learn-all-js-9bc7d699e0fecf9886f3.js","sourcesContent":["// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport LearnSection from 'components/library/Section/LearnSection';\nimport QuestionFooter from 'components/library/QuestionFooter';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport Btn from 'components/library/Btn/';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Transformers\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// PageWrapper component for page theming.\nconst PageWrapper = ({ children, Data, Category, CategoryTheme }) => {\n  return (\n    <Layout\n      BgColor={Theme.Color.Gunmetal}\n      PrimaryColor={Theme.Color.White}\n      SecondaryColor={Theme.Color.White}\n      TertiaryColor={Theme.Color.Nightsky}\n    >\n      <SubLevelPage\n        BgColor={Theme.Color.Gunmetal}\n        PrimaryColor={Theme.Color.Gunmetal}\n        SecondaryColor={Theme.Color.White}\n        TertiaryColor={Theme.Color.Nightsky}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero TextColor={Theme.Color.White}>\n          <Block maxWidth={0.5}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: '/learn',\n                  Label: 'Learn',\n                },\n              ]}\n              TextColor={Theme.Color.White}\n            />\n            <h1 className=\"h2\">You've got questions. We've got answers.</h1>\n            <Btn\n              IconClass=\"intercom\"\n              Label=\"Ask a question\"\n              BgColor={Theme.Color.Nightsky}\n              TextColor={Theme.Color.White}\n              Destination=\"/learn/all\"\n              IconPosition=\"left\"\n            />\n          </Block>\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Snow}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n\n        {/* The Question / Category / Tag footer. */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          <QuestionFooter HideCategories />\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n\n        {/* ///////////// */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LearnTemplateAll = ({ data }) => {\n  // Transform our Prismic data into our initial structure.\n  let TransformedCategories = categoryDataTransformer(\n    data.allPrismicQuestionCategory.edges\n  );\n\n  return (\n    <PageWrapper>\n      {/* Pass our categories GraphQL query to the LearnSection. */}\n      <LearnSection Filter=\"all\" Categories={TransformedCategories} />\n    </PageWrapper>\n  );\n};\n\nexport default LearnTemplateAll;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\nexport const query = graphql`\n  query {\n    allPrismicQuestionCategory(\n      sort: { fields: [data___name___text], order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          uid\n          data {\n            name {\n              text\n            }\n            icon\n            headline\n            color_background\n            color_primary\n            color_secondary\n            color_tertiary\n            tags {\n              tag_name\n              tag_slug\n              tag_icon\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n        top: calc((${Root.Size} * 1.8) * -1);\n        width: calc(${Root.Size} * 1.5);\n        height: calc(${Root.Size} * 1.5);\n      }\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n\n        @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n          right: calc((${Root.Size} * 1.5) + (${Root.Size} * 0.25));\n        }\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n        bottom: calc((${Root.Size} * .3) * -1);\n      }\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size} / 3) calc(${Root.Size} / 4);\n      height: ${props =>\n        props.SectionSize\n          ? 'calc((' + Root.Size + '* 3) * ' + props.SectionSize + ')'\n          : 'calc((' + Root.Size + '* 3) * 3)'};\n    }\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Nightsky)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const useTransform = this.props.SliderSettings.useTransform\n      ? this.props.SliderSettings.useTransform\n      : true;\n    const infinite = this.props.SliderSettings.infinite\n      ? this.props.SliderSettings.infinite\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: infinite,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n      useTransform: useTransform,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Md + 'px',\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle className=\"slide-section\">\n    <SlideSectionStyle.Inner Gutter={Gutter} className=\"slide-section-inner\">\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            {Header ? <h2>{Header}</h2> : null}\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n    padding-right: calc(${Root.Grid.Gutter.Right} + ${Root.Size});\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: ${props =>\n    props.JustifyContent ? props.JustifyContent : 'flex-start'};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible !important; \n      overflow: visible;\n      \n      .wrapper {\n        overflow-y: hidden;\n      }\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden; \n      overflow-y: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden;\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      min-height: 150px;\n\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n  JustifyContent,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n    className=\"hero-inner\"\n  >\n    <HeroContentStyle\n      className=\"hero-content\"\n      JustifyContent={JustifyContent}\n      Flex={Flex}\n    >\n      {children}\n    </HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      {/* <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      /> */}\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n\n  .post-details {\n    opacity: 0.4;\n    display: block;\n    margin-bottom: calc(${Root.Size} / 4);\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-bottom: calc(${Root.Nav.Size} + ${Root.Size});\n  }\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n    .img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  /* -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000; */\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  /* column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    column-width: 100%;\n    column-count: 1;\n  } */\n\n\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    flex: 30%;\n    margin: calc(${Root.Size} / 5);\n    width: 30%;\n    display: flex;\n    color: ${Theme.Color.White};\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n\n    a, i {\n      color: ${Theme.Color.White};\n    }\n    \n    svg {\n      fill: ${Theme.Color.White};\n    }\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    .widget-content {\n      flex: auto;\n      margin: calc(${Root.Size} / 5) 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { node } from 'prop-types';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Categories Map\nexport const tagDataTransformer = tags => {\n  if (tags) {\n    let tagsMap = tags.map((tag, index) => {\n      return {\n        Name: tag.tag_name,\n        Icon: tag.tag_icon,\n        Slug: tag.tag_slug,\n      };\n    });\n\n    return tagsMap;\n  } else {\n    return null;\n  }\n};\n\n// Function to create our Categories Map\nexport const categoryDataTransformer = categories => {\n  if (categories) {\n    let categoriesMap = categories.map((category, index) => {\n      return {\n        node: {\n          id: category.node.id,\n          Name: category.node.data.name ? category.node.data.name.text : '',\n          Icon: category.node.data.icon,\n          Headline: category.node.data.headline,\n          Slug: category.node.uid,\n          Breadcrumb: {\n            Destination: '/learn/all/',\n            Label: 'All Questions',\n          },\n          PageTheme: {\n            Color: {\n              Background: category.node.data.color_background,\n              Primary: category.node.data.color_primary,\n              Secondary: category.node.data.color_secondary,\n              Tertiary: category.node.data.color_tertiary,\n            },\n          },\n          Tags: tagDataTransformer(category.node.data.tags),\n        },\n      };\n    });\n\n    return categoriesMap;\n  } else {\n    return 'null';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  JustifyContent,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'simple-hero tint' : 'simple-hero'}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      JustifyContent={JustifyContent}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: calc((${Theme.Base.Size.Sm}) * -1);\n      transform: translateY(-50%);\n      width: 2px;\n      height: 2px;\n      border-radius: 50%;\n      background-color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    svg {\n      transform: rotate(180deg) translateX(0%);\n      transform-origin: center center;\n      width: 1rem;\n      height: 1rem;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n      transition: all 0.25s ease;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    }\n\n    &:hover {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      text-decoration: none;\n      svg {\n        transform: rotate(180deg) translateX(50%);\n      }\n    }\n  }\n`;\n\nBreadCrumb.Label = styled(Link)`\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm} * 1.75);\n  position: relative;\n  text-transform: capitalize;\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle TextColor={TextColor}>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label to={crumb.Destination} key={index}>\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SpecialsListings> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const QuestionListingsStyles = styled.div`\n  appearance: none;\n`;\n\nQuestionListingsStyles.Header = styled.div`\n  padding-left: ${Root.Grid.Gutter.Left};\n  padding-right: ${Root.Grid.Gutter.Right};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Nightsky)};\n`;\n\nexport default QuestionListingsStyles;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Transformers\nimport { questionDataTransformer } from 'templates/Question/Transformer';\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Styles\nimport QuestionListingsStyles from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Slug === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory.length > 0) {\n      return matchedCategory[0].node;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          ## Prismic Sourcing\n\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n\n          allPrismicQuestion {\n            edges {\n              node {\n                id\n                uid\n                tags\n                data {\n                  title {\n                    text\n                  }\n                  short_answer\n                  long_answer\n                  date\n                  author {\n                    id\n                    document {\n                      id\n                      ... on PrismicPerson {\n                        data {\n                          name {\n                            html\n                            text\n                          }\n                        }\n                      }\n                    }\n                  }\n                  category {\n                    uid\n                  }\n                  cover_image {\n                    alt\n                    localFile {\n                      id\n                      childImageSharp {\n                        fluid(maxWidth: 1200) {\n                          ...GatsbyImageSharpFluid\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        const questionsMap = questionDataTransformer(\n          data.allPrismicQuestion.edges\n        );\n\n        // console.log('categoryMap');\n        // console.log(categoryMap);\n\n        // console.log('questionsMap');\n        // console.log(questionsMap);\n\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        return (\n          <>\n            {questionsMap.map((Question, index) => {\n              let QuestionCategory = Question.node.category\n                ? Question.node.category\n                : 'none';\n\n              // console.log('QuestionCategory');\n              // console.log(QuestionCategory);\n\n              // return <h1>Masonry</h1>;\n              // If the Question's Category is the same as the Filter supplied:\n              if (QuestionCategory == CategoryFilter) {\n                // If there isn't a TagFilter applied:\n                if (TagFilter == 'all') {\n                  // Use our helper function above to find the right Category's Data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    CategoryFilter\n                  );\n\n                  return (\n                    <DefaultWidget\n                      BgColor={filteredCategory.PageTheme.Color.Background}\n                      TextColor={filteredCategory.PageTheme.Color.Primary}\n                      Destination={\n                        '/learn' + QuestionSlugString + '/' + Question.node.slug\n                      }\n                      Subhead={filteredCategory.Name}\n                      Headline={Question.node.title}\n                      IconName={filteredCategory.Icon}\n                      IconColor={filteredCategory.PageTheme.Color.Primary}\n                      BgQuery={\n                        Question.node.coverImage\n                          ? Question.node.coverImage\n                          : false\n                      }\n                      BgImageAltText={\n                        QuestionCategory +\n                        ' & Cannabis | ' +\n                        Question.node.title\n                      }\n                      TintColor={Theme.Color.Black}\n                      TintOpacity={0.6}\n                      key={index}\n                    />\n                  );\n                } else {\n                  // If there is a TagFilter applied, check the Tags Array\n                  // to see if it includes our filter:\n                  if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                    // Use our helper function above to find the right Category's Data.\n                    let filteredCategory = categoryMatch(\n                      categoryMap,\n                      CategoryFilter\n                    );\n\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn' +\n                          QuestionSlugString +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    // If it doesn't match anything, return false. And cry.\n                    return null;\n                  }\n                }\n              } else {\n                // If we want to display all the Questions, let's make their\n                // slug their root category.\n                if (CategoryFilter == 'all') {\n                  // Use our helper function to match the Category data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    QuestionCategory\n                  );\n\n                  // console.log('all filteredCategory');\n                  // console.log(filteredCategory);\n                  // console.log('Question');\n                  // console.log(Question);\n\n                  if (filteredCategory) {\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn/' +\n                          filteredCategory.Slug +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    return (\n                      <DefaultWidget\n                        BgColor={Theme.Color.Black}\n                        TextColor={Theme.Color.Whitee}\n                        Destination={'/learn/' + Question.node.slug}\n                        Subhead=\"Cannabis Questions\"\n                        Headline={Question.node.title}\n                        IconName=\"question\"\n                        IconColor={Theme.Color.White}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={'Cannabis Q&A | ' + Question.node.title}\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  }\n                } else {\n                  // If nothing is supplied, don't return anything. Also, cry.\n                  return null;\n                }\n              }\n            })}\n          </>\n        );\n      }}\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  TextColor,\n  CategoryFilter,\n  TagFilter,\n  Header,\n}) => (\n  <QuestionListingsStyles>\n    {Header ? (\n      <QuestionListingsStyles.Header TextColor={TextColor}>\n        <h2>{Header}</h2>\n      </QuestionListingsStyles.Header>\n    ) : null}\n\n    <MasonrySection\n      Columns={3}\n      ColumnGap={0.25}\n      BgColor={BgColor ? BgColor : Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n    >\n      {/* If the CategoryFilter is supplied */}\n      {/* {console.log('CategoryFilter Passed:')}\n    {console.log(CategoryFilter)} */}\n\n      {CategoryFilter ? (\n        <QuestionCards\n          CategorySlug={CategorySlug}\n          TagSlug={TagSlug ? TagSlug : null}\n          CategoryFilter={CategoryFilter}\n          TagFilter={TagFilter ? TagFilter : 'all'}\n          AllCategories={AllCategories}\n        />\n      ) : (\n        // If it isn't, revert to 'all'\n        <QuestionCards\n          CategorySlug={CategorySlug}\n          TagSlug={TagSlug ? TagSlug : null}\n          CategoryFilter=\"all\"\n          TagFilter={TagFilter}\n          AllCategories={AllCategories}\n        />\n      )}\n    </MasonrySection>\n  </QuestionListingsStyles>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Columns Map\nexport const questionDataTransformer = question => {\n  // Check if it's empty first:\n  if (question) {\n    // If the question data is an array:\n    if (Array.isArray(question) == true) {\n      let questionMap = question.map((questionPost, index) => {\n        return {\n          node: {\n            id: questionPost.node.id ? questionPost.node.id : '',\n            slug: questionPost.node.uid ? questionPost.node.uid : '',\n            date: questionPost.node.data.date\n              ? questionPost.node.data.date\n              : '',\n            author: questionPost.node.data.author\n              ? questionPost.node.data.author.document[0].data.name.text\n              : 'Sierra Well',\n            coverImage: questionPost.node.data.cover_image.localFile\n              ? questionPost.node.data.cover_image.localFile.childImageSharp\n                  .fluid\n              : false,\n            title: questionPost.node.data.title.text\n              ? questionPost.node.data.title.text\n              : '',\n            category: questionPost.node.data.category\n              ? questionPost.node.data.category.uid\n              : '',\n            tags: questionPost.node.tags ? questionPost.node.tags : '',\n            shortAnswer: questionPost.node.data.short_answer\n              ? questionPost.node.data.short_answer\n              : '',\n            longAnswer: questionPost.node.data.long_answer\n              ? questionPost.node.data.long_answer\n              : '',\n          },\n        };\n        // return console.log(questionPost)\n      });\n\n      return questionMap;\n    }\n\n    // If it's not an array:\n    else {\n      let questionMap = {\n        id: question.id ? question.id : '',\n        slug: question.uid ? question.uid : '',\n        date: question.data.date ? question.data.date : '',\n        author: question.data.author\n          ? question.data.author.document[0].data.name.text\n          : 'Sierra Well',\n        coverImage: question.data.cover_image.localFile\n          ? question.data.cover_image.localFile.childImageSharp.fluid\n          : false,\n        title: question.data.title.text ? question.data.title.text : '',\n        category: question.data.category ? question.data.category.uid : '',\n        tags: question.tags ? question.tags : '',\n        shortAnswer: question.data.short_answer\n          ? question.data.short_answer\n          : '',\n        longAnswer: question.data.long_answer ? question.data.long_answer : '',\n      };\n\n      return questionMap;\n    }\n  }\n\n  // If the question data doesn't exist\n  else {\n    return 'No data supplied.';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Transformers\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        return (\n          <SlideSection\n            Widgets={categoryWidgets(categoryMap)}\n            SectionSize={6}\n            Header=\"Browse Categories\"\n            Gutter={[0, 1, 1, 1]}\n            Theme={{\n              TextColor: Theme.Color.Slate,\n              BgColor: 'none',\n            }}\n            SliderSettings={{\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              autoplay: false,\n              arrows: true,\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/' + BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={\n          this.props.Prefix\n            ? this.props.Prefix + this.props.Data.Name\n            : this.props.Data.Name\n        }\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ Categories, Filter, Prefix }) => {\n  if (Filter == 'all') {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a section. */}\n        {Categories.map((Category, index) => {\n          return (\n            <SlideSectionWithData\n              key={index}\n              BaseUrl=\"learn\"\n              Data={Category.node}\n            />\n          );\n        })}\n      </Block>\n    );\n  } else {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a the desired section. */}\n        {Categories.map((Category, index) => {\n          if (Category.node.Slug == Filter) {\n            return (\n              <SlideSectionWithData\n                key={index}\n                BaseUrl=\"learn\"\n                Data={Category.node}\n                Prefix={Prefix ? Prefix : null}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </Block>\n    );\n  }\n};\n\nexport default LearnSection;\n"],"sourceRoot":""}