{"version":3,"sources":["webpack:///./src/components/library/Section/StickyScrollSection/styles.scss.js","webpack:///./src/components/library/Section/StickyScrollSection/index.js","webpack:///./src/templates/Location/Landing/layout.js","webpack:///./src/templates/Location/Landing/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/helpers/hexToRGB.js","webpack:///./src/components/library/SuggestionList/styles.scss.js","webpack:///./src/components/library/SuggestionList/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/PageTabs/styles.scss.js","webpack:///./src/components/library/PageTabs/index.js","webpack:///./src/components/library/AwardBadge/styles.scss.js","webpack:///./src/components/library/AwardBadge/index.js","webpack:///./src/components/library/SimpleList/styles.scss.js","webpack:///./src/components/library/SimpleList/index.js","webpack:///./src/components/library/AwardHours/styles.scss.js","webpack:///./src/components/library/AwardHours/index.js","webpack:///./src/templates/Location/Components/LocationPageWrapper/index.js"],"names":["StickyScrollSectionStyle","styled","div","_templateObject","props","BgColor","Theme","Color","Primary","TextColor","White","Inner","SectionInnerStyle","_templateObject2","Gutter","Root","Size","Grid","Right","Left","FluidHeight","BgTint","Content","SectionContentStyle","_templateObject3","Nav","Slate","Base","Sm","ReleaseOverflow","createGlobalStyle","StickyScrollSection_templateObject","StickyScrollSection","_ref","Style","Gallery","children","react_default","a","createElement","StickyScrollSection_styles_scss","className","Block","Padding","class","Subheadline","Headline","Body","map","Img","index","ImgMatch","src","Src","AltText","Alt","TemplateLayout","LocationData","Location","SummaryHeadlineString","name","SummaryHeadline","about","summary","headline","LocationPageWrapper","SimpleSection","Snow","BgQuery","BgAlt","Section_StickyScrollSection","Nightsky","body","gallery","SplitSection","Flex","Width","Btn","Label","Destination","QuestionFooter","LocationLandingTemplate","_ref2","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","query","LocationLandingPage","layout","data","allLocationsJson","edges","node","location","SlideSectionStyle","Black","SectionSize","SectionHeader","_templateObject4","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Fragment","Helmet","rel","type","href","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","key","WidgetContent","BlockStyle","flex","AlignItems","css","JustifyContent","maxWidth","SiteWidth","styles_scss","WrapperLock","Media","Md","WrapperRelease","SimpleSectionStyle","SimpleSection_styles_scss","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","styles_scss_templateObject2","Sidebar","PrimaryColor","SecondaryColor","TertiaryColor","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","Background","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","WidgetSection","Slider","WidgetSection_styles_scss","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","allQuestionCategoriesJson","PageTheme","slug","title","BgImageFile","coverImage","BgImageAltText","tags","includes","toLowerCase","Slug","_234893462","QuestionListings","QuestionListings_QuestionCards","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","SimpleHeroStyle","Tint","SimpleHero","Hero","BreadCrumb","Link","Bread","Crumbs","crumb","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","_4273665236","HideCategories","IconClass","IconPosition","QuestionFooter_BrowseCategories","SocialStripStyle","Margin","span","SocialStrip","target","hexToRGB","hex","alpha","r","parseInt","slice","g","b","SuggestionListStyle","GradientColor","Button","SuggestionList","List","BaseUrl","Affix","item","SplitSectionStyle","Site","SplitSection_styles_scss","PageTabsStyle","PageTabs","DestinationPath","LocationPath","pathname","LocationPathWithSlash","matchPath","destination","currentLocation","AddClass","console","log","AwardBadgeStyle","AwardHours","Text","SimpleListStyle","ul","Item","li","SimpleList","SimpleList_styles_scss","Data","AwardHoursStyle","AwardHours_styles_scss_templateObject","Hours","AwardHours_styles_scss","AwardBadge","Logo","library_SimpleList","LocationTheme","Layout","Secondary","Tertiary","Breadcrumb","geography","state","IconFas","contactDetails","address","meta","maps","External","library_AwardHours","nearby"],"mappings":"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","file":"component---src-templates-location-landing-index-js-b80df5f0626fa70022ea.js","sourcesContent":["// StickyScrollSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst StickyScrollSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nStickyScrollSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nStickyScrollSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n\n  .block {\n    .gallery-img {\n      padding: 0 0 calc(${Root.Size} / 2) 0;\n    }\n\n    &.sticky-block {\n      .block-content {\n        position: sticky;\n        top: calc(${Root.Nav.Size} + ${Root.Size});\n        padding-bottom: ${Root.Size};\n      }\n    }\n  }\n\n  .txt-caption {\n    font-size: 1.4rem;\n    font-weight: bold;\n    color: ${Theme.Color.Slate};\n    display: block;\n    margin-bottom: calc(${Theme.Base.Size.Sm});\n  }\n`;\n\nexport default StickyScrollSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// StickyScrollSection Component:\n// Desired outcome: https://www.dropbox.com/s/brll80qg306ywmk/Screenshot%202019-05-06%2015.01.12.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport StickyScrollSectionStyle from './styles.scss';\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Enable Overflows\nexport const ReleaseOverflow = createGlobalStyle`\n  html, body {\n    overflow: visible;\n  }\n\n  .wrapper {\n    overflow: visible;\n  }\n`;\n\n// Render Element\nconst StickyScrollSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  Content,\n  Gallery,\n  Gutter,\n  children,\n}) => (\n  <StickyScrollSectionStyle\n    Style={Style}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    <ReleaseOverflow />\n    <StickyScrollSectionStyle.Inner Gutter={Gutter}>\n      <StickyScrollSectionStyle.Content className=\"sticky-section\">\n        <Block Padding={[0, 1, 0, 1]} className=\"sticky-block\">\n          <span class=\"txt-caption\">{Content.Subheadline}</span>\n          <h2>{Content.Headline}</h2>\n          <p class=\"p-md\">{Content.Body}</p>\n        </Block>\n        <Block Padding={[0, 1, 0, 1]}>\n          {Gallery\n            ? Gallery.map((Img, index) => {\n                return (\n                  <div className=\"gallery-img\">\n                    <ImgMatch src={Img.Src} AltText={Img.Alt} />\n                  </div>\n                );\n              })\n            : null}\n        </Block>\n      </StickyScrollSectionStyle.Content>\n    </StickyScrollSectionStyle.Inner>\n  </StickyScrollSectionStyle>\n);\n\nexport default StickyScrollSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SplitSection from 'components/library/Section/SplitSection';\nimport StickyScrollSection from 'components/library/Section/StickyScrollSection';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Block from 'components/library/Block';\nimport Btn from 'components/library/Btn';\n\n\n// Template Specific Components\nimport LocationPageWrapper from '../Components/LocationPageWrapper';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({ LocationData, Location, Headline }) => {\n  // Build our automatic summary headline.\n  let SummaryHeadlineString =\n    LocationData.name +\n    \"'s leading cannabis dispensary — where humans come first.\";\n\n  // Check if a headline exists. If it does, display it. If it doesn't, use SummaryHeadlineString.\n  let SummaryHeadline =\n    LocationData.about.summary.headline != ''\n      ? LocationData.about.summary.headline\n      : SummaryHeadlineString;\n\n  return (\n    <LocationPageWrapper\n      Headline={Headline}\n      LocationData={LocationData}\n      Location={Location}\n    >\n      {/* ///////////// */}\n\n      <SimpleSection\n        BgColor={Theme.Color.Snow}\n        BgQuery=\"placeholder_bg_4.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        FluidHeight={true}\n        Gutter={[0, 0, 0, 0]}\n      />\n\n      {/* ///////////// */}\n      \n      {/* ///////////// */}\n\n      <StickyScrollSection\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n        Content={{\n          Subheadline: 'Sierra Well ' + LocationData.name,\n          Headline: SummaryHeadline,\n          Body: LocationData.about.summary.body,\n        }}\n        Gallery={LocationData.about.summary.gallery}\n      />\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n\n      <SplitSection Flex=\"row-reverse\">\n          <Block\n            Padding={[1, 1, 1, 1]}\n            Width={0.5}\n            BgColor={Theme.Color.White}\n            TextColor={Theme.Color.Nightsky}\n          >\n            <h2>Humans come first. Always.</h2>\n            <Btn\n              Label=\"Our Values\"\n              Destination=\"/company\"\n              BgColor={Theme.Color.Primary}\n              TextColor={Theme.Color.White}\n            />\n          </Block>\n\n          <Block\n            Style=\"centered\"\n            BgColor={Theme.Color.White}\n            BgQuery=\"placeholder_bg_4.jpg\"\n            BgAlt=\"Our Awesome Alt Tag\"\n            Width={0.5}\n          />\n        </SplitSection>\n\n        {/* ///////////// */}\n\n        <QuestionFooter />\n\n        {/* ///////////// */}\n\n    </LocationPageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LocationLandingTemplate = ({ LocationData, Location }) => {\n  return <TemplateLayout LocationData={LocationData} Location={Location} />;\n};\n\nexport default LocationLandingTemplate;\n","// templates/Location/Landing/index.js:\n// This is the Location Landing page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LocationLandingTemplate from './layout';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationLandingPage = props => {\n  return (\n    <LocationLandingTemplate\n      LocationData={props.data.allLocationsJson.edges[0].node}\n      Location={props.location}\n      Headline={props.data.allLocationsJson.edges[0].node.about.headline}\n    />\n  );\n};\n\nexport default LocationLandingPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n//\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const query = graphql`\n  query($Slug: String!) {\n    allLocationsJson(filter: { slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          slug\n          name\n          geography {\n            city\n            state\n            country\n          }\n          status {\n            delivery\n            store\n          }\n          meta {\n            reserveSpot\n            menu\n            maps\n          }\n          contactDetails {\n            phone\n            location {\n              address\n              state\n            }\n            hours {\n              days\n              startTime\n              endTime\n            }\n          }\n          nearby {\n            name\n            slug\n          }\n          about {\n            headline\n            PageTheme {\n              Color {\n                Background\n                Primary\n                Secondary\n                Tertiary\n              }\n            }\n            summary {\n              headline\n              body\n              gallery {\n                Src\n                Alt\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle Flex={Flex}>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgQuery,\n  BgAlt,\n  Flex,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgQuery} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Convert #HEXCODES to RGBA\n// hexToRGB('#FF0000', 0.5);\n\nconst hexToRGB = (hex, alpha) => {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  } else {\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n  }\n};\n\nexport default hexToRGB;\n","// <SuggestionListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SuggestionListStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size} / 4);\n      font-size: 1.2rem;\n\n      &:first-child {\n        opacity: .3;\n      }\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.2rem;\n          font-weight: normal;\n          padding: 0 calc(${Root.Size} / 4);\n        }\n      }\n    }\n  }\n`;\n\nexport default SuggestionListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SuggestionList Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport SuggestionListStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst SuggestionList = ({\n  List,\n  Label,\n  BaseUrl,\n  TextColor,\n  GradientColor,\n  Padding,\n  Affix,\n}) => (\n  <SuggestionListStyle\n    className=\"suggestion-list\"\n    GradientColor={GradientColor}\n    Padding={Padding}\n  >\n    <ul>\n      {Label ? <li>{Label}</li> : null}\n      {List.map((item, index) => (\n        <li key={index}>\n          <Btn\n            BgColor=\"none\"\n            Label={item.name}\n            Destination={\n              Affix ? BaseUrl + item.slug + Affix : BaseUrl + item.slug\n            }\n            TextColor={TextColor}\n          />\n        </li>\n      ))}\n    </ul>\n  </SuggestionListStyle>\n);\n\nexport default SuggestionList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: space-between;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <PageTabsStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const PageTabsStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size});\n      font-size: 1.5rem;\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.8rem;\n          font-weight: normal;\n          padding: 0;\n          box-shadow: none;\n          opacity: .6;\n\n          &:hover {\n            box-shadow: none;\n            opacity: 1;\n          }\n        }\n\n        &.active {\n          .btn-inner {\n            font-weight: bold;\n            opacity: 1;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTabsStyle;\n//////////////////////////////////////////////////////////////////////\n","// PageTabs Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport PageTabsStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst PageTabs = ({\n  List,\n  Label,\n  Location,\n  BaseUrl,\n  TextColor,\n  Padding,\n  Affix,\n}) => {\n  return (\n    <PageTabsStyle className=\"page-tabs\" Padding={Padding}>\n      <ul>\n        {List.map((item, index) => {\n          // Creating slugs.\n          const DestinationPath = Affix\n            ? BaseUrl + item.slug + Affix\n            : BaseUrl + item.slug;\n          const LocationPath = Location.pathname;\n          const LocationPathWithSlash = Location.pathname + '/';\n\n          // Helper function to match our locations.\n          function matchPath(destination, currentLocation) {\n\n            // If location & destination match:\n            if (destination == currentLocation) {\n              let className = 'active';\n              return className;\n            } else {\n\n              // Check and see if our destination matches without the\n              // last `/` of the url. I.e. `locations/reno vs locations/reno/`\n              if (destination == currentLocation.slice(0, -1)) {\n                let className = 'active';\n                return className;\n              } else {\n\n                // Then inactive:\n                let className = 'inactive';\n                return 'inactive';\n              }\n            }\n          }\n\n          // Return PageTabs.\n          return (\n            <li key={index}>\n              <Btn\n                AddClass={matchPath(DestinationPath, LocationPathWithSlash)}\n                BgColor=\"none\"\n                Label={item.name}\n                Destination={DestinationPath}\n                TextColor={TextColor}\n              />\n              {console.log('DestinationPath: ' + DestinationPath)}\n              {console.log('LocationPath: ' + LocationPath)}\n              {console.log('LocationPathWithSlash: ' + LocationPathWithSlash)}\n              {console.log(\n                'ClassName: ' +\n                  matchPath(DestinationPath, LocationPathWithSlash)\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </PageTabsStyle>\n  );\n};\n\nexport default PageTabs;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AwardBadgeStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardBadgeStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: calc(${Root.Size} * 3);\n  height: calc(${Root.Size} * 3);\n  background: ${Theme.Color.Primary};\n  color: ${Theme.Color.White};\n  border-radius: 50%;\n  box-shadow: 0 0px 8px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  text-align: center;\n  padding: ${Theme.Base.Size.Sm};\n\n  .img {\n    width: 50%;\n  }\n\n  span {\n    margin-top: calc(${Theme.Base.Size.Sm} * .75);\n    padding-top: calc(${Theme.Base.Size.Sm} * .75);\n    text-align: center;\n    width: 100%;\n    position: relative;\n    font-weight: bold;\n    font-size: .9rem;\n    line-height: 1.3;\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: 50%;\n      top: 0;\n      transform: translateX(-50%);\n      height: 1px;\n      width: ${Theme.Base.Size.Md};\n      background: ${Theme.Color.White};\n    }\n  }\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    left: 3%;\n    right: 3%;\n    top: 3%;\n    bottom: 3%;\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 50%;\n  }\n`;\n\nexport default AwardBadgeStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport AwardBadgeStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Text, TextColor, BgColor }) => (\n  <AwardBadgeStyle TextColor={TextColor} BgColor={BgColor}>\n    <ImgMatch src=\"logos/leafly.png\" AltText=\"Leafly\" />\n    <span>{Text}</span>\n  </AwardBadgeStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SimpleListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SimpleListStyle = styled.div`\n  display: flex;\n`;\n\nSimpleListStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSimpleListStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: .6;\n      font-size: 1.2rem;\n      padding-bottom: calc(${Theme.Base.Size.Sm} / 2);\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default SimpleListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SimpleListStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleList = ({ List, TextColor }) => (\n  <SimpleListStyle className=\"simple-list\" TextColor={TextColor}>\n    <SimpleListStyle.List TextColor={TextColor}>\n      {List.map((item, index) => {\n        return (\n          <SimpleListStyle.Item key={index}>\n            <span>{item.Label}</span>\n            <span>{item.Data}</span>\n          </SimpleListStyle.Item>\n        );\n      })}\n    </SimpleListStyle.List>\n  </SimpleListStyle>\n);\n\nexport default SimpleList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AwardHoursStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardHoursStyle = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: stretch;\n  flex: 1;\n  \n  .simple-list {\n    padding-left: calc(${Root.Size} / 2);\n    margin-left: calc(${Root.Size} / 2);\n    border-left: 1px solid ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    display: flex;\n    align-items: center;\n    ul {\n      justify-content: center;\n    }\n  }\n`;\n\nAwardHoursStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nAwardHoursStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: .6;\n      font-size: 1.2rem;\n      padding-bottom: calc(${Theme.Base.Size.Sm} / 2);\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default AwardHoursStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport AwardBadge from 'components/library/AwardBadge';\nimport SimpleList from 'components/library/SimpleList';\n\n// Styles\nimport AwardHoursStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Hours, TextColor }) => (\n  <AwardHoursStyle TextColor={TextColor}>\n    <AwardBadge\n      Logo=\"leafly\"\n      Text=\"2018 Voted Best Boutique Dispensary\"\n      BgColor={Theme.Color.Primary}\n      TextColor={Theme.Color.White}\n    />\n    <SimpleList\n      TextColor={TextColor}\n      List={Hours}\n    />\n  </AwardHoursStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport AwardHours from 'components/library/AwardHours';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\nimport PageTabs from 'components/library/PageTabs';\nimport SimpleList from 'components/library/SimpleList';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// LocationPageWrapper component for page theming.\nconst LocationPageWrapper = ({\n  children,\n  Headline,\n  LocationData,\n  Location,\n}) => {\n  const LocationTheme = LocationData.about.PageTheme;\n\n  return (\n    <Layout\n      BgColor={LocationTheme.Color.Background}\n      PrimaryColor={LocationTheme.Color.Primary}\n      SecondaryColor={LocationTheme.Color.Secondary}\n      TertiaryColor={LocationTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={LocationTheme.Color.Background}\n        PrimaryColor={LocationTheme.Color.Primary}\n        SecondaryColor={LocationTheme.Color.Secondary}\n        TertiaryColor={LocationTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[2, 0, 1.45, 0]}\n          Flex=\"row\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <Block maxWidth={0.5}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: 'locations/',\n                  Label: 'Locations',\n                },\n                {\n                  Destination: 'locations/',\n                  Label: LocationData.geography.state,\n                },\n                {\n                  Destination:\n                    'locations/' +\n                    LocationData.geography.state.toLowerCase() +\n                    '/' +\n                    LocationData.slug,\n                  Label: LocationData.name,\n                },\n              ]}\n              TextColor={LocationTheme.Color.Primary}\n            />\n            <h1 className=\"h2\">{LocationData.about.headline}</h1>\n            <Btn\n              IconClass=\"plus\"\n              Label=\"View Menu\"\n              BgColor={LocationTheme.Color.Primary}\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={\n                '/menu/' +\n                LocationData.geography.state.toLowerCase() +\n                '/' +\n                LocationData.slug\n              }\n              IconPosition=\"left\"\n              IconFas\n            />\n            <Btn\n              AddClass=\"btn-secondary\"\n              IconClass=\"map-marker-alt\"\n              Label={LocationData.contactDetails.location.address}\n              BgColor=\"none\"\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={LocationData.meta.maps}\n              IconPosition=\"left\"\n              External\n              IconFas\n            />\n            {/* <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n          </Block>\n          <Block Flex=\"row\" maxWidth={0.5}>\n            <AwardHours\n              TextColor={LocationTheme.Color.Primary}\n              Hours={[\n                { Label: 'Mon - Sat', Data: '9am - 9pm' },\n                { Label: 'Sunday', Data: '10am - 6pm' },\n              ]}\n            />\n          </Block>\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <PageTabs\n            Location={Location}\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={[\n              { name: 'About', slug: '' },\n              { name: 'Specials', slug: 'specials' },\n              { name: 'Menu', slug: 'menu' },\n            ]}\n            TextColor={LocationTheme.Color.Primary}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n          Tint={0.05}\n        >\n          <SuggestionList\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={LocationData.nearby}\n            Affix=\"/menu\"\n            Label=\"Nearby\"\n            TextColor={LocationTheme.Color.Primary}\n            GradientColor={LocationTheme.Color.Background}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        {/* Begin page content. */}\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\nexport default LocationPageWrapper;\n"],"sourceRoot":""}