{"version":3,"sources":["webpack:///./src/templates/Learn/Tag/layout.js","webpack:///./src/templates/Learn/Tag/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/templates/Learn/Transformer/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/templates/Question/Transformer/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js"],"names":["SlideSectionWithData","props","_React$Component","call","this","render","BaseUrl","BgColor","Data","PageTheme","Color","Background","TextColor","Secondary","Tags","CategorySlug","Slug","Widgets","map","Tag","index","Flex","WidgetContent","Destination","Style","Meta","Generic","BgImage","Subhead","Headline","Name","IconColor","IconName","Icon","TintColor","TintOpacity","IconSize","Theme","Nightsky","White","react_default","a","createElement","SlideSection","SectionSize","Header","Black","SliderSettings","slidesToShow","slidesToScroll","autoplay","arrows","React","Component","LearnSection","_ref","Category","Block","maxWidth","Padding","layout_SlideSectionWithData","PageWrapper","_ref2","children","TagSlug","TagData","CategoryTheme","Location","Layout","PrimaryColor","Primary","SecondaryColor","TertiaryColor","Tertiary","SubLevelPage","SimpleHero","Breadcrumb","Crumbs","Label","className","Btn","IconClass","IconPosition","SocialStrip","Margin","QuestionFooter","TemplateLayout","_ref3","CategoryData","CategoryName","layout_PageWrapper","QuestionListings","TagFilter","CategoryFilter","Gutter","Snow","layout_LearnSection","LearnTagTemplate","_ref4","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","tagQuery","LearnTagPage","pageContext","TransformedCategories","categoryDataTransformer","data","allPrismicQuestionCategory","edges","Fragment","node","key","i","layout","location","href","BlockStyle","styled","div","_templateObject","flex","AlignItems","css","_templateObject2","JustifyContent","BgTint","Width","Base","Grid","SiteWidth","Root","Size","BgMatch","BgQuery","BgAlt","styles_scss","ImgMatch","src","AltText","ImgQuery","SlideSectionStyle","Sm","Inner","SectionInnerStyle","Left","Content","SectionContentStyle","_templateObject3","Media","Md","SectionHeader","_templateObject4","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","PrevArrow","SectionSlider","_settings","_this","ArrowColor","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","responsive","breakpoint","Helmet","rel","type","lib_default","ref","h","slider","ViewAll","SlideSection_styles_scss","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","WrapperLock","createGlobalStyle","WrapperRelease","SimpleSectionStyle","Right","FluidHeight","SimpleSection","SimpleSection_styles_scss","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","SimpleHeroStyle","Nav","Tint","TintBorder","Hero","BreadCrumb","Link","Bread","crumb","to","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","categories","category","id","name","text","icon","headline","uid","color_background","color_primary","color_secondary","color_tertiary","tags","tag","tag_name","tag_icon","tag_slug","SidebarWidgetStyle","FadeIn","Radius","SidebarWidget","gatsby_browser_entry","SidebarStyle","styles_scss_templateObject","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","WidgetSection","Slider","WidgetSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","SocialStripStyle","span","target","QuestionCards","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","length","query","categoryMap","questionsMap","questionDataTransformer","allPrismicQuestion","Question","QuestionCategory","filteredCategory","slug","title","coverImage","BgImageAltText","includes","toLowerCase","Whitee","_1178841057","QuestionListings_QuestionCards","question","Array","isArray","questionPost","date","author","document","cover_image","localFile","childImageSharp","fluid","shortAnswer","short_answer","longAnswer","long_answer","HeroStripStyle","ViewWidthFontSize","BrowseCategories","categoryWidgets","widgetArray","viewAll","unshift","Slate","_1344697354","HideCategories","QuestionFooter_BrowseCategories"],"mappings":"sPAoCMA,cACJ,SAAAA,EAAYC,GAAO,OAEjBC,EAAAC,KAAAC,KAAMH,IAFWG,iCAKnBC,OAAA,WAEE,IAAMC,EAAUF,KAAKH,MAAMK,QAGrBC,EAAUH,KAAKH,MAAMO,KAAKC,UAAUC,MAAMC,WAC1CC,EAAYR,KAAKH,MAAMO,KAAKC,UAAUC,MAAMG,UAG5CC,EAAOV,KAAKH,MAAMO,KAAKM,KAGvBC,EAAeX,KAAKH,MAAMO,KAAKQ,KAI/BC,EAAU,GAwDhB,OAlDAH,EAAKI,IAAI,SAACC,EAAKC,GACbH,EAAQG,EAAQ,GAAK,CACnBC,KAAM,EACNC,cAAe,CACb,CACEC,YAAajB,EAAU,IAAMS,EAAe,IAAMI,EAAIH,KACtDQ,MAAO,UACPC,KAAM,CACJC,QAAS,CACPnB,QAASA,EACToB,QAAS,GACTC,QAAS,GACTC,SAAUV,EAAIW,KACdlB,UAAWA,EACXmB,UAAWnB,EACXoB,SAAUb,EAAIc,KACdC,UAAW,GACXC,YAAa,GACbC,SAAU,UAQtBnB,EAAQ,GAAK,CACXI,KAAM,EACNC,cAAe,CACb,CACEC,YAAajB,EAAU,IAAMS,EAAe,IAC5CS,MAAO,UACPC,KAAM,CACJC,QAAS,CACPnB,QAAS8B,IAAM3B,MAAM4B,SACrBX,QAAS,GACTC,QAAS,GACTC,SAAU,OAASzB,KAAKH,MAAMO,KAAKsB,KAAO,aAC1ClB,UAAWyB,IAAM3B,MAAM6B,MACvBR,UAAWM,IAAM3B,MAAM6B,MACvBP,SAAU5B,KAAKH,MAAMO,KAAKyB,KAC1BC,UAAW,GACXC,YAAa,GACbC,SAAU,QAQlBI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE1B,QAASA,EACT2B,YAAa,EACbC,OAAQ,aAAezC,KAAKH,MAAMO,KAAKsB,KACvCO,MAAO,CACLzB,UAAWyB,IAAM3B,MAAMoC,MACvBvC,QAAS,QAEXwC,eAAgB,CACdC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,QAAQ,SA3FiBC,IAAMC,WAoGnCC,EAAe,SAAAC,GAA2B,IAAxBjD,EAAwBiD,EAAxBjD,QAASkD,EAAeD,EAAfC,SAC/B,OACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,SAAS,OAAOC,QAAS,CAAC,EAAG,EAAG,EAAG,IACxCnB,EAAAC,EAAAC,cAACkB,EAAD,CAAsBtD,QAASA,EAASE,KAAMgD,MAM9CK,EAAc,SAAAC,GAQd,IAPJC,EAOID,EAPJC,SACAC,EAMIF,EANJE,QACAC,EAKIH,EALJG,QACAlD,EAII+C,EAJJ/C,aACAyC,EAGIM,EAHJN,SACAU,EAEIJ,EAFJI,cACAC,EACIL,EADJK,SAEA,OACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACE7D,QAAS2D,EAAcxD,MAAMC,WAC7B0D,aAAcH,EAAcxD,MAAM4D,QAClCC,eAAgBL,EAAcxD,MAAMG,UACpC2D,cAAeN,EAAcxD,MAAM+D,UAEnCjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEnE,QAAS2D,EAAcxD,MAAMC,WAC7B0D,aAAcH,EAAcxD,MAAM4D,QAClCC,eAAgBL,EAAcxD,MAAMG,UACpC2D,cAAeN,EAAcxD,MAAM+D,UAInCjC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAY/D,UAAWsD,EAAcxD,MAAMG,WACzC2B,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,SAAU,KACflB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,OAAQ,CACN,CACEtD,YAAa,SAAWR,EACxB+D,MAAOtB,EAAS1B,KAAO,uBAEzB,CACEP,YAAa,SAAWR,EAAe,IAAMiD,EAC7Cc,MAAOb,EAAQnC,OAGnBlB,UAAWsD,EAAcxD,MAAMG,YAEjC2B,EAAAC,EAAAC,cAAA,MAAIqC,UAAU,MAAd,yBACyBvB,EAAS1B,KADlC,OAC4CmC,EAAQnC,KADpD,IAC2D,KAE3DU,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEC,UAAU,WACVH,MAAM,iBACNvE,QAAS2D,EAAcxD,MAAM+D,SAC7B7D,UAAWsD,EAAcxD,MAAM4D,QAC/B/C,YAAY,aACZ2D,aAAa,SAEf1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEC,OAAQ,CAAC,GAAK,EAAG,EAAG,GACpBjB,SAAUA,EACVvD,UAAWsD,EAAcxD,MAAMG,cAMrC2B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEnE,QAAS8B,IAAM3B,MAAMC,WACrBC,UAAWyB,IAAM3B,MAAM6B,OAItBwB,GAOHvB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEnE,QAAS8B,IAAM3B,MAAM6B,MACrB3B,UAAWyB,IAAM3B,MAAM4B,UAIvBE,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,UAaJC,EAAiB,SAAAC,GAOjB,IANJvB,EAMIuB,EANJvB,QACAC,EAKIsB,EALJtB,QACAlD,EAIIwE,EAJJxE,aACAyE,EAGID,EAHJC,aACArB,EAEIoB,EAFJpB,SACAsB,EACIF,EADJE,aAEA,OACEjD,EAAAC,EAAAC,cAACgD,EAAD,CACExB,cAAesB,EAAa/E,UAC5B+C,SAAUgC,EACVzE,aAAcA,EACdiD,QAASA,EACTC,QAASA,EACTE,SAAUA,GAEV3B,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CACE5E,aAAcA,EACdiD,QAASC,EAAQjD,KACjB4E,UAAW3B,EAAQnC,KACnB+D,eAAgBJ,EAChBK,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBvF,QAAS8B,IAAM3B,MAAMqF,OAEvBvD,EAAAC,EAAAC,cAACsD,EAAD,CAAc1F,QAAQ,SAASkD,SAAUgC,MA0BhCS,EApBU,SAAAC,GAOnB,IANJlC,EAMIkC,EANJlC,QACAC,EAKIiC,EALJjC,QACAlD,EAIImF,EAJJnF,aACAyE,EAGIU,EAHJV,aACAC,EAEIS,EAFJT,aACAtB,EACI+B,EADJ/B,SAEA,OACE3B,EAAAC,EAAAC,cAACyD,EAAD,CACEnC,QAASA,EACTC,QAASA,EACTwB,aAAcA,EACd1E,aAAcA,EACdyE,aAAcA,EACdrB,SAAUA,cC1RhBiC,EAAAC,EAAAC,EAAA,6BAAAC,IA0EeC,UArDM,SAAAvG,GAEnB,IAAIc,EAAed,EAAMwG,YAAY1F,aAEjC2F,GADUzG,EAAMwG,YAAYzC,QACJ2C,YAC1B1G,EAAM2G,KAAKC,2BAA2BC,QAOxC,OACEtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsE,SAAA,KACGL,EAAsBxF,IAAI,SAACsC,EAAUpC,GAGpC,GAAIoC,EAASwD,KAAKhG,MAAQD,EAAc,CAEtC,IAAIyE,EAAehC,EAASwD,KACxBvB,EAAejC,EAASwD,KAAKlF,KAGjC,OACEU,EAAAC,EAAAC,cAAA,OAAKuE,IAAK7F,GACPoC,EAASwD,KAAKlG,KAAKI,IAAI,SAACC,EAAK+F,GAG5B,GAAI/F,EAAIH,MAAQf,EAAMwG,YAAYzC,QAAS,CAEzC,IAAIC,EAAU9C,EAEd,OACEqB,EAAAC,EAAAC,cAACyE,EAAD,CACEF,IAAKC,EACLlD,QAAS7C,EAAIH,KACbiD,QAASA,EACTwB,aAAcA,EACd1E,aAAcA,EACdyE,aAAcA,EACdrB,SAAUlE,EAAMmH,SAASC,gBAxC/C,IAgEad,EAAQ,47CCxEd,IAuGQe,EAvGWC,IAAOC,IAAVC,IAEH,SAAAxH,GAAK,OAAKA,EAAMoB,KAAOpB,EAAMyH,KAAO,UAGpD,SAAAzH,GAAK,OAAKA,EAAMM,QAAU,eAAiBN,EAAMM,QAAU,IAAM,MACjE,SAAAN,GAAK,OAAKA,EAAMW,UAAY,UAAYX,EAAMW,UAAY,IAAM,MAIhE,SAAAX,GAAK,OACLA,EAAM0H,WAAa,gBAAkB1H,EAAM0H,WAAa,IAAM,MAG9D,SAAA1H,GAAK,MACU,YAAfA,EAAMuB,OACNoG,cADAC,MAkCE,SAAA5H,GAAK,OAAKA,EAAM6H,eAAiB,eAAiB,MAClD,SAAA7H,GAAK,OACLA,EAAM6H,eACF,oBAAsB7H,EAAM6H,eAAiB,IAC7C,MAgBJ,SAAA7H,GAAK,OAAKA,EAAM8H,OAAS,YAAc9H,EAAM8H,OAAS,IAAM,MAQ5D,SAAA9H,GAAK,OACLA,EAAM+H,MAAQ,UAA0B,IAAd/H,EAAM+H,MAAc,KAAO,YAC5C,SAAA/H,GAAK,OAChBA,EAAMyD,SACF,QAAUrB,IAAM4F,KAAKC,KAAKC,UAAY,MAAQlI,EAAMyD,SAAW,IAC/DrB,IAAM4F,KAAKC,KAAKC,WAGpB,SAAAlI,GAAK,OACLA,EAAM0D,QACF,qBAAuByE,IAAKC,KAAO,MAAQpI,EAAM0D,QAAQ,GAAK,IAC9D,MACJ,SAAA1D,GAAK,OACLA,EAAM0D,QACF,uBAAyByE,IAAKC,KAAO,MAAQpI,EAAM0D,QAAQ,GAAK,IAChE,MACJ,SAAA1D,GAAK,OACLA,EAAM0D,QACF,wBAA0ByE,IAAKC,KAAO,MAAQpI,EAAM0D,QAAQ,GAAK,IACjE,MACJ,SAAA1D,GAAK,OACLA,EAAM0D,QACF,sBAAwByE,IAAKC,KAAO,MAAQpI,EAAM0D,QAAQ,GAAK,IAC/D,OC3COF,IArDD,SAAAF,GAAA,IACZQ,EADYR,EACZQ,SACAgB,EAFYxB,EAEZwB,UACAvD,EAHY+B,EAGZ/B,MACAkC,EAJYH,EAIZG,SACAsE,EALYzE,EAKZyE,MACArE,EANYJ,EAMZI,QACAgE,EAPYpE,EAOZoE,WACAW,EARY/E,EAQZ+E,QACAC,EATYhF,EASZgF,QACAC,EAVYjF,EAUZiF,MACAT,EAXYxE,EAWZwE,OACAxH,EAZYgD,EAYZhD,QACAK,EAbY2C,EAaZ3C,UACAkH,EAdYvE,EAcZuE,eACAzG,EAfYkC,EAeZlC,KAfY,OAiBZmB,EAAAC,EAAAC,cAAC+F,EAAD,CACE1D,UAAWA,EAAYA,EAAY,SAAW,QAC9CiD,MAAOA,EACPtE,SAAUA,EACVlC,MAAOA,EACPmC,QAASA,EACTgE,WAAYA,IAA0B,EACtCG,eAAgBA,IAAkC,EAClDC,OAAQA,EACRxH,QAASA,EACTK,UAAWA,EACXS,KAAMA,GAGL0C,EAAWvB,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,iBAAiBhB,GAAkB,KAG7DuE,EACC9F,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,kBACbvC,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,aACbvC,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAUC,IAAKL,EAASM,QAASJ,MAGnC,KAGHD,EACC/F,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,kBACbvC,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,aACbvC,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAUF,IAAKJ,EAASK,QAASJ,MAGnC,wlHC5CR,IAAMM,EAAoBvB,IAAOC,IAAVC,IAMDpF,IAAM4F,KAAKI,KAAKU,GACjB1G,IAAM4F,KAAKI,KAAKU,GAelBX,IAAKC,KAIJD,IAAKC,KACJD,IAAKC,KAQHD,IAAKC,KAAmBD,IAAKC,KAkEpBhG,IAAM3B,MAAMoC,OAS5CgG,EAAkBE,MAAQzB,IAAO0B,IAAP1B,CAA1BM,IAKI,SAAA5H,GAAK,OACLA,EAAM6F,OACF,qBAAuBsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAC7D,gBAAkBsC,IAAKC,MAC3B,SAAApI,GAAK,OACLA,EAAM6F,OACF,uBAAyBsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAC/D,kBAAoBsC,IAAKC,MAC7B,SAAApI,GAAK,OACLA,EAAM6F,OACF,wBAA0BsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAChE,qBACJ,SAAA7F,GAAK,OACLA,EAAM6F,OACF,sBACAsC,IAAKF,KAAKpC,OAAOoD,KACjB,OACAd,IAAKC,KACL,MACApI,EAAM6F,OAAO,GACb,KACA,sBACAsC,IAAKF,KAAKpC,OAAOoD,KACjB,MACAd,IAAKC,KACL,MAGRS,EAAkBK,QAAU5B,IAAO6B,IAAP7B,CAA5B8B,IAOoBjB,IAAKC,KACX,SAAApI,GAAK,OACbA,EAAM2C,YACF,QAAUwF,IAAKC,KAAO,IAAMpI,EAAM2C,YAAc,IAChD,QAAUwF,IAAKC,KAAO,QAEPJ,IAAKqB,MAAMtB,MAAMuB,GAAK,KACzBnB,IAAKC,KAAcD,IAAKC,KAC9B,SAAApI,GAAK,OACbA,EAAM2C,YACF,SAAWwF,IAAKC,KAAO,UAAYpI,EAAM2C,YAAc,IACvD,SAAWwF,IAAKC,KAAO,cAKnCS,EAAkBU,cAAgBjC,IAAOC,IAAzCiC,IAIsBrB,IAAKC,MAG3BS,EAAkBjH,SAAW0F,IAAOC,IAApCkC,IAIW,SAAAzJ,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAY,MACrCyB,IAAM4F,KAAK0B,WAAWC,SACpCvH,IAAM4F,KAAK0B,WAAWE,QAERxH,IAAM4F,KAAKI,KAAKU,GACd1G,IAAM4F,KAAK0B,WAAWC,SACpCvH,IAAM4F,KAAK0B,WAAWE,SAI9Bf,EAAkBgB,aAAevC,IAAOC,IAAxCuC,IAKa1H,IAAM3B,MAAMoC,MAGXT,IAAM3B,MAAMoC,MACVT,IAAM3B,MAAMoC,MAIbT,IAAM3B,MAAMoC,OASZgG,QCnMf,SAASkB,EAAU/J,GAAO,IAChB8E,EAA8B9E,EAA9B8E,UAAWkF,EAAmBhK,EAAnBgK,MAAOC,EAAYjK,EAAZiK,QAC1B,OACE1H,EAAAC,EAAAC,cAAA,OACEqC,UAAWA,EACXkF,MAAKE,OAAAC,OAAA,GAAOH,GACZC,QAASA,EAETG,WAAYH,EACZI,KAAK,SACLC,SAAS,KAET/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMzF,UAAU,YAAYjD,KAAK,WAKvC,SAAS2I,EAAUxK,GAAO,IAChB8E,EAA8B9E,EAA9B8E,UAAWkF,EAAmBhK,EAAnBgK,MAAOC,EAAYjK,EAAZiK,QAC1B,OACE1H,EAAAC,EAAAC,cAAA,OACEqC,UAAWA,EACXkF,MAAKE,OAAAC,OAAA,GAAOH,GACZC,QAASA,EAETG,WAAYH,EACZI,KAAK,SACLC,SAAS,KAET/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMzF,UAAU,YAAYjD,KAAK,eAMjC4I,cACJ,SAAAA,EAAYzK,GAAO,OAEjBC,EAAAC,KAAAC,KAAMH,IAFWG,iCAKnBC,OAAA,WAAS,IAAAsK,EAAAC,EAAAxK,KAQD4C,GAHa5C,KAAKH,MAAM4K,WAGTzK,KAAKH,MAAM8C,eAAeC,aAC3C5C,KAAKH,MAAM8C,eAAeC,aAC1B,GACEC,EAAiB7C,KAAKH,MAAM8C,eAAeE,eAC7C7C,KAAKH,MAAM8C,eAAeE,eAC1B,EACEC,IAAW9C,KAAKH,MAAM8C,eAAeG,UACvC9C,KAAKH,MAAM8C,eAAeG,SAExBC,IAAS/C,KAAKH,MAAM8C,eAAeI,QACrC/C,KAAKH,MAAM8C,eAAeI,OAIxB2H,IAAQH,EAAA,CACZI,MAAM,EACNC,MAAO,IACP7H,QAAQ,EACR8H,cAAe,IACfjI,aAAcA,EACdC,eAAgBA,EAChBC,SAAUA,EACVgI,UAAU,EACVC,WAAW,IATC,OAUJhI,EAVIwH,EAWZS,UAAW5I,EAAAC,EAAAC,cAACsH,EAAD,MAXCW,EAYZU,UAAW7I,EAAAC,EAAAC,cAAC+H,EAAD,MAZCE,EAaZW,WAAY,CACV,CACEC,WAAYtD,IAAKqB,MAAMtB,MAAMuB,GAAK,KAClCuB,SAAU,CACR9H,aAAc,EACdC,eAAgB,KAlBV0H,GAwBd,OACEnI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsE,SAAA,KACEvE,EAAAC,EAAAC,cAAC8I,EAAA,OAAD,KACEhJ,EAAAC,EAAAC,cAAA,QAAM+I,IAAI,aAAaC,KAAK,WAAWrE,KAAK,0BAC5C7E,EAAAC,EAAAC,cAAA,QACE+I,IAAI,aACJC,KAAK,WACLrE,KAAK,iCAGT7E,EAAAC,EAAAC,cAACiJ,EAAAlJ,EAAD0H,OAAAC,OAAA,CAAQwB,IAAK,SAAAC,GAAC,OAAKjB,EAAKkB,OAASD,IAAQf,GACtC1K,KAAKH,MAAM8D,eA/DMX,IAAMC,WA0HnBV,IAnDM,SAAAY,GAAA,IACnBtC,EADmBsC,EACnBtC,QACA2B,EAFmBW,EAEnBX,YACAG,EAHmBQ,EAGnBR,eACAF,EAJmBU,EAInBV,OACAZ,EALmBsB,EAKnBtB,KACA8J,EANmBxI,EAMnBwI,QACA1J,EAPmBkB,EAOnBlB,MACAyD,EARmBvC,EAQnBuC,OARmB,OAUnBtD,EAAAC,EAAAC,cAACsJ,EAAD,KACExJ,EAAAC,EAAAC,cAACsJ,EAAkBhD,MAAnB,CAAyBlD,OAAQA,GAC/BtD,EAAAC,EAAAC,cAACsJ,EAAkB7C,QAAnB,CAA2BvG,YAAaA,GACtCJ,EAAAC,EAAAC,cAACsJ,EAAkBxC,cAAnB,KACEhH,EAAAC,EAAAC,cAACsJ,EAAkBnK,SAAnB,CAA4BjB,UAAWyB,EAAMzB,WAC1CqB,EAAOO,EAAAC,EAAAC,cAAA,KAAGqC,UAAW,UAAY9C,IAAW,KAC7CO,EAAAC,EAAAC,cAAA,UAAKG,IAENkJ,EACCvJ,EAAAC,EAAAC,cAACsJ,EAAkBlC,aAAnB,KACEtH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEzD,YAAawK,EAAQ,GACrBxL,QAAQ,UACRuE,MAAOiH,EAAQ,GACfE,cAAc,WAGhB,MAGNzJ,EAAAC,EAAAC,cAACwJ,EAAD,CACEnJ,eAAgBA,EAChB8H,WAAYxI,EAAM8J,UAGjBlL,EAAQC,IAAI,SAACkL,EAAQhL,GAEpB,OACEoB,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CACEpF,IAAK7F,EACLE,cAAe8K,EAAO9K,cACtBD,KAAM+K,EAAO/K,KAAO+K,EAAO/K,KAAO,ktCCvK3C,IAAMiL,EAAcC,4BAAH9E,IAICQ,IAAKqB,MAAMtB,MAAMuB,GAAK,KAWtBtB,IAAKqB,MAAMtB,MAAMuB,GAAK,EAAI,KAG1BtB,IAAKqB,MAAMtB,MAAMuB,GAAK,MAYlCiD,EAAiBD,4BAAH1E,IAMFI,IAAKqB,MAAMtB,MAAMuB,GAAK,EAAI,KAK1BtB,IAAKqB,MAAMtB,MAAMuB,GAAK,MAQfgD,4BAAHlD,IAEJpB,IAAKqB,MAAMtB,MAAMuB,GAAK,EAAI,KAG1BtB,IAAKqB,MAAMtB,MAAMuB,GAAK,oiCClD/C,IAAMkD,EAAqBlF,IAAOC,IAAVC,IAGR,SAAAxH,GAAK,OAAKA,EAAMM,QAAUN,EAAMM,QAAU8B,IAAM3B,MAAM4D,SAC3D,SAAArE,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAM6B,QAGrEkK,EAAmBzD,MAAQzB,IAAO0B,IAAP1B,CAA3BM,IAOI,SAAA5H,GAAK,OACLA,EAAM6F,OACF,qBAAuBsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAC7D,gBAAkBsC,IAAKC,MAC3B,SAAApI,GAAK,OACLA,EAAM6F,OACF,uBACAsC,IAAKF,KAAKpC,OAAO4G,MACjB,MACAzM,EAAM6F,OAAO,GACb,IACA,MACJ,SAAA7F,GAAK,OACLA,EAAM6F,OACF,wBAA0BsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAChE,mBAAqBsC,IAAKC,MAC9B,SAAApI,GAAK,OACLA,EAAM6F,OACF,sBACAsC,IAAKF,KAAKpC,OAAOoD,KACjB,MACAjJ,EAAM6F,OAAO,GACb,IACA,MAIQ,SAAA7F,GAAK,OAAKA,EAAM0M,YAAc,WAAa,YAC9C,SAAA1M,GAAK,OAAKA,EAAM0M,YAAc,OAAS,QAM9C,SAAA1M,GAAK,OAAKA,EAAM8H,OAAS,YAAc9H,EAAM8H,OAAS,IAAM,OAUlE0E,EAAmBtD,QAAU5B,IAAO6B,IAAP7B,CAA7B8B,IAIoB,SAAApJ,GAAK,OAAKA,EAAMoB,KAAOpB,EAAMoB,KAAO,OAK3C,SAAApB,GAAK,OAAKA,EAAM0M,YAAc,OAAS,SAGrCF,QClCAG,IAlCO,SAAArJ,GAAA,IACpBhD,EADoBgD,EACpBhD,QACAiB,EAFoB+B,EAEpB/B,MACAZ,EAHoB2C,EAGpB3C,UACA0H,EAJoB/E,EAIpB+E,QACAE,EALoBjF,EAKpBiF,MACAT,EANoBxE,EAMpBwE,OACA4E,EAPoBpJ,EAOpBoJ,YACA7G,EARoBvC,EAQpBuC,OACAzE,EAToBkC,EASpBlC,KACA0C,EAVoBR,EAUpBQ,SAVoB,OAYpBvB,EAAAC,EAAAC,cAACmK,EAAD,CAAoBrL,MAAOA,EAAOjB,QAASA,EAASK,UAAWA,GAC7D4B,EAAAC,EAAAC,cAACmK,EAAmB7D,MAApB,CACEjB,OAAQA,EACR4E,YAAaA,EACb7G,OAAQA,GAERtD,EAAAC,EAAAC,cAACmK,EAAmB1D,QAApB,CACEwD,YAAaA,EACbtL,KAAMA,EACN0D,UAAU,kBAEThB,GAEFuE,EACC9F,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,eACbvC,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAUC,IAAKL,EAASM,QAASJ,KAEjC,6BCnDV,IAAAsE,EAAS1G,EAAQ,IAAc2G,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkB5G,EAAQ,KAAgB0G,EAAAE,EAH1C,OAG0C,CAC1CI,cAAA,EACAC,IAAA,WACA,IACA,UAAAjN,MAAAkN,MAAAH,GAAA,GACK,MAAAI,GACL,quBCGO,IAAMC,EAAiBjG,IAAOC,IAAVC,IAOvB,SAAAxH,GAAK,OACLA,EAAM0D,QACF,qBAAuByE,IAAKC,KAAO,MAAQpI,EAAM0D,QAAQ,GAAK,IAC9D,qBAAuByE,IAAKC,KAAO,SACvC,SAAApI,GAAK,OACLA,EAAM0D,QACF,uBAAyByE,IAAKC,KAAO,MAAQpI,EAAM0D,QAAQ,GAAK,IAChE,kBAAoByE,IAAKC,MAC7B,SAAApI,GAAK,OACLA,EAAM0D,QACF,wBAA0ByE,IAAKC,KAAO,MAAQpI,EAAM0D,QAAQ,GAAK,IACjE,wBAA0ByE,IAAKC,KAAO,SAC1C,SAAApI,GAAK,OACLA,EAAM0D,QACF,sBACAyE,IAAKF,KAAKpC,OAAOoD,KACjB,MACAd,IAAKC,KACL,MACApI,EAAM0D,QAAQ,GACd,IACA,sBACAyE,IAAKF,KAAKpC,OAAOoD,KACjB,MACAd,IAAKC,KACL,KAIF,SAAApI,GAAK,OACLA,EAAMwN,UAAYxN,EAAMyN,SAAWzN,EAAM0N,QAAU1N,EAAM2N,UACrD,qBACA,MACJ,SAAA3N,GAAK,OAAKA,EAAMwN,SAAW,UAAYxN,EAAMwN,SAAW,MACxD,SAAAxN,GAAK,OAAKA,EAAMyN,QAAU,SAAWzN,EAAMyN,QAAU,MACrD,SAAAzN,GAAK,OAAKA,EAAM2N,UAAY,WAAa3N,EAAM2N,UAAY,MAC3D,SAAA3N,GAAK,OAAKA,EAAM0N,OAAS,QAAU1N,EAAM0N,OAAS,MAClD,SAAA1N,GAAK,OAAKA,EAAM4N,SAAW,UAAY5N,EAAM4N,SAAW,MAItCzF,IAAKC,MAIhByF,EAAmBvG,IAAOC,IAAVK,IAIT,SAAA5H,GAAK,OAAKA,EAAMoB,KAAOpB,EAAMoB,KAAO,OACnC,SAAApB,GAAK,OACtBA,EAAM6H,eAAiB7H,EAAM6H,eAAiB,cACnC,SAAA7H,GAAK,OAAKA,EAAM8N,UAAY,OAAS1L,IAAM4F,KAAKC,KAAKC,2hCC5DpE,IAoFe6F,EApFSzG,IAAOC,IAAVC,IAKGW,IAAK6F,IAAI5F,KACjB,SAAApI,GAAK,OAAKA,EAAMU,WAAaV,EAAMU,WAAa,QAGrD,SAAAV,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAY,WAKrD,SAAAX,GAAK,OACLA,EAAMiO,KACF,qLAUAjO,EAAMiO,KAVN,+DAkBA,MAGJ,SAAAjO,GAAK,OACLA,EAAMkO,WAAN,uNAaI,MAKoB/F,IAAKC,KAGND,IAAKC,KAMhB,SAAApI,GAAK,OAAKA,EAAM0M,YAAc,WAAa,YAC9C,SAAA1M,GAAK,OAAKA,EAAM0M,YAAc,OAAS,QAQ9C,SAAA1M,GAAK,OAAKA,EAAM8H,OAAS,YAAc9H,EAAM8H,OAAS,IAAM,yBCPnDpD,IArDI,SAAApB,GAAA,IACjB5C,EADiB4C,EACjB5C,WACA8M,EAFiBlK,EAEjBkK,SACAC,EAHiBnK,EAGjBmK,QACAE,EAJiBrK,EAIjBqK,UACAD,EALiBpK,EAKjBoK,OACAE,EANiBtK,EAMjBsK,SACAjN,EAPiB2C,EAOjB3C,UACAsN,EARiB3K,EAQjB2K,KACAvK,EATiBJ,EASjBI,QACA0E,EAViB9E,EAUjB8E,KACAC,EAXiB/E,EAWjB+E,QACAC,EAZiBhF,EAYjBgF,QACAC,EAbiBjF,EAajBiF,MACAnH,EAdiBkC,EAcjBlC,KACAyG,EAfiBvE,EAejBuE,eACAqG,EAhBiB5K,EAgBjB4K,WACApK,EAjBiBR,EAiBjBQ,SAjBiB,OAmBjBvB,EAAAC,EAAAC,cAAC+F,EAAD,CACE9H,WAAYA,EACZC,UAAWA,EACXsN,KAAMA,EACNC,WAAYA,EACZpJ,UAAWmJ,EAAO,OAAS,MAE3B1L,EAAAC,EAAAC,cAAC0L,EAAA,EAAD,CACE/F,KAAMA,IAAc,EACpB1E,QAASA,EACT8J,SAAUA,IAAsB,EAChCC,QAASA,IAAoB,EAC7BE,UAAWA,IAAwB,EACnCD,OAAQA,IAAkB,EAC1BE,SAAUA,IAAsB,EAChC/F,eAAgBA,EAChB/C,UAAU,QACV1D,KAAMA,GAEL0C,GAEFuE,EACC9F,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,eACbvC,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAUC,IAAKL,EAASM,QAASJ,EAAOzD,UAAU,cAElD,KACHwD,EACC/F,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,eACbvC,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAUF,IAAKJ,EAASK,QAAQ,WAAW7D,UAAU,cAErD,uzCC9DD,IAAMsJ,EAAa9G,IAAOC,IAAVC,IAOZ,SAAAxH,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAGxD,SAAA7C,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAMnDT,IAAM4F,KAAKI,KAAKU,GAKV,SAAA9I,GAAK,OACvBA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAQ1C,SAAA7C,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAE1D,SAAA7C,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAIzD,SAAA7C,GAAK,OACZA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,QASxDuL,EAAWvJ,MAAQyC,IAAO+G,OAAP/G,CAAnBM,IAIsBxF,IAAM4F,KAAKI,KAAKU,IAcvBsF,QC1CAE,IAnBD,SAAAhL,GAAA,IAAGsB,EAAHtB,EAAGsB,OAAQjE,EAAX2C,EAAW3C,UAAX,OACZ4B,EAAAC,EAAAC,cAAC+F,EAAD,CAAiB7H,UAAWA,GACzBiE,EAAO3D,IAAI,SAACsN,EAAOpN,GAClB,OACEoB,EAAAC,EAAAC,cAAC+F,EAAgB3D,MAAjB,CACE2J,GAAID,EAAMjN,YACV0F,IAAK7F,GAGK,GAATA,EACCoB,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAMzF,UAAU,YAAYjD,KAAK,QAAQlB,UAAWA,IAClD,KACH4N,EAAM1J,6CC9BjBsB,EAAAC,EAAAC,EAAA,sBAAAoI,IAAAtI,EAAAC,EAAAC,EAAA,sBAAAqI,IAAA,IAAAC,EAAAxI,EAAA,GAAAyI,EAAAzI,EAAA0I,EAAAF,GAAAG,GAAA3I,EAAA,GAAAA,EAAA,MAiBasI,EAAY,SAAAnL,GAAA,IACvBkK,EADuBlK,EACvBkK,SACAC,EAFuBnK,EAEvBmK,QACAE,EAHuBrK,EAGvBqK,UACAD,EAJuBpK,EAIvBoK,OACAE,EALuBtK,EAKvBsK,SACAxF,EANuB9E,EAMvB8E,KACAhH,EAPuBkC,EAOvBlC,KACAsC,EARuBJ,EAQvBI,QACAI,EATuBR,EASvBQ,SACA+D,EAVuBvE,EAUvBuE,eAVuB,OAYvB+G,EAAApM,EAAAC,cAACqM,EAAA,EAAD,CACE1G,KAAMA,IAAc,EACpB1E,QAASA,IAAoB,EAC7B8J,SAAUA,IAAsB,EAChCC,QAASA,IAAoB,EAC7BE,UAAWA,IAAwB,EACnCD,OAAQA,IAAkB,EAC1BE,SAAUA,IAAsB,GAEhCgB,EAAApM,EAAAC,cAACqM,EAAA,EAAD,CACEhK,UAAU,eACV+C,eAAgBA,EAChBzG,KAAMA,GAEL0C,KAKM4K,EAAc,SAAA7K,GAAA,IAAGC,EAAHD,EAAGC,SAAU1C,EAAbyC,EAAazC,KAAb,OACzBwN,EAAApM,EAAAC,cAACqM,EAAA,EAAD,CAAkB1N,KAAMA,EAAM0D,UAAU,gBACrChB,2FCfQ4C,EAA0B,SAAAqI,GACrC,OAAIA,EACkBA,EAAW9N,IAAI,SAAC+N,EAAU7N,GAC5C,MAAO,CACL4F,KAAM,CACJkI,GAAID,EAASjI,KAAKkI,GAClBpN,KAAMmN,EAASjI,KAAKJ,KAAKuI,KAAOF,EAASjI,KAAKJ,KAAKuI,KAAKC,KAAO,GAC/DnN,KAAMgN,EAASjI,KAAKJ,KAAKyI,KACzBxN,SAAUoN,EAASjI,KAAKJ,KAAK0I,SAC7BtO,KAAMiO,EAASjI,KAAKuI,IACpB3K,WAAY,CACVrD,YAAa,cACbuD,MAAO,iBAETrE,UAAW,CACTC,MAAO,CACLC,WAAYsO,EAASjI,KAAKJ,KAAK4I,iBAC/BlL,QAAS2K,EAASjI,KAAKJ,KAAK6I,cAC5B5O,UAAWoO,EAASjI,KAAKJ,KAAK8I,gBAC9BjL,SAAUwK,EAASjI,KAAKJ,KAAK+I,iBAGjC7O,MAvCwB8O,EAuCCX,EAASjI,KAAKJ,KAAKgJ,KAtChDA,EACYA,EAAK1O,IAAI,SAAC2O,EAAKzO,GAC3B,MAAO,CACLU,KAAM+N,EAAIC,SACV7N,KAAM4N,EAAIE,SACV/O,KAAM6O,EAAIG,YAMP,QAZuB,IAAAJ,IA8CvB,uuEC/CX,IAAMK,EAAqB1I,IAAOC,IAAVC,IAORpF,IAAM4F,KAAKI,KAAKU,GAE5BmH,KAGJD,EAAmBjH,MAAQzB,IAAOC,IAAlCK,IAUsB,SAAA5H,GAAK,OACvBA,EAAMM,QAAUN,EAAMM,QAAU8B,IAAM3B,MAAM6B,OAC7B6F,IAAK+H,OAGJ9N,IAAM4F,KAAK0B,WAAWC,SACpCvH,IAAM4F,KAAK0B,WAAWE,QAEjB,SAAA5J,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAIjE,SAAA7C,GACA,GAAIA,EAAM0B,QACR,MACE,mCAEA1B,EAAM0B,QAFN,qIAaJ,SAAA1B,GACA,GAAIA,EAAMiC,WAAajC,EAAMkC,YAC3B,MACE,6LASAlC,EAAMiC,UATN,wBAYAjC,EAAMkC,YAZN,gCAcoBE,IAAM4F,KAAK0B,WAAWC,SAd1C,WAeAvH,IAAM4F,KAAK0B,WAAWE,QAftB,sBA+BOxH,IAAM4F,KAAKI,KAAKU,GAClB,SAAA9I,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAEjDT,IAAM4F,KAAK0B,WAAWC,SACpCvH,IAAM4F,KAAK0B,WAAWE,QAMjBxH,IAAM4F,KAAKI,KAAKU,GAClB1G,IAAM4F,KAAKI,KAAKU,GACf,SAAA9I,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAEhDT,IAAM4F,KAAK0B,WAAWC,SACpCvH,IAAM4F,KAAK0B,WAAWE,QAKNxH,IAAM3B,MAAMoC,MACvBT,IAAM3B,MAAM6B,MAKVF,IAAM3B,MAAM6B,MAMbF,IAAM3B,MAAM6B,MAOXF,IAAM3B,MAAM6B,MAIrB,SAAAtC,GACA,GAAIA,EAAMiC,WAAajC,EAAMkC,YAC3B,sEASR8N,EAAmBrO,QAAU2F,IAAOC,IAApC6B,KAKA4G,EAAmBpO,SAAW0F,IAAOC,IAArCiC,KAMAwG,EAAmBhO,KAAOsF,IAAOL,EAAjCwC,IAEWrH,IAAM4F,KAAKI,KAAKU,GAClB1G,IAAM4F,KAAKI,KAAKU,GAIL1G,IAAM4F,KAAK0B,WAAWC,SACpCvH,IAAM4F,KAAK0B,WAAWE,QACjB,SAAA5J,GAAK,OAAKA,EAAMS,MAAQT,EAAMS,MAAQ2B,IAAM3B,MAAMoC,QAG9CmN,QC5HAG,SAjCO,SAAA7M,GAAA,IACpBhD,EADoBgD,EACpBhD,QACAoB,EAFoB4B,EAEpB5B,QACAE,EAHoB0B,EAGpB1B,SACAjB,EAJoB2C,EAIpB3C,UACAoB,EALoBuB,EAKpBvB,SACAD,EANoBwB,EAMpBxB,UACAR,EAPoBgC,EAOpBhC,YACAW,EARoBqB,EAQpBrB,UACAC,EAToBoB,EASpBpB,YAToB,OAWpBK,EAAAC,EAAAC,cAAC+F,EAAD,CAAoB1D,UAAU,UAC5BvC,EAAAC,EAAAC,cAAC+F,EAAmBO,MAApB,CACEzI,QAASA,EACToB,QAASA,EACTf,UAAWA,EACXsB,UAAWA,EACXC,YAAaA,GAEbK,EAAAC,EAAAC,cAAC2N,EAAA,KAAD,CAAM5B,GAAIlN,GACRiB,EAAAC,EAAAC,cAAC+F,EAAmB5G,SAApB,KAA8BA,GAI9BW,EAAAC,EAAAC,cAAC+F,EAAmBxG,KAApB,CACE8C,UAAW,UAAY/C,EACvBtB,MAAOqB,qeC7BjB,IAAMuO,EAAe/I,IAAOC,IAAV+I,IAETnI,IAAK6F,IAAI5F,KAEOD,IAAK6F,IAAI5F,KAIXJ,IAAKqB,MAAMtB,MAAMuB,GAAK,MAK7C+G,EAAatH,MAAQzB,IAAOC,IAA5BgJ,IAKanO,IAAM4F,KAAKI,KAAKU,GAClBX,IAAKF,KAAKpC,OAAOoD,KAELjB,IAAKqB,MAAMtB,MAAMuB,GAAK,MAK9B+G,QCiCAG,EA1DC,SAAAlN,KACdQ,SADcR,EAEdhD,QAFcgD,EAGdc,aAHc,IAIdE,EAJchB,EAIdgB,eACAC,EALcjB,EAKdiB,cALc,OAOdhC,EAAAC,EAAAC,cAACgO,EAAD,KACElO,EAAAC,EAAAC,cAACgO,EAAa1H,MAAd,KACExG,EAAAC,EAAAC,cAACiO,EAAD,CACEpQ,QAAS8B,IAAM3B,MAAM4D,QACrB3C,QAAQ,OACRE,SAAS,qBACTjB,UAAWyB,IAAM3B,MAAM6B,MACvBR,UAAWM,IAAM3B,MAAM6B,MACvBP,SAAS,MACTT,YAAY,gCAEdiB,EAAAC,EAAAC,cAACiO,EAAD,CACEpQ,QAASgE,EACT5C,QAAQ,OACRE,SAAS,eACTjB,UAAW4D,EACXzC,UAAWyC,EACXxC,SAAS,QACTT,YAAY,+BAEdiB,EAAAC,EAAAC,cAACiO,EAAD,CACEpQ,QAASgE,EACT5C,QAAQ,OACRE,SAAS,QACTjB,UAAW4D,EACXzC,UAAWyC,EACXxC,SAAS,iBACTT,YAAY,MAEdiB,EAAAC,EAAAC,cAACiO,EAAD,CACEpQ,QAASgE,EACT5C,QAAQ,OACRE,SAAS,OACTjB,UAAW4D,EACXzC,UAAWyC,EACXxC,SAAS,cACTT,YAAY,aAEdiB,EAAAC,EAAAC,cAACiO,EAAD,CACEpQ,QAASgE,EACT5C,QAAQ,OACRE,SAAS,QACTjB,UAAW4D,EACXzC,UAAWyC,EACXxC,SAAS,QACTT,YAAY,ujBCvDpB,IAAMqP,EAAoBrJ,IAAOC,IAAVqJ,IAKZxO,IAAM3B,MAAMC,WACH0B,IAAM4F,KAAK0B,WAAWC,SACpCvH,IAAM4F,KAAK0B,WAAWE,SAG5B+G,EAAkB5H,MAAQzB,IAAOC,IAAjCsJ,KAOAF,EAAkBzH,QAAU5B,IAAOC,IAAnCuJ,IAGgB,SAAA9Q,GAAK,OAAKA,EAAMM,QAAUN,EAAMM,QAAU,QAC/C,SAAAN,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAY,WAK/BwH,IAAKC,MAIhBuI,QC9CfxK,EAAAC,EAAAC,EAAA,sBAAA0K,IAAA5K,EAAAC,EAAAC,EAAA,sBAAA2K,IAyBO,IAAMvM,EAAe,SAAAnB,GAAA,IAC1BQ,EAD0BR,EAC1BQ,SACAxD,EAF0BgD,EAE1BhD,QACA8D,EAH0Bd,EAG1Bc,aACAE,EAJ0BhB,EAI1BgB,eACAC,EAL0BjB,EAK1BiB,cAL0B,OAO1BhC,EAAAC,EAAAC,cAACwO,EAAD,CAAmBnM,UAAU,OAC3BvC,EAAAC,EAAAC,cAACyO,EAAA,EAAD,MACA3O,EAAAC,EAAAC,cAAC0O,EAAD,CACE7Q,QAASA,EACT8D,aAAcA,EACdE,eAAgBA,EAChBC,cAAeA,IAEjBhC,EAAAC,EAAAC,cAACwO,EAAkBlI,MAAnB,CAAyBjE,UAAU,kBAChChB,KAMMsN,EAAsB,SAAAvN,GAAA,IACjCvD,EADiCuD,EACjCvD,QACAK,EAFiCkD,EAEjClD,UACA0Q,EAHiCxN,EAGjCwN,SACAvN,EAJiCD,EAIjCC,SAJiC,OAMjCvB,EAAAC,EAAAC,cAACwO,EAAkB/H,QAAnB,CACEvI,UAAWA,EACXL,QAASA,EACTgR,SAAUD,GAETvN,4hCCtCL,IAAMyN,EAAgBjK,IAAOC,IAAVC,IAGH,SAAAxH,GAAK,OAAKA,EAAMM,QAAUN,EAAMM,QAAU8B,IAAM3B,MAAM4D,SAC3D,SAAArE,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAM6B,QAGrEiP,EAAcxI,MAAQzB,IAAO0B,IAAP1B,CAAtBM,IAOI,SAAA5H,GAAK,OACLA,EAAM6F,OACF,qBAAuBsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAC7D,gBAAkBsC,IAAKC,MAC3B,SAAApI,GAAK,OACLA,EAAM6F,OACF,uBAAyBsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAC/D,MACJ,SAAA7F,GAAK,OACLA,EAAM6F,OACF,wBAA0BsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAChE,mBAAqBsC,IAAKC,MAC9B,SAAApI,GAAK,OACLA,EAAM6F,OACF,sBACAsC,IAAKF,KAAKpC,OAAOoD,KACjB,OACAd,IAAKC,KACL,MACApI,EAAM6F,OAAO,GACb,KACA,OAGR0L,EAAcrI,QAAU5B,IAAO6B,IAAP7B,CAAxB8B,IAQoBjB,IAAKC,KAQKhG,IAAM4F,KAAKqB,MAAMtB,MAAMuB,IAatCiI,QC5CAA,IApBO,SAAAjO,GAAA,IAAGhD,EAAHgD,EAAGhD,QAASU,EAAZsC,EAAYtC,QAAiB6E,GAA7BvC,EAAqBkO,OAArBlO,EAA6BuC,QAA7B,OACpBtD,EAAAC,EAAAC,cAACgP,EAAD,CAAoBnR,QAASA,GAC3BiC,EAAAC,EAAAC,cAACgP,EAAmB1I,MAApB,CAA0BlD,OAAQA,GAChCtD,EAAAC,EAAAC,cAACgP,EAAmBvI,QAApB,CAA4BpE,UAAU,kBAEnC9D,EAAQC,IAAI,SAACkL,EAAQhL,GAEpB,OACEoB,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CACEpF,IAAK7F,EACLE,cAAe8K,EAAO9K,cACtBD,KAAM+K,EAAO/K,KAAO+K,EAAO/K,KAAO,+5DCbhD,IAAMsQ,EAAsBpK,IAAOC,IAAVC,IAGT,SAAAxH,GAAK,OAAKA,EAAMM,QAAUN,EAAMM,QAAU8B,IAAM3B,MAAM4D,SAC3D,SAAArE,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAM6B,QAIrEoP,EAAoB3I,MAAQzB,IAAO0B,IAAP1B,CAA5BM,IAQI,SAAA5H,GAAK,OACLA,EAAM6F,OACF,qBAAuBsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAC7D,gBAAkBsC,IAAKC,MAC3B,SAAApI,GAAK,OACLA,EAAM6F,OACF,uBAAyBsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAC/D,MACJ,SAAA7F,GAAK,OACLA,EAAM6F,OACF,wBAA0BsC,IAAKC,KAAO,MAAQpI,EAAM6F,OAAO,GAAK,IAChE,mBAAqBsC,IAAKC,MAC9B,SAAApI,GAAK,OACLA,EAAM6F,OACF,sBACAsC,IAAKF,KAAKpC,OAAOoD,KACjB,OACAd,IAAKC,KACL,MACApI,EAAM6F,OAAO,GACb,KACA,OAGR6L,EAAoBxI,QAAU5B,IAAOC,IAArC6B,IAKehH,IAAM4F,KAAKC,KAAKC,UAiBb,SAAAlI,GAAK,OAAKA,EAAM2R,QAAU3R,EAAM2R,QAAU,GAC5C,SAAA3R,GAAK,OACjBA,EAAM4R,UACF,SAAWzJ,IAAKC,KAAO,MAAQpI,EAAM4R,UAAY,IACjD,QAAUzJ,IAAKC,KAAO,UAEPJ,IAAKqB,MAAMtB,MAAMuB,GAAK,KAWxBnB,IAAK+H,OAKP/H,IAAKC,KAGXhG,IAAM3B,MAAM6B,MACJ,SAAAtC,GAAK,OACpBA,EAAM4R,UACF,SAAWzJ,IAAKC,KAAO,MAAQpI,EAAM4R,UAAY,IACjD,QAAUzJ,IAAKC,KAAO,UAGJD,IAAKC,KAIlBhG,IAAM3B,MAAM6B,MAIbF,IAAM3B,MAAM6B,MAIH0F,IAAKqB,MAAMtB,MAAMuB,GAAK,KAGxBnB,IAAKC,MAMXsJ,QC5EAG,IAtCQ,SAAAvO,GAAA,IACrBhD,EADqBgD,EACrBhD,QACAiB,EAFqB+B,EAErB/B,MACAZ,EAHqB2C,EAGrB3C,UACA0H,EAJqB/E,EAIrB+E,QACAE,EALqBjF,EAKrBiF,MACAT,EANqBxE,EAMrBwE,OACAgK,EAPqBxO,EAOrBwO,SACApF,EARqBpJ,EAQrBoJ,YACA7G,EATqBvC,EASrBuC,OACA8L,EAVqBrO,EAUrBqO,QACAC,EAXqBtO,EAWrBsO,UACA9N,EAZqBR,EAYrBQ,SAZqB,OAcrBvB,EAAAC,EAAAC,cAACsP,EAAD,CAAqBxQ,MAAOA,EAAOjB,QAASA,EAASK,UAAWA,GAC9D4B,EAAAC,EAAAC,cAACsP,EAAoBhJ,MAArB,CACEX,KAAM0J,EACNhK,OAAQA,EACR4E,YAAaA,EACb7G,OAAQA,GAERtD,EAAAC,EAAAC,cAACsP,EAAoB7I,QAArB,CACEwD,YAAaA,EACb5H,UAAU,kBACV6M,QAASA,EACTC,UAAWA,GAEV9N,GAEFuE,EACC9F,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,eACbvC,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAUC,IAAKL,EAASM,QAASJ,KAEjC,0CCvDVpC,EAAA,GAAAA,EAAA,GAAAA,EAAA,0yCCeO,IAAM6L,EAAmB1K,IAAOC,IAAVC,IAKlB,SAAAxH,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAGjE,SAAA7C,GAAK,OACLA,EAAMmF,OACF,oBAAsBgD,IAAKC,KAAO,MAAQpI,EAAMmF,OAAO,GAAK,IAC5D,MACJ,SAAAnF,GAAK,OACLA,EAAMmF,OACF,sBAAwBgD,IAAKC,KAAO,MAAQpI,EAAMmF,OAAO,GAAK,IAC9D,MACJ,SAAAnF,GAAK,OACLA,EAAMmF,OACF,uBAAyBgD,IAAKC,KAAO,MAAQpI,EAAMmF,OAAO,GAAK,IAC/D,MACJ,SAAAnF,GAAK,OACLA,EAAMmF,OACF,qBAAuBgD,IAAKC,KAAO,MAAQpI,EAAMmF,OAAO,GAAK,IAC7D,MAGK,SAAAnF,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAE9CT,IAAM4F,KAAKI,KAAKkB,GAEnBnB,IAAKC,KACTD,IAAKC,KACJD,IAAKC,KAKAD,IAAKC,KAEHD,IAAKC,KAKhB,SAAApI,GAAK,OACZA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAMpC,SAAA7C,GAAK,OACjBA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,QAmBxDmP,EAAiBnN,MAAQyC,IAAO2K,KAAhCrK,IACW,SAAA5H,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAKzD,SAAA7C,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,QAIvDmP,QC5CA9M,IAlCK,SAAA5B,GAAA,IAAG3C,EAAH2C,EAAG3C,UAAWuD,EAAdZ,EAAcY,SAAUiB,EAAxB7B,EAAwB6B,OAAxB,OAClB5C,EAAAC,EAAAC,cAAC+F,EAAD,CAAkBrD,OAAQA,EAAQxE,UAAWA,GAC3C4B,EAAAC,EAAAC,cAAA,KACE2E,KAAM,yCAA2ClD,EACjDgO,OAAO,SACP1G,IAAI,gCAEJjJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAM1I,KAAK,WAAWpB,MAAOE,KAE/B4B,EAAAC,EAAAC,cAAA,KACE2E,KACE,wCACAlD,EACA,oCAEFgO,OAAO,SACP1G,IAAI,gCAEJjJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAM1I,KAAK,UAAUpB,MAAOE,KAE9B4B,EAAAC,EAAAC,cAAA,KACE2E,KACE,uDACAlD,EACA,uCAEFgO,OAAO,SACP1G,IAAI,gCAEJjJ,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAM1I,KAAK,WAAWpB,MAAOE,uQC7BE2G,IAAOC,IAAVC,KAA3B,ICaD2K,EAAgB,SAAA7O,GAMhB,IALJsC,EAKItC,EALJsC,eACAD,EAIIrC,EAJJqC,UACA7E,EAGIwC,EAHJxC,aAEAiD,GACIT,EAFJ8O,cAEI9O,EADJS,SAKMsO,GAFqBvR,EAAe,IAAMA,EAAe,KACzCiD,EAAU,IAAMA,EAAU,IAIhD,SAASuO,EAAcC,EAAcC,GAEnC,IAAIC,EAAkBF,EAAaG,OACjC,SAAA1D,GAAQ,OAAIA,EAASjI,KAAKhG,OAASyR,IAIrC,OAAIC,EAAgBE,OAAS,GACpBF,EAAgB,GAAG1L,KAM9B,OAEExE,EAAAC,EAAAC,cAAC2N,EAAA,YAAD,CACEwC,MAAK,aA6ELxS,OAAQ,SAAAuG,GACN,IAAMkM,EAAcnM,YAClBC,EAAKC,2BAA2BC,OAG5BiM,EAAeC,YACnBpM,EAAKqM,mBAAmBnM,OAY1B,OACEtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsE,SAAA,KACGgM,EAAa7R,IAAI,SAACgS,EAAU9R,GAC3B,IAAI+R,EAAmBD,EAASlM,KAAKiI,SACjCiE,EAASlM,KAAKiI,SACd,OAOJ,GAAIkE,GAAoBtN,EAAgB,CAEtC,GAAiB,OAAbD,EAAoB,CAEtB,IAAIwN,EAAmBb,EACrBO,EACAjN,GAGF,OACErD,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CACEpQ,QAAS6S,EAAiB3S,UAAUC,MAAMC,WAC1CC,UAAWwS,EAAiB3S,UAAUC,MAAM4D,QAC5C/C,YACE,SAAW+Q,EAAqB,IAAMY,EAASlM,KAAKqM,KAEtDzR,QAASwR,EAAiBtR,KAC1BD,SAAUqR,EAASlM,KAAKsM,MACxBtR,SAAUoR,EAAiBnR,KAC3BF,UAAWqR,EAAiB3S,UAAUC,MAAM4D,QAC5CiE,UACE2K,EAASlM,KAAKuM,YACVL,EAASlM,KAAKuM,WAGpBC,eACEL,EACA,iBACAD,EAASlM,KAAKsM,MAEhBpR,UAAWG,IAAM3B,MAAMoC,MACvBX,YAAa,GACb8E,IAAK7F,IAMT,GAAI8R,EAASlM,KAAK4I,KAAK6D,SAAS7N,EAAU8N,eAAgB,CAExD,IAAIN,EAAmBb,EACrBO,EACAjN,GAGF,OACErD,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CACEpQ,QAAS6S,EAAiB3S,UAAUC,MAAMC,WAC1CC,UAAWwS,EAAiB3S,UAAUC,MAAM4D,QAC5C/C,YACE,SACA+Q,EACA,IACAY,EAASlM,KAAKqM,KAEhBzR,QAASwR,EAAiBtR,KAC1BD,SAAUqR,EAASlM,KAAKsM,MACxBtR,SAAUoR,EAAiBnR,KAC3BF,UAAWqR,EAAiB3S,UAAUC,MAAM4D,QAC5CiE,UACE2K,EAASlM,KAAKuM,YACVL,EAASlM,KAAKuM,WAGpBC,eACEL,EACA,iBACAD,EAASlM,KAAKsM,MAEhBpR,UAAWG,IAAM3B,MAAMoC,MACvBX,YAAa,GACb8E,IAAK7F,IAKT,OAAO,KAMX,GAAsB,OAAlByE,EAAyB,CAE3B,IAAIuN,EAAmBb,EACrBO,EACAK,GAQF,OAAIC,EAEA5Q,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CACEpQ,QAAS6S,EAAiB3S,UAAUC,MAAMC,WAC1CC,UAAWwS,EAAiB3S,UAAUC,MAAM4D,QAC5C/C,YACE,UACA6R,EAAiBpS,KACjB,IACAkS,EAASlM,KAAKqM,KAEhBzR,QAASwR,EAAiBtR,KAC1BD,SAAUqR,EAASlM,KAAKsM,MACxBtR,SAAUoR,EAAiBnR,KAC3BF,UAAWqR,EAAiB3S,UAAUC,MAAM4D,QAC5CiE,UACE2K,EAASlM,KAAKuM,YACVL,EAASlM,KAAKuM,WAGpBC,eACEL,EACA,iBACAD,EAASlM,KAAKsM,MAEhBpR,UAAWG,IAAM3B,MAAMoC,MACvBX,YAAa,GACb8E,IAAK7F,IAKPoB,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CACEpQ,QAAS8B,IAAM3B,MAAMoC,MACrBlC,UAAWyB,IAAM3B,MAAMiT,OACvBpS,YAAa,UAAY2R,EAASlM,KAAKqM,KACvCzR,QAAQ,qBACRC,SAAUqR,EAASlM,KAAKsM,MACxBtR,SAAS,WACTD,UAAWM,IAAM3B,MAAM6B,MACvBgG,UACE2K,EAASlM,KAAKuM,YACVL,EAASlM,KAAKuM,WAGpBC,eAAgB,kBAAoBN,EAASlM,KAAKsM,MAClDpR,UAAWG,IAAM3B,MAAMoC,MACvBX,YAAa,GACb8E,IAAK7F,IAMX,OAAO,SAhQrBwF,KAAAgN,KAoTWjO,IAzCU,SAAA7B,GAAA,IACvBgC,EADuBhC,EACvBgC,OACA/E,EAFuB+C,EAEvB/C,aACAsR,EAHuBvO,EAGvBuO,cACArO,EAJuBF,EAIvBE,QACAzD,EALuBuD,EAKvBvD,QACAsF,EANuB/B,EAMvB+B,eACAD,EAPuB9B,EAOvB8B,UAPuB,OASvBpD,EAAAC,EAAAC,cAACoP,EAAA,EAAD,CACEF,QAAS,EACTC,UAAW,IACXtR,QAASA,GAAoB8B,IAAM3B,MAAM6B,MACzC3B,UAAWyB,IAAM3B,MAAM4B,SACvBwD,OAAQA,GAAkB,CAAC,EAAG,EAAG,EAAG,IAMnCD,EACCrD,EAAAC,EAAAC,cAACmR,EAAD,CACE9S,aAAcA,EACdiD,QAASA,GAAoB,KAC7B6B,eAAgBA,EAChBD,UAAWA,GAAwB,MACnCyM,cAAeA,IAIjB7P,EAAAC,EAAAC,cAACmR,EAAD,CACE9S,aAAcA,EACdiD,QAASA,GAAoB,KAC7B6B,eAAe,MACfD,UAAWA,EACXyM,cAAeA,wFCzVVW,EAA0B,SAAAc,GAErC,OAAIA,EAE6B,GAA3BC,MAAMC,QAAQF,GACEA,EAAS5S,IAAI,SAAC+S,EAAc7S,GAC5C,MAAO,CACL4F,KAAM,CACJkI,GAAI+E,EAAajN,KAAKkI,GAAK+E,EAAajN,KAAKkI,GAAK,GAClDmE,KAAMY,EAAajN,KAAKuI,IAAM0E,EAAajN,KAAKuI,IAAM,GACtD2E,KAAMD,EAAajN,KAAKJ,KAAKsN,KACzBD,EAAajN,KAAKJ,KAAKsN,KACvB,GACJC,OAAQF,EAAajN,KAAKJ,KAAKuN,OAC3BF,EAAajN,KAAKJ,KAAKuN,OAAOC,SAAS,GAAGxN,KAAKuI,KAAKC,KACpD,cACJmE,aAAYU,EAAajN,KAAKJ,KAAKyN,YAAYC,WAC3CL,EAAajN,KAAKJ,KAAKyN,YAAYC,UAAUC,gBAAgBC,MAEjElB,MAAOW,EAAajN,KAAKJ,KAAK0M,MAAMlE,KAChC6E,EAAajN,KAAKJ,KAAK0M,MAAMlE,KAC7B,GACJH,SAAUgF,EAAajN,KAAKJ,KAAKqI,SAC7BgF,EAAajN,KAAKJ,KAAKqI,SAASM,IAChC,GACJK,KAAMqE,EAAajN,KAAK4I,KAAOqE,EAAajN,KAAK4I,KAAO,GACxD6E,YAAaR,EAAajN,KAAKJ,KAAK8N,aAChCT,EAAajN,KAAKJ,KAAK8N,aACvB,GACJC,WAAYV,EAAajN,KAAKJ,KAAKgO,YAC/BX,EAAajN,KAAKJ,KAAKgO,YACvB,OAWQ,CAChB1F,GAAI4E,EAAS5E,GAAK4E,EAAS5E,GAAK,GAChCmE,KAAMS,EAASvE,IAAMuE,EAASvE,IAAM,GACpC2E,KAAMJ,EAASlN,KAAKsN,KAAOJ,EAASlN,KAAKsN,KAAO,GAChDC,OAAQL,EAASlN,KAAKuN,OAClBL,EAASlN,KAAKuN,OAAOC,SAAS,GAAGxN,KAAKuI,KAAKC,KAC3C,cACJmE,aAAYO,EAASlN,KAAKyN,YAAYC,WAClCR,EAASlN,KAAKyN,YAAYC,UAAUC,gBAAgBC,MAExDlB,MAAOQ,EAASlN,KAAK0M,MAAMlE,KAAO0E,EAASlN,KAAK0M,MAAMlE,KAAO,GAC7DH,SAAU6E,EAASlN,KAAKqI,SAAW6E,EAASlN,KAAKqI,SAASM,IAAM,GAChEK,KAAMkE,EAASlE,KAAOkE,EAASlE,KAAO,GACtC6E,YAAaX,EAASlN,KAAK8N,aACvBZ,EAASlN,KAAK8N,aACd,GACJC,WAAYb,EAASlN,KAAKgO,YAAcd,EAASlN,KAAKgO,YAAc,IASjE,kouEClEJ,IAAMC,EAAiBtN,IAAOC,IAAVC,IACLW,IAAKC,KACFD,IAAKC,KACPD,IAAKF,KAAKpC,OAAOoD,KACxB,SAAAjJ,GAAK,OAAKA,EAAMM,QAAUN,EAAMM,QAAU8B,IAAM3B,MAAM6B,OAC3D,SAAAtC,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OAGxD,SAAA7C,GAAK,OAAKA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,QAIvE+R,EAAe7L,MAAQzB,IAAO6B,IAAP7B,CAAvBM,IAYoBO,IAAKC,KAAaD,IAAKC,KAOjBD,IAAK0M,kBAIL1M,IAAK0M,kBAYX,SAAA7U,GAAK,OACjBA,EAAMW,UAAYX,EAAMW,UAAYyB,IAAM3B,MAAMoC,OASlCsF,IAAKC,KAcNhG,IAAM3B,MAAM4D,SAQlBuQ,IC3DTE,EAAmB,WAEvB,SAASC,EAAgBpO,GACvB,IAAIqO,EAAcrO,EAAK1F,IAAI,SAAC+N,EAAU7N,GACpC,MAAO,CACLC,KAAM,EACNC,cAAe,CACb,CACEC,YAAa,UAAY0N,EAASjI,KAAKhG,KACvCQ,MAAO,UACPC,KAAM,CACJC,QAAS,CACPnB,QAAS0O,EAASjI,KAAKvG,UAAUC,MAAMC,WACvCgB,QAAS,GACTC,QAAS,GACTC,SAAUoN,EAASjI,KAAKlF,KACxBlB,UAAWqO,EAASjI,KAAKvG,UAAUC,MAAM4D,QACzCvC,UAAWkN,EAASjI,KAAKvG,UAAUC,MAAM4D,QACzCtC,SAAUiN,EAASjI,KAAK/E,KACxBC,UAAW,GACXC,YAAa,GACbC,SAAU,UASlB8S,EAAU,CACZ7T,KAAM,EACNC,cAAe,CACb,CACEC,YAAa,aACbC,MAAO,UACPC,KAAM,CACJC,QAAS,CACPnB,QAAS8B,IAAM3B,MAAM4B,SACrBX,QAAS,GACTC,QAAS,GACTC,SAAU,iBACVjB,UAAWyB,IAAM3B,MAAM6B,MACvBR,UAAWM,IAAM3B,MAAM6B,MACvBP,SAAU,WACVE,UAAW,GACXC,YAAa,GACbC,SAAU,QAWpB,OAHA6S,EAAYE,QAAQD,GAGbD,EAIT,OACEzS,EAAAC,EAAAC,cAAC2N,EAAA,YAAD,CACEwC,MAAK,aA4BLxS,OAAQ,SAAAuG,GACN,IAAMkM,EAAcnM,YAClBC,EAAKC,2BAA2BC,OAGlC,OACEtE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE1B,QAAS+T,EAAgBlC,GACzBlQ,YAAa,EACbC,OAAO,oBACPiD,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBzD,MAAO,CACLzB,UAAWyB,IAAM3B,MAAM0U,MACvB7U,QAAS,QAEXwC,eAAgB,CACdC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,QAAQ,MAhDlByD,KAAAyO,KAiGWhQ,IAvCQ,SAAA9B,GAAA,IAAGsC,EAAHtC,EAAGsC,eAAgBD,EAAnBrC,EAAmBqC,UAAW0P,EAA9B/R,EAA8B+R,eAA9B,OACrB9S,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsE,SAAA,KAGEvE,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CACErM,QAAS8B,IAAM3B,MAAM6B,MACrB3B,UAAWyB,IAAM3B,MAAM4B,SACvBd,MAAM,YAENgB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOjC,MAAM,WAAWmC,QAAS,CAAC,EAAG,EAAG,EAAG,GAAID,SAAU,IACvDlB,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,KAAGqC,UAAU,QAAb,uDAGAvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEC,UAAU,WACVH,MAAM,iBACNvE,QAAS8B,IAAM3B,MAAM4D,QACrB1D,UAAWyB,IAAM3B,MAAM6B,MACvBhB,YAAY,aACZ2D,aAAa,WAOlBoQ,EAAiB,KAAO9S,EAAAC,EAAAC,cAAC6S,EAAD,MAMzB/S,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAkBC,UAAWA,EAAWC,eAAgBA","file":"component---src-templates-learn-tag-index-js-6e7a6ae9e62a746d2808.js","sourcesContent":["// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n    let WidgetCount = 0; // This is to add an 'All' Widget.\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={'More from ' + this.props.Data.Name}\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ BaseUrl, Category }) => {\n  return (\n    <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n      <SlideSectionWithData BaseUrl={BaseUrl} Data={Category} />\n    </Block>\n  );\n};\n\n// PageWrapper component for page theming.\nconst PageWrapper = ({\n  children,\n  TagSlug,\n  TagData,\n  CategorySlug,\n  Category,\n  CategoryTheme,\n  Location,\n}) => {\n  return (\n    <Layout\n      BgColor={CategoryTheme.Color.Background}\n      PrimaryColor={CategoryTheme.Color.Primary}\n      SecondaryColor={CategoryTheme.Color.Secondary}\n      TertiaryColor={CategoryTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={CategoryTheme.Color.Background}\n        PrimaryColor={CategoryTheme.Color.Primary}\n        SecondaryColor={CategoryTheme.Color.Secondary}\n        TertiaryColor={CategoryTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero TextColor={CategoryTheme.Color.Secondary}>\n          <Block maxWidth={0.75}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: 'learn/' + CategorySlug,\n                  Label: Category.Name + ' Cannabis Questions',\n                },\n                {\n                  Destination: 'learn/' + CategorySlug + '/' + TagSlug,\n                  Label: TagData.Name,\n                },\n              ]}\n              TextColor={CategoryTheme.Color.Secondary}\n            />\n            <h1 className=\"h2\">\n              Learn about Cannabis, {Category.Name}, & {TagData.Name}.{' '}\n            </h1>\n            <Btn\n              IconClass=\"intercom\"\n              Label=\"Ask a question\"\n              BgColor={CategoryTheme.Color.Tertiary}\n              TextColor={CategoryTheme.Color.Primary}\n              Destination=\"/learn/all\"\n              IconPosition=\"left\"\n            />\n            <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={CategoryTheme.Color.Secondary}\n            />\n          </Block>\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.White}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n\n        {/* The Question / Category / Tag footer. */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          <QuestionFooter />\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* ///////////// */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({\n  TagSlug,\n  TagData,\n  CategorySlug,\n  CategoryData,\n  Location,\n  CategoryName,\n}) => {\n  return (\n    <PageWrapper\n      CategoryTheme={CategoryData.PageTheme}\n      Category={CategoryData}\n      CategorySlug={CategorySlug}\n      TagSlug={TagSlug}\n      TagData={TagData}\n      Location={Location}\n    >\n      <QuestionListings\n        CategorySlug={CategorySlug}\n        TagSlug={TagData.Slug}\n        TagFilter={TagData.Name}\n        CategoryFilter={CategoryName}\n        Gutter={[1, 1, 1, 1]}\n        BgColor={Theme.Color.Snow}\n      />\n      <LearnSection BaseUrl=\"/learn\" Category={CategoryData} />\n    </PageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LearnTagTemplate = ({\n  TagSlug,\n  TagData,\n  CategorySlug,\n  CategoryData,\n  CategoryName,\n  Location,\n}) => {\n  return (\n    <TemplateLayout\n      TagSlug={TagSlug}\n      TagData={TagData}\n      CategoryName={CategoryName}\n      CategorySlug={CategorySlug}\n      CategoryData={CategoryData}\n      Location={Location}\n    />\n  );\n};\n\nexport default LearnTagTemplate;\n","// learn/all.js:\n// This is the overview of all Learn items.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LearnTagTemplate from './layout';\n\n// Transformers\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LearnTagPage = props => {\n  // Define our Slugs\n  let CategorySlug = props.pageContext.CategorySlug;\n  let TagSlug = props.pageContext.TagSlug;\n  let TransformedCategories = categoryDataTransformer(\n    props.data.allPrismicQuestionCategory.edges\n  );\n\n  // Define our Data Objects\n  let CategoryData = {};\n  let TagData = {};\n\n  return (\n    <>\n      {TransformedCategories.map((Category, index) => {\n        // If Category's slug matches this page's context CategorySlug that\n        // we specified in gatsby-node.js:\n        if (Category.node.Slug == CategorySlug) {\n          // Define our correct Data Category Object\n          let CategoryData = Category.node;\n          let CategoryName = Category.node.Name;\n\n          // Then let's map that Category's tags.\n          return (\n            <div key={index}>\n              {Category.node.Tags.map((Tag, i) => {\n                // If the tag slug matches this page's context TagSlug\n                // that we specified in gatsby-node.js.\n                if (Tag.Slug == props.pageContext.TagSlug) {\n                  // Define our correct Data Tag Object\n                  let TagData = Tag;\n\n                  return (\n                    <LearnTagTemplate\n                      key={i}\n                      TagSlug={Tag.Slug}\n                      TagData={TagData}\n                      CategoryName={CategoryName}\n                      CategorySlug={CategorySlug}\n                      CategoryData={CategoryData}\n                      Location={props.location.href}\n                    />\n                  );\n                }\n              })}\n            </div>\n          );\n        }\n      })}\n    </>\n  );\n};\n\nexport default LearnTagPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const tagQuery = graphql`\n  query {\n    allPrismicQuestionCategory {\n      edges {\n        node {\n          id\n          uid\n          data {\n            name {\n              text\n            }\n            icon\n            headline\n            color_background\n            color_primary\n            color_secondary\n            color_tertiary\n            tags {\n              tag_name\n              tag_slug\n              tag_icon\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size}) calc(${Root.Size} / 4);\n      height: ${props =>\n        props.SectionSize\n          ? 'calc((' + Root.Size + '* 3) * ' + props.SectionSize + ')'\n          : 'calc((' + Root.Size + '* 3) * 3)'};\n    }\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Md + 'px',\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible !important; \n      overflow: visible;\n      \n      .wrapper {\n        overflow-y: hidden;\n      }\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden; \n      overflow-y: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden;\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n    .img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: ${props =>\n    props.JustifyContent ? props.JustifyContent : 'flex-start'};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  JustifyContent,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      JustifyContent={JustifyContent}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: calc((${Theme.Base.Size.Sm}) * -1);\n      transform: translateY(-50%);\n      width: 2px;\n      height: 2px;\n      border-radius: 50%;\n      background-color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    svg {\n      transform: rotate(180deg) translateX(0%);\n      transform-origin: center center;\n      width: 1rem;\n      height: 1rem;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n      transition: all 0.25s ease;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    }\n\n    &:hover {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      text-decoration: none;\n      svg {\n        transform: rotate(180deg) translateX(50%);\n      }\n    }\n  }\n`;\n\nBreadCrumb.Label = styled(Link)`\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm} * 1.75);\n  position: relative;\n  text-transform: capitalize;\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle TextColor={TextColor}>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n  JustifyContent,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle\n      className=\"hero-content\"\n      JustifyContent={JustifyContent}\n      Flex={Flex}\n    >\n      {children}\n    </HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { node } from 'prop-types';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Categories Map\nexport const tagDataTransformer = tags => {\n  if (tags) {\n    let tagsMap = tags.map((tag, index) => {\n      return {\n        Name: tag.tag_name,\n        Icon: tag.tag_icon,\n        Slug: tag.tag_slug,\n      };\n    });\n\n    return tagsMap;\n  } else {\n    return null;\n  }\n};\n\n// Function to create our Categories Map\nexport const categoryDataTransformer = categories => {\n  if (categories) {\n    let categoriesMap = categories.map((category, index) => {\n      return {\n        node: {\n          id: category.node.id,\n          Name: category.node.data.name ? category.node.data.name.text : '',\n          Icon: category.node.data.icon,\n          Headline: category.node.data.headline,\n          Slug: category.node.uid,\n          Breadcrumb: {\n            Destination: '/learn/all/',\n            Label: 'All Questions',\n          },\n          PageTheme: {\n            Color: {\n              Background: category.node.data.color_background,\n              Primary: category.node.data.color_primary,\n              Secondary: category.node.data.color_secondary,\n              Tertiary: category.node.data.color_tertiary,\n            },\n          },\n          Tags: tagDataTransformer(category.node.data.tags),\n        },\n      };\n    });\n\n    return categoriesMap;\n  } else {\n    return 'null';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n\n  .post-details  {\n    opacity: .4;\n    display: block;\n    margin-bottom: calc(${Root.Size} / 4);\n  }\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  /* -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000; */\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  /* column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    column-width: 100%;\n    column-count: 1;\n  } */\n\n\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    flex: 30%;\n    margin: calc(${Root.Size} / 5);\n    width: 30%;\n    display: flex;\n    color: ${Theme.Color.White};\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n\n    a, i {\n      color: ${Theme.Color.White};\n    }\n    \n    svg {\n      fill: ${Theme.Color.White};\n    }\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    .widget-content {\n      flex: auto;\n      margin: calc(${Root.Size} / 5) 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SpecialsListings> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SpecialsListingsStyle = styled.div`\n  appearance: none;\n`;\n\nexport default SpecialsListingsStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Transformers\nimport { questionDataTransformer } from 'templates/Question/Transformer';\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Slug === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory.length > 0) {\n      return matchedCategory[0].node;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n\n          ## Prismic Sourcing\n\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n\n          allPrismicQuestion {\n            edges {\n              node {\n                id\n                uid\n                tags\n                data {\n                  title {\n                    text\n                  }\n                  short_answer\n                  long_answer\n                  date\n                  author {\n                    id\n                    document {\n                      id\n                      ... on PrismicPerson {\n                        data {\n                          name {\n                            html\n                            text\n                          }\n                        }\n                      }\n                    }\n                  }\n                  category {\n                    uid\n                  }\n                  cover_image {\n                    alt\n                    localFile {\n                      id\n                      childImageSharp {\n                        fluid(maxWidth: 1200) {\n                          ...GatsbyImageSharpFluid\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        const questionsMap = questionDataTransformer(\n          data.allPrismicQuestion.edges\n        );\n\n        // console.log('categoryMap');\n        // console.log(categoryMap);\n\n        // console.log('questionsMap');\n        // console.log(questionsMap);\n\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        return (\n          <>\n            {questionsMap.map((Question, index) => {\n              let QuestionCategory = Question.node.category\n                ? Question.node.category\n                : 'none';\n\n              // console.log('QuestionCategory');\n              // console.log(QuestionCategory);\n\n              // return <h1>Masonry</h1>;\n              // If the Question's Category is the same as the Filter supplied:\n              if (QuestionCategory == CategoryFilter) {\n                // If there isn't a TagFilter applied:\n                if (TagFilter == 'all') {\n                  // Use our helper function above to find the right Category's Data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    CategoryFilter\n                  );\n\n                  return (\n                    <DefaultWidget\n                      BgColor={filteredCategory.PageTheme.Color.Background}\n                      TextColor={filteredCategory.PageTheme.Color.Primary}\n                      Destination={\n                        '/learn' + QuestionSlugString + '/' + Question.node.slug\n                      }\n                      Subhead={filteredCategory.Name}\n                      Headline={Question.node.title}\n                      IconName={filteredCategory.Icon}\n                      IconColor={filteredCategory.PageTheme.Color.Primary}\n                      BgQuery={\n                        Question.node.coverImage\n                          ? Question.node.coverImage\n                          : false\n                      }\n                      BgImageAltText={\n                        QuestionCategory +\n                        ' & Cannabis | ' +\n                        Question.node.title\n                      }\n                      TintColor={Theme.Color.Black}\n                      TintOpacity={0.6}\n                      key={index}\n                    />\n                  );\n                } else {\n                  // If there is a TagFilter applied, check the Tags Array\n                  // to see if it includes our filter:\n                  if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                    // Use our helper function above to find the right Category's Data.\n                    let filteredCategory = categoryMatch(\n                      categoryMap,\n                      CategoryFilter\n                    );\n\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn' +\n                          QuestionSlugString +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    // If it doesn't match anything, return false. And cry.\n                    return null;\n                  }\n                }\n              } else {\n                // If we want to display all the Questions, let's make their\n                // slug their root category.\n                if (CategoryFilter == 'all') {\n                  // Use our helper function to match the Category data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    QuestionCategory\n                  );\n\n                  // console.log('all filteredCategory');\n                  // console.log(filteredCategory);\n                  // console.log('Question');\n                  // console.log(Question);\n\n                  if (filteredCategory) {\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn/' +\n                          filteredCategory.Slug +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    return (\n                      <DefaultWidget\n                        BgColor={Theme.Color.Black}\n                        TextColor={Theme.Color.Whitee}\n                        Destination={'/learn/' + Question.node.slug}\n                        Subhead=\"Cannabis Questions\"\n                        Headline={Question.node.title}\n                        IconName=\"question\"\n                        IconColor={Theme.Color.White}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={'Cannabis Q&A | ' + Question.node.title}\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  }\n                } else {\n                  // If nothing is supplied, don't return anything. Also, cry.\n                  return null;\n                }\n              }\n            })}\n          </>\n        );\n      }}\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {/* {console.log('CategoryFilter Passed:')}\n    {console.log(CategoryFilter)} */}\n\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Columns Map\nexport const questionDataTransformer = question => {\n  // Check if it's empty first:\n  if (question) {\n    // If the question data is an array:\n    if (Array.isArray(question) == true) {\n      let questionMap = question.map((questionPost, index) => {\n        return {\n          node: {\n            id: questionPost.node.id ? questionPost.node.id : '',\n            slug: questionPost.node.uid ? questionPost.node.uid : '',\n            date: questionPost.node.data.date\n              ? questionPost.node.data.date\n              : '',\n            author: questionPost.node.data.author\n              ? questionPost.node.data.author.document[0].data.name.text\n              : 'Sierra Well',\n            coverImage: questionPost.node.data.cover_image.localFile\n              ? questionPost.node.data.cover_image.localFile.childImageSharp.fluid\n              : false,\n            title: questionPost.node.data.title.text\n              ? questionPost.node.data.title.text\n              : '',\n            category: questionPost.node.data.category\n              ? questionPost.node.data.category.uid\n              : '',\n            tags: questionPost.node.tags ? questionPost.node.tags : '',\n            shortAnswer: questionPost.node.data.short_answer\n              ? questionPost.node.data.short_answer\n              : '',\n            longAnswer: questionPost.node.data.long_answer\n              ? questionPost.node.data.long_answer\n              : '',\n          },\n        };\n        // return console.log(questionPost)\n      });\n\n      return questionMap;\n    }\n\n    // If it's not an array:\n    else {\n      let questionMap = {\n        id: question.id ? question.id : '',\n        slug: question.uid ? question.uid : '',\n        date: question.data.date ? question.data.date : '',\n        author: question.data.author\n          ? question.data.author.document[0].data.name.text\n          : 'Sierra Well',\n        coverImage: question.data.cover_image.localFile\n          ? question.data.cover_image.localFile.childImageSharp.fluid\n          : false,\n        title: question.data.title.text ? question.data.title.text : '',\n        category: question.data.category ? question.data.category.uid : '',\n        tags: question.tags ? question.tags : '',\n        shortAnswer: question.data.short_answer\n          ? question.data.short_answer\n          : '',\n        longAnswer: question.data.long_answer ? question.data.long_answer : '',\n      };\n\n      return questionMap;\n    }\n  }\n\n  // If the question data doesn't exist\n  else {\n    return 'No data supplied.';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Transformers\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        return (\n          <SlideSection\n            Widgets={categoryWidgets(categoryMap)}\n            SectionSize={6}\n            Header=\"Browse Categories\"\n            Gutter={[0, 1, 1, 1]}\n            Theme={{\n              TextColor: Theme.Color.Slate,\n              BgColor: 'none',\n            }}\n            SliderSettings={{\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              autoplay: false,\n              arrows: true,\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}