{"version":3,"sources":["webpack:///./src/components/library/PageTabs/styles.scss.js","webpack:///./src/components/library/PageTabs/index.js","webpack:///./src/templates/Location/Components/LocationPageWrapper/index.js","webpack:///./src/templates/Location/Landing/layout.js","webpack:///./src/templates/Location/Landing/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/helpers/hexToRGB.js","webpack:///./src/components/library/SimpleList/styles.scss.js","webpack:///./src/components/library/SimpleList/index.js","webpack:///./src/components/library/AwardBadge/styles.scss.js","webpack:///./src/components/library/AwardBadge/index.js","webpack:///./src/components/library/AwardHours/styles.scss.js","webpack:///./src/components/library/AwardHours/index.js","webpack:///./src/components/library/Section/StickyScrollSection/styles.scss.js","webpack:///./src/components/library/Section/StickyScrollSection/index.js","webpack:///./src/components/library/SuggestionList/styles.scss.js","webpack:///./src/components/library/SuggestionList/index.js"],"names":["PageTabsStyle","styled","div","_templateObject","Root","Size","props","GradientColor","hexToRGB","Padding","Button","PageTabs","_ref","List","Location","Label","BaseUrl","TextColor","Affix","react_default","a","createElement","styles_scss","className","map","item","index","destination","currentLocation","DestinationPath","slug","LocationPathWithSlash","pathname","key","Btn","AddClass","slice","BgColor","name","Destination","LocationPageWrapper","children","LocationData","Headline","LocationTheme","about","PageTheme","Layout","Color","Background","PrimaryColor","Primary","SecondaryColor","Secondary","TertiaryColor","Tertiary","SubLevelPage","SimpleHero","Flex","Block","maxWidth","headline","IconClass","geography","state","toLowerCase","IconPosition","IconFas","contactDetails","location","address","meta","maps","External","AwardHours","Hours","Data","library_PageTabs","Tint","TintBorder","SuggestionList","nearby","Theme","Nightsky","TemplateLayout","SummaryHeadlineString","SummaryHeadline","summary","Components_LocationPageWrapper","SimpleSection","Snow","BgMatch","BgAlt","FluidHeight","Gutter","StickyScrollSection","White","Content","Subheadline","Body","body","Gallery","gallery","SplitSection","Width","Style","WidgetSection","Widgets","WidgetContent","Meta","Generic","BgImage","Subhead","IconColor","IconName","TintColor","TintOpacity","IconSize","Tahoe","Mint","LocationLandingTemplate","_ref2","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","query","LocationLandingPage","layout","data","allLocationsJson","edges","node","BlockStyle","flex","AlignItems","css","_templateObject2","JustifyContent","BgTint","Base","Grid","SiteWidth","BgQuery","ImgMatch","src","AltText","ImgQuery","SlideSectionStyle","Sm","Black","Inner","SectionInnerStyle","Left","SectionContentStyle","_templateObject3","SectionSize","Media","Md","SectionHeader","_templateObject4","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","responsive","breakpoint","Fragment","Helmet","rel","type","href","lib_default","ref","h","slider","React","Component","SlideSection","Header","Icon","ViewAll","SlideSection_styles_scss","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","WrapperLock","createGlobalStyle","WrapperRelease","SimpleSectionStyle","Right","SimpleSection_styles_scss","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SimpleHeroStyle","Nav","Hero","BreadCrumb","Link","Bread","Crumbs","crumb","to","SidebarWidgetStyle","FadeIn","Radius","i","SidebarWidget","gatsby_browser_entry","SidebarStyle","styles_scss_templateObject","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","Slider","WidgetSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","SocialStripStyle","Margin","span","SocialStrip","target","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","allQuestionCategoriesJson","title","BgImageFile","coverImage","BgImageAltText","tags","includes","Slug","_234893462","QuestionListings","QuestionListings_QuestionCards","BrowseCategories","categoryWidgets","widgetArray","viewAll","unshift","Slate","_4273665236","QuestionFooter","HideCategories","QuestionFooter_BrowseCategories","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","SplitSectionStyle","Site","SplitSection_styles_scss","hex","alpha","r","parseInt","g","b","SimpleListStyle","ul","Item","li","SimpleList","AwardBadgeStyle","Text","AwardHoursStyle","AwardHours_styles_scss","AwardBadge","Logo","StickyScrollSectionStyle","ReleaseOverflow","StickyScrollSection_templateObject","GalleryQueries","StickyScrollSection_styles_scss","Img","Src","Alt","Fluid","SuggestionListStyle"],"mappings":"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","file":"component---src-templates-location-landing-index-js-4e642132086299873ef6.js","sourcesContent":["// <PageTabsStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const PageTabsStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size});\n      font-size: 1.5rem;\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.8rem;\n          font-weight: normal;\n          padding: 0;\n          box-shadow: none;\n          opacity: 0.6;\n\n          &:hover {\n            box-shadow: none;\n            opacity: 1;\n          }\n        }\n\n        &.active {\n          .btn-inner {\n            font-weight: bold;\n            opacity: 1;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTabsStyle;\n//////////////////////////////////////////////////////////////////////\n","// PageTabs Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport PageTabsStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst PageTabs = ({\n  List,\n  Label,\n  Location,\n  BaseUrl,\n  TextColor,\n  Padding,\n  Affix,\n}) => {\n  return (\n    <PageTabsStyle className=\"page-tabs\" Padding={Padding}>\n      <ul>\n        {List.map((item, index) => {\n          // Creating slugs.\n          const DestinationPath = Affix\n            ? BaseUrl + item.slug + Affix\n            : BaseUrl + item.slug;\n          const LocationPath = Location.pathname;\n          const LocationPathWithSlash = Location.pathname + '/';\n\n          // Helper function to match our locations.\n          function matchPath(destination, currentLocation) {\n            // If location & destination match:\n            if (destination == currentLocation) {\n              let className = 'active';\n              return className;\n            } else {\n              // Check and see if our destination matches without the\n              // last `/` of the url. I.e. `locations/reno vs locations/reno/`\n              if (destination == currentLocation.slice(0, -1)) {\n                let className = 'active';\n                return className;\n              } else {\n                // Then inactive:\n                let className = 'inactive';\n                return 'inactive';\n              }\n            }\n          }\n\n          // Return PageTabs.\n          return (\n            <li key={index}>\n              <Btn\n                AddClass={matchPath(DestinationPath, LocationPathWithSlash)}\n                BgColor=\"none\"\n                Label={item.name}\n                Destination={DestinationPath}\n                TextColor={TextColor}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </PageTabsStyle>\n  );\n};\n\nexport default PageTabs;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport AwardHours from 'components/library/AwardHours';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\nimport PageTabs from 'components/library/PageTabs';\nimport SimpleList from 'components/library/SimpleList';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// LocationPageWrapper component for page theming.\nconst LocationPageWrapper = ({\n  children,\n  Headline,\n  LocationData,\n  Location,\n}) => {\n  const LocationTheme = LocationData.about.PageTheme;\n\n  return (\n    <Layout\n      BgColor={LocationTheme.Color.Background}\n      PrimaryColor={LocationTheme.Color.Primary}\n      SecondaryColor={LocationTheme.Color.Secondary}\n      TertiaryColor={LocationTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={LocationTheme.Color.Background}\n        PrimaryColor={LocationTheme.Color.Primary}\n        SecondaryColor={LocationTheme.Color.Secondary}\n        TertiaryColor={LocationTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[2, 0, 1.45, 0]}\n          Flex=\"row\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <Block maxWidth={0.5}>\n            {/* <Bread\n              Crumbs={[\n                {\n                  Destination: 'locations/',\n                  Label: 'Locations',\n                },\n                {\n                  Destination: 'locations/',\n                  Label: LocationData.geography.state,\n                },\n                {\n                  Destination:\n                    'locations/' +\n                    LocationData.geography.state.toLowerCase() +\n                    '/' +\n                    LocationData.slug,\n                  Label: LocationData.name,\n                },\n              ]}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n            <h1 className=\"h2\">{LocationData.about.headline}</h1>\n            <Btn\n              IconClass=\"plus\"\n              Label=\"View Menu\"\n              BgColor={LocationTheme.Color.Primary}\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={\n                '/menu/' +\n                LocationData.geography.state.toLowerCase() +\n                '/' +\n                LocationData.slug\n              }\n              IconPosition=\"left\"\n              IconFas\n            />\n            <Btn\n              AddClass=\"btn-secondary\"\n              IconClass=\"map-marker-alt\"\n              Label={LocationData.contactDetails.location.address}\n              BgColor=\"none\"\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={LocationData.meta.maps}\n              IconPosition=\"left\"\n              External\n              IconFas\n            />\n            {/* <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n          </Block>\n          <Block Flex=\"row\" maxWidth={0.5}>\n            <AwardHours\n              TextColor={LocationTheme.Color.Primary}\n              Hours={[\n                { Label: 'Mon - Sat', Data: '9am - 9pm' },\n                { Label: 'Sunday', Data: '10am - 6pm' },\n              ]}\n            />\n          </Block>\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <PageTabs\n            Location={Location}\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={[\n              { name: 'About', slug: '' },\n              { name: 'Specials', slug: 'specials' },\n              { name: 'Menu', slug: 'menu' },\n            ]}\n            TextColor={LocationTheme.Color.Primary}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n          Tint={0}\n          TintBorder\n        >\n          <SuggestionList\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={LocationData.nearby}\n            Affix=\"/menu\"\n            Label=\"Nearby\"\n            TextColor={LocationTheme.Color.Primary}\n            GradientColor={LocationTheme.Color.Background}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        {/* Begin page content. */}\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\nexport default LocationPageWrapper;\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SplitSection from 'components/library/Section/SplitSection';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport StickyScrollSection from 'components/library/Section/StickyScrollSection';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Block from 'components/library/Block';\nimport Btn from 'components/library/Btn';\n\n// Template Specific Components\nimport LocationPageWrapper from '../Components/LocationPageWrapper';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({ LocationData, Location, Headline }) => {\n  // Build our automatic summary headline.\n  let SummaryHeadlineString =\n    LocationData.name +\n    // eslint-disable-next-line\n    \"'s leading cannabis dispensary — where humans come first.\";\n\n  // Check if a headline exists. If it does, display it. If it doesn't, use SummaryHeadlineString.\n  let SummaryHeadline =\n    LocationData.about.summary.headline != ''\n      ? LocationData.about.summary.headline\n      : SummaryHeadlineString;\n\n  return (\n    <LocationPageWrapper\n      Headline={Headline}\n      LocationData={LocationData}\n      Location={Location}\n    >\n      {/* ///////////// */}\n\n      <SimpleSection\n        BgColor={Theme.Color.Snow}\n        BgMatch=\"placeholder_bg_4.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        FluidHeight={true}\n        Gutter={[0, 0, 0, 0]}\n      />\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n\n      <StickyScrollSection\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n        Content={{\n          Subheadline: 'Sierra Well ' + LocationData.name,\n          Headline: SummaryHeadline,\n          Body: LocationData.about.summary.body,\n        }}\n        Gallery={LocationData.about.summary.gallery}\n      />\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n\n      <SplitSection Flex=\"row-reverse\">\n        <Block\n          Padding={[1, 1, 1, 1]}\n          Width={0.5}\n          BgColor={Theme.Color.Nightsky}\n          TextColor={Theme.Color.White}\n        >\n          <h2>From Seed to Soul.</h2>\n          <Btn\n            Label=\"Our Values\"\n            Destination=\"/company\"\n            BgColor={Theme.Color.Primary}\n            TextColor={Theme.Color.White}\n          />\n        </Block>\n\n        <Block\n          Style=\"centered\"\n          BgColor={Theme.Color.White}\n          BgMatch=\"placeholder_bg_4.jpg\"\n          BgAlt=\"Our Awesome Alt Tag\"\n          Width={0.5}\n        />\n      </SplitSection>\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n\n      <WidgetSection\n        BgColor={Theme.Color.White}\n        Widgets={[\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/menu',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Nightsky,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Menu',\n                    TextColor: Theme.Color.White,\n                    IconColor: Theme.Color.Primary,\n                    IconName: 'plus', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/locations',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Tahoe,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Locations',\n                    TextColor: Theme.Color.White,\n                    IconColor: Theme.Color.White,\n                    IconName: 'map-marker-alt', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/learn',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Mint,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Q&A',\n                    TextColor: Theme.Color.Nightsky,\n                    IconColor: Theme.Color.Nightsky,\n                    IconName: 'book-open', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/specials',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Primary,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Specials',\n                    TextColor: Theme.Color.White,\n                    IconColor: Theme.Color.White,\n                    IconName: 'star', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n        ]}\n      />\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n    </LocationPageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LocationLandingTemplate = ({ LocationData, Location }) => {\n  return <TemplateLayout LocationData={LocationData} Location={Location} />;\n};\n\nexport default LocationLandingTemplate;\n","// templates/Location/Landing/index.js:\n// This is the Location Landing page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LocationLandingTemplate from './layout';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationLandingPage = props => {\n  return (\n    <LocationLandingTemplate\n      LocationData={props.data.allLocationsJson.edges[0].node}\n      Location={props.location}\n      Headline={props.data.allLocationsJson.edges[0].node.about.headline}\n    />\n  );\n};\n\nexport default LocationLandingPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n//\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const query = graphql`\n  query($Slug: String!) {\n    allLocationsJson(filter: { slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          slug\n          name\n          geography {\n            city\n            state\n            country\n          }\n          status {\n            delivery\n            store\n          }\n          meta {\n            reserveSpot\n            menu\n            maps\n          }\n          contactDetails {\n            phone\n            location {\n              address\n              state\n            }\n            hours {\n              days\n              startTime\n              endTime\n            }\n          }\n          nearby {\n            name\n            slug\n          }\n          about {\n            headline\n            PageTheme {\n              Color {\n                Background\n                Primary\n                Secondary\n                Tertiary\n              }\n            }\n            summary {\n              headline\n              body\n              gallery {\n                Src\n                Alt\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size}) calc(${Root.Size} / 4);\n      height: ${props =>\n        props.SectionSize\n          ? 'calc((' + Root.Size + '* 3) * ' + props.SectionSize + ')'\n          : 'calc((' + Root.Size + '* 3) * 3)'};\n    }\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Md + 'px',\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible !important; \n      overflow: visible;\n      \n      .wrapper {\n        overflow-y: hidden;\n      }\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden; \n      overflow-y: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden;\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n    .img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: ${props => (props.JustifyContent ? props.JustifyContent : 'flex-start')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n  JustifyContent,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle\n      className=\"hero-content\"\n      JustifyContent={JustifyContent}\n      Flex={Flex}\n    >\n      {children}\n    </HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  JustifyContent,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      JustifyContent={JustifyContent}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    column-width: 100%;\n    column-count: 1;\n  }\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: center;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Convert #HEXCODES to RGBA\n// hexToRGB('#FF0000', 0.5);\n\nconst hexToRGB = (hex, alpha) => {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  } else {\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n  }\n};\n\nexport default hexToRGB;\n","// <SimpleListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SimpleListStyle = styled.div`\n  display: flex;\n`;\n\nSimpleListStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSimpleListStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: 0.6;\n      font-size: 1.2rem;\n      padding-bottom: calc(${Theme.Base.Size.Sm} / 2);\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default SimpleListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SimpleListStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleList = ({ List, TextColor }) => (\n  <SimpleListStyle className=\"simple-list\" TextColor={TextColor}>\n    <SimpleListStyle.List TextColor={TextColor}>\n      {List.map((item, index) => {\n        return (\n          <SimpleListStyle.Item key={index}>\n            <span>{item.Label}</span>\n            <span>{item.Data}</span>\n          </SimpleListStyle.Item>\n        );\n      })}\n    </SimpleListStyle.List>\n  </SimpleListStyle>\n);\n\nexport default SimpleList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AwardBadgeStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardBadgeStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: calc(${Root.Size} * 3);\n  height: calc(${Root.Size} * 3);\n  background: ${Theme.Color.Primary};\n  color: ${Theme.Color.White};\n  border-radius: 50%;\n  box-shadow: 0 0px 8px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  text-align: center;\n  padding: ${Theme.Base.Size.Sm};\n\n  .img {\n    width: 50%;\n  }\n\n  span {\n    margin-top: calc(${Theme.Base.Size.Sm} * 0.75);\n    padding-top: calc(${Theme.Base.Size.Sm} * 0.75);\n    text-align: center;\n    width: 100%;\n    position: relative;\n    font-weight: bold;\n    font-size: 0.9rem;\n    line-height: 1.3;\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: 50%;\n      top: 0;\n      transform: translateX(-50%);\n      height: 1px;\n      width: ${Theme.Base.Size.Md};\n      background: ${Theme.Color.White};\n    }\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    left: 3%;\n    right: 3%;\n    top: 3%;\n    bottom: 3%;\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 50%;\n  }\n`;\n\nexport default AwardBadgeStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport AwardBadgeStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Text, TextColor, BgColor }) => (\n  <AwardBadgeStyle TextColor={TextColor} BgColor={BgColor}>\n    <ImgMatch src=\"logos/leafly.png\" AltText=\"Leafly\" />\n    <span>{Text}</span>\n  </AwardBadgeStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AwardHoursStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardHoursStyle = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: stretch;\n  flex: 1;\n\n  .simple-list {\n    padding-left: calc(${Root.Size} / 2);\n    margin-left: calc(${Root.Size} / 2);\n    border-left: 1px solid\n      ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    display: flex;\n    align-items: center;\n    ul {\n      justify-content: center;\n    }\n  }\n`;\n\nAwardHoursStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nAwardHoursStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: 0.6;\n      font-size: 1.2rem;\n      padding-bottom: calc(${Theme.Base.Size.Sm} / 2);\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default AwardHoursStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport AwardBadge from 'components/library/AwardBadge';\nimport SimpleList from 'components/library/SimpleList';\n\n// Styles\nimport AwardHoursStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Hours, TextColor }) => (\n  <AwardHoursStyle TextColor={TextColor}>\n    <AwardBadge\n      Logo=\"leafly\"\n      Text=\"2018 Voted Best Boutique Dispensary\"\n      BgColor={Theme.Color.Primary}\n      TextColor={Theme.Color.White}\n    />\n    <SimpleList TextColor={TextColor} List={Hours} />\n  </AwardHoursStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// StickyScrollSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst StickyScrollSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nStickyScrollSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nStickyScrollSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n\n  .block {\n    .gallery-img {\n      padding: 0 0 calc(${Root.Size} / 2) 0;\n\n      &:last-child {\n        padding: 0;\n      }\n    }\n\n    &.sticky-block {\n      .block-content {\n        position: sticky;\n        top: calc(${Root.Nav.Size});\n        padding-bottom: ${Root.Size};\n        height: calc(100vh - ${Root.Nav.Size});\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n    }\n  }\n\n  .txt-caption {\n    font-size: 1.4rem;\n    font-weight: bold;\n    color: ${Theme.Color.Slate};\n    display: block;\n    margin-bottom: calc(${Theme.Base.Size.Sm});\n  }\n`;\n\nexport default StickyScrollSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// StickyScrollSection Component:\n// Desired outcome: https://www.dropbox.com/s/brll80qg306ywmk/Screenshot%202019-05-06%2015.01.12.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\nimport Block from 'components/library/Block';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport StickyScrollSectionStyle from './styles.scss';\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Enable Overflows\nexport const ReleaseOverflow = createGlobalStyle`\n  html, body {\n    overflow: visible;\n  }\n\n  .wrapper {\n    overflow: visible;\n  }\n`;\n\n// Render Element\nconst StickyScrollSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  Content,\n  Gallery,\n  GalleryQueries,\n  Gutter,\n  Flex,\n  Button,\n}) => (\n  <StickyScrollSectionStyle\n    Style={Style}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    <ReleaseOverflow />\n    <StickyScrollSectionStyle.Inner Gutter={Gutter}>\n      <StickyScrollSectionStyle.Content Flex={Flex} className=\"sticky-section\">\n        <Block Padding={[0, 1, 0, 1]} className=\"sticky-block\">\n          <span className=\"txt-caption\">{Content.Subheadline}</span>\n          <h2>{Content.Headline}</h2>\n          <p className=\"p-md\">{Content.Body}</p>\n\n          {/* Check if a Btn exists, display if so. */}\n          {Button ? (\n            <Btn\n              Label={Button.Label}\n              BgColor={Button.BgColor}\n              TextColor={Button.TextColor}\n              Destination={Button.Destination}\n              IconPosition=\"left\"\n              IconClass={Button.IconClass ? Button.IconClass : null}\n              IconFas\n            />\n          ) : null}\n        </Block>\n        <Block Padding={[0, 1, 0, 1]}>\n          {Gallery\n            ? Gallery.map((Img, index) => {\n                return (\n                  <div key=\"index\" className=\"gallery-img\">\n                    <ImgMatch src={Img.Src} AltText={Img.Alt} />\n                  </div>\n                );\n              })\n            : null}\n          {GalleryQueries\n            ? GalleryQueries.map((query, index) => {\n                return (\n                  <div key=\"index\" className=\"gallery-img\">\n                    <ImgQuery src={query.Fluid} AltText={query.Alt} />\n                  </div>\n                );\n              })\n            : null}\n        </Block>\n      </StickyScrollSectionStyle.Content>\n    </StickyScrollSectionStyle.Inner>\n  </StickyScrollSectionStyle>\n);\n\nexport default StickyScrollSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SuggestionListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SuggestionListStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size} / 4);\n      font-size: 0.8rem;\n      text-transform: uppercase;\n      letter-spacing: 1px;\n\n      &:first-child {\n        opacity: 0.3;\n      }\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 0.8rem;\n          text-transform: uppercase;\n          letter-spacing: 1px;\n          font-weight: normal;\n          padding: 0 calc(${Root.Size} / 4);\n        }\n      }\n    }\n  }\n`;\n\nexport default SuggestionListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SuggestionList Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport SuggestionListStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst SuggestionList = ({\n  List,\n  Label,\n  BaseUrl,\n  TextColor,\n  GradientColor,\n  Padding,\n  Affix,\n}) => (\n  <SuggestionListStyle\n    className=\"suggestion-list\"\n    GradientColor={GradientColor}\n    Padding={Padding}\n  >\n    <ul>\n      {Label ? <li>{Label}</li> : null}\n      {List.map((item, index) => (\n        <li key={index}>\n          <Btn\n            BgColor=\"none\"\n            Label={item.name}\n            Destination={\n              Affix ? BaseUrl + item.slug + Affix : BaseUrl + item.slug\n            }\n            TextColor={TextColor}\n          />\n        </li>\n      ))}\n    </ul>\n  </SuggestionListStyle>\n);\n\nexport default SuggestionList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}