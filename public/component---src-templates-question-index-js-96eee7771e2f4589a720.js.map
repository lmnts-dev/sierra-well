{"version":3,"sources":["webpack:///./src/templates/Question/layout.js","webpack:///./src/templates/Question/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/Section/LearnSection/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/core-js/modules/_object-gopn.js"],"names":["PostDetails","_ref","Author","Time","react_default","a","createElement","className","itemProp","TagList","_ref2","baseUrl","categorySlug","list","Tags","CategorySlug","Fragment","Breadcrumb","Crumbs","map","tag","index","Destination","Label","string","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","TextColor","Theme","Color","White","QuestionTemplate","_ref3","BgMatch","PageTheme","Location","AllCategories","QuestionData","Layout","BgColor","Background","PrimaryColor","Primary","SecondaryColor","Secondary","TertiaryColor","Tertiary","SubLevelPage","itemScope","itemType","SimpleHero","Size","BgAlt","title","Tint","Block","AlignItems","Width","maxWidth","layout_TagList","tags","SocialStrip","Margin","ItemProp","SimpleSection","Snow","Nightsky","Padding","layout_PostDetails","date","author","shortAnswer","longAnswer","LearnSection","Prefix","Categories","Filter","category","QuestionFooter","__webpack_require__","d","__webpack_exports__","query","QuestionPage","props","QuestionCategory","data","allQuestionsJson","edges","node","allQuestionCategoriesJson","Category","Name","layout","location","href","Slug","key","BlockStyle","styled","div","_templateObject","Flex","flex","Style","css","_templateObject2","JustifyContent","BgTint","Base","Grid","SiteWidth","Root","children","BgQuery","styles_scss","ImgMatch","src","AltText","ImgQuery","SlideSectionStyle","Sm","Black","Inner","SectionInnerStyle","Gutter","Left","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","Headline","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Helmet","rel","type","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","Btn","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","WidgetContent","WrapperLock","createGlobalStyle","Media","Md","WrapperRelease","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","objectFit","objectPosition","fluid","fadeIn","SimpleSectionStyle","Right","FluidHeight","SimpleSection_styles_scss","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","WidgetSection","Slider","WidgetSection_styles_scss","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","HeroInner","HeroContent","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SimpleHeroStyle","TintBorder","Hero","BreadCrumb","Link","Bread","crumb","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","TagSlug","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","Question","filteredCategory","slug","BgImageFile","coverImage","BgImageAltText","includes","_234893462","QuestionListings","QuestionListings_QuestionCards","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_4273665236","HideCategories","IconClass","IconPosition","QuestionFooter_BrowseCategories","SocialStripStyle","span","target","SplitSectionStyle","Site","SplitSection","SplitSection_styles_scss","SlideSectionWithData","BaseUrl","Data","Tag","react__WEBPACK_IMPORTED_MODULE_1___default","components_library_Section_SlideSection__WEBPACK_IMPORTED_MODULE_2__","components_library_Block__WEBPACK_IMPORTED_MODULE_3__","anObject","$flags","DESCRIPTORS","$toString","define","fn","prototype","source","flags","R","concat","undefined","name","f","configurable","get","global","inheritIfRequired","dP","gOPN","isRegExp","$RegExp","proto","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","constructor","proxy","set","it","keys","length","isObject","setPrototypeOf","module","exports","that","C","P","S","check","O","TypeError","test","buggy","Function","Array","e","__proto__","pIE","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","getOwnPropertyDescriptor","$keys","hiddenKeys","getOwnPropertyNames"],"mappings":"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","file":"component---src-templates-question-index-js-96eee7771e2f4589a720.js","sourcesContent":["// templates/Question.js:\n// This is the Question template of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/core/Layout';\n\n// Components\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\n\n// Hero Components\nimport SimpleHero from 'components/library/Hero/SimpleHero';\n\n//// Section Components\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport LearnSection from 'components/library/Section/LearnSection';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport SocialStrip from 'components/library/SocialStrip';\nimport Btn from 'components/library/Btn';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Slugify Helper\n\nfunction slugify(string) {\n  const a = 'àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœṕŕßśșțùúüûǘẃẍÿź·/_,:;';\n  const b = 'aaaaaaaaceeeeghiiiimnnnoooooprssstuuuuuwxyz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with ‘and’\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n}\n\n// Post Details Snippet\nconst PostDetails = ({ Author, Time }) => (\n  <span className=\"post-details\">\n    Answered <time itemProp=\"datePublished\">{Time}</time> by{' '}\n    <span itemProp=\"author\">{Author}</span>\n  </span>\n);\n\n// Breadcrumb Tag List\nconst TagList = ({ Tags, CategorySlug }) => {\n  // Tag Crumb Function\n  function tagCrumbs(baseUrl, categorySlug, list) {\n    let crumbs = list.map((tag, index) => {\n      if (index == 0) {\n        return {\n          Destination: '/' + baseUrl + '/' + categorySlug,\n          Label: categorySlug + ' Cannabis Questions',\n        };\n      } else {\n        return {\n          Destination: '/' + baseUrl + '/' + categorySlug + '/' + slugify(tag),\n          Label: tag,\n        };\n      }\n    });\n\n    return crumbs;\n  }\n\n  return (\n    <>\n      <Bread\n        Crumbs={tagCrumbs('learn', CategorySlug, Tags)}\n        TextColor={Theme.Color.White}\n      />\n    </>\n  );\n};\n\n// The Question Template\nconst QuestionTemplate = ({\n  BgMatch,\n  PageTheme,\n  Location,\n  CategorySlug,\n  AllCategories,\n  QuestionData,\n}) => (\n  <Layout\n    BgColor={PageTheme.Color.Background}\n    PrimaryColor={PageTheme.Color.Primary}\n    SecondaryColor={PageTheme.Color.Secondary}\n    TertiaryColor={PageTheme.Color.Tertiary}\n  >\n    <SubLevelPage\n      BgColor={PageTheme.Color.Background}\n      PrimaryColor={PageTheme.Color.Primary}\n      SecondaryColor={PageTheme.Color.Secondary}\n      TertiaryColor={PageTheme.Color.Tertiary}\n    >\n      {/* Schema.org BlogPosting */}\n      {/* Read more: https://schema.org/BlogPosting */}\n\n      <article itemScope itemType=\"http://schema.org/BlogPosting\">\n        {/* ///////////// */}\n\n        <SimpleHero\n          Size=\"2\"\n          BgMatch={BgMatch}\n          BgAlt={QuestionData.title}\n          TextColor={Theme.Color.White}\n          Tint=\"0.5\"\n        >\n          <Block AlignItems=\"flex-start\" Width={1} maxWidth={0.75}>\n            <TagList Tags={QuestionData.tags} CategorySlug={CategorySlug} />\n\n            <h1 itemProp=\"name\">{QuestionData.title}</h1>\n            <SocialStrip\n              Margin={[0, 0, 0, 0]}\n              Location={Location}\n              TextColor={Theme.Color.White}\n            />\n          </Block>\n        </SimpleHero>\n\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.White}\n          ItemProp=\"articleBody\"\n        >\n          {/* ///////////// */}\n\n          <SimpleSection\n            BgColor={Theme.Color.Snow}\n            TextColor={Theme.Color.Nightsky}\n          >\n            <Block Padding={[1, 0, 1, 0]} maxWidth={0.5}>\n              <PostDetails\n                Time={QuestionData.date}\n                Author={QuestionData.author}\n              />\n              <h3>{QuestionData.shortAnswer}</h3>\n              <p className=\"p-md\">{QuestionData.longAnswer}</p>\n            </Block>\n          </SimpleSection>\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n        {/* ///////////// */}\n      </article>\n\n      {/* The Related Categories. */}\n      <SubLevelPageContent\n        BgColor={Theme.Color.Snow}\n        TextColor={Theme.Color.Nightsky}\n      >\n        <LearnSection\n          Prefix=\"More from \"\n          Categories={AllCategories}\n          Filter={QuestionData.category.toLowerCase()}\n        />\n      </SubLevelPageContent>\n\n      {/* The Question / Category / Tag footer. */}\n      <SubLevelPageContent\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n      >\n        {/* ///////////// */}\n\n        <QuestionFooter />\n\n        {/* ///////////// */}\n      </SubLevelPageContent>\n    </SubLevelPage>\n  </Layout>\n);\n\nexport default QuestionTemplate;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Index.js:\n// This is the home page of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Templates\nimport QuestionTemplate from './layout';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Question Template\nconst QuestionPage = props => {\n  let QuestionCategory = props.data.allQuestionsJson.edges[0].node.category;\n  let AllCategories = props.data.allQuestionCategoriesJson.edges;\n\n  return (\n    <>\n      {AllCategories.map((Category, index) => {\n        if (Category.node.Name == QuestionCategory) {\n          return (\n            <QuestionTemplate\n              PageTheme={Category.node.PageTheme}\n              BgMatch=\"placeholder_bg_4.jpg\"\n              Location={props.location.href}\n              AllCategories={AllCategories}\n              CategorySlug={Category.node.Slug}\n              QuestionData={props.data.allQuestionsJson.edges[0].node}\n              key={index}\n            />\n          );\n        } else {\n          return null;\n        }\n      })}\n    </>\n  );\n};\n\nexport default QuestionPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\nexport const query = graphql`\n  query($Slug: String!) {\n    allQuestionsJson(filter: { slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          slug\n          coverImage\n          date\n          author\n          title\n          category\n          tags\n          shortAnswer\n          longAnswer\n        }\n      }\n    }\n\n    allQuestionCategoriesJson {\n      edges {\n        node {\n          id\n          Name\n          Icon\n          Headline\n          Slug\n          Tags {\n            Name\n            Icon\n            Slug\n          }\n          Breadcrumb {\n            Destination\n            Label\n          }\n          PageTheme {\n            Color {\n              Background\n              Primary\n              Secondary\n              Tertiary\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  src,\n  AltText,\n  className,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={src}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    AltText={AltText}\n    className={className ? className : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n    .img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: ${props => (props.JustifyContent ? props.JustifyContent : 'flex-start')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n  JustifyContent,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle\n      className=\"hero-content\"\n      JustifyContent={JustifyContent}\n      Flex={Flex}\n    >\n      {children}\n    </HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  JustifyContent,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      JustifyContent={JustifyContent}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: center;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/' + BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={\n          this.props.Prefix\n            ? this.props.Prefix + this.props.Data.Name\n            : this.props.Data.Name\n        }\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ Categories, Filter, Prefix }) => {\n  if (Filter == 'all') {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a section. */}\n        {Categories.map((Category, index) => {\n          return (\n            <SlideSectionWithData\n              key={index}\n              BaseUrl=\"learn\"\n              Data={Category.node}\n            />\n          );\n        })}\n      </Block>\n    );\n  } else {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a the desired section. */}\n        {Categories.map((Category, index) => {\n          if (Category.node.Slug == Filter) {\n            return (\n              <SlideSectionWithData\n                key={index}\n                BaseUrl=\"learn\"\n                Data={Category.node}\n                Prefix={Prefix ? Prefix : null}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </Block>\n    );\n  }\n};\n\nexport default LearnSection;\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n"],"sourceRoot":""}