{"version":3,"sources":["webpack:///./src/pages/learn/all.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/Section/LearnSection/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","components_core_Layout__WEBPACK_IMPORTED_MODULE_1__","templates_SubLevelPage__WEBPACK_IMPORTED_MODULE_2__","components_library_Hero_SimpleHero__WEBPACK_IMPORTED_MODULE_3__","components_library_Section_LearnSection__WEBPACK_IMPORTED_MODULE_4__","components_library_QuestionFooter__WEBPACK_IMPORTED_MODULE_5__","components_library_Breadcrumb__WEBPACK_IMPORTED_MODULE_6__","components_library_Btn___WEBPACK_IMPORTED_MODULE_7__","components_library_Block__WEBPACK_IMPORTED_MODULE_8__","constants_Theme__WEBPACK_IMPORTED_MODULE_9__","PageWrapper","_ref","children","Data","Category","CategoryTheme","a","createElement","BgColor","Theme","Color","Gunmetal","PrimaryColor","SecondaryColor","White","TertiaryColor","Nightsky","TextColor","maxWidth","Crumbs","Destination","Label","className","IconClass","IconPosition","Snow","HideCategories","LearnTemplateAll","_ref2","data","Filter","Categories","allQuestionCategoriesJson","edges","BlockStyle","styled","div","_templateObject","props","Flex","flex","AlignItems","Style","css","_templateObject2","JustifyContent","BgTint","Width","Base","Grid","SiteWidth","Padding","Root","Size","Block","BgMatch","BgAlt","react_default","styles_scss","ImgMatch","src","AltText","SlideSectionStyle","Sm","Black","Inner","SectionInnerStyle","Gutter","Left","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","Headline","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Fragment","Helmet","rel","type","href","lib_default","ref","h","slider","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","Btn","IconclassName","SlideSection_SectionSlider","TextColr","map","Widget","index","Container","key","WidgetContent","WrapperLock","createGlobalStyle","Media","Md","WrapperRelease","SimpleSectionStyle","Primary","Right","FluidHeight","SimpleSection","SimpleSection_styles_scss","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","WidgetSection","Slider","WidgetSection_styles_scss","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","Background","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","HeroInner","HeroContent","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SimpleHeroStyle","Tint","TintBorder","ImgQuery","objectFit","objectPosition","withIEPolyfill_default","fluid","fadeIn","SimpleHero","BgQuery","Hero","core_ImgQuery","BreadCrumb","Link","Bread","crumb","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","node","allQuestionsJson","Question","filteredCategory","PageTheme","slug","title","BgImageFile","coverImage","BgImageAltText","tags","includes","toLowerCase","Slug","_234893462","QuestionListings","QuestionListings_QuestionCards","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_4273665236","QuestionFooter","QuestionFooter_BrowseCategories","SlideSectionWithData","BaseUrl","Secondary","Tags","Tag","react__WEBPACK_IMPORTED_MODULE_1___default","components_library_Section_SlideSection__WEBPACK_IMPORTED_MODULE_2__","Prefix","LearnSection","components_library_Block__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-learn-all-js-73e5d31d3bfb7a1d7c08.js","sourcesContent":["// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport LearnSection from 'components/library/Section/LearnSection';\nimport QuestionFooter from 'components/library/QuestionFooter';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport Btn from 'components/library/Btn/';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// PageWrapper component for page theming.\nconst PageWrapper = ({ children, Data, Category, CategoryTheme }) => {\n  return (\n    <Layout\n      BgColor={Theme.Color.Gunmetal}\n      PrimaryColor={Theme.Color.Gunmetal}\n      SecondaryColor={Theme.Color.White}\n      TertiaryColor={Theme.Color.Nightsky}\n    >\n      <SubLevelPage\n        BgColor={Theme.Color.Gunmetal}\n        PrimaryColor={Theme.Color.Gunmetal}\n        SecondaryColor={Theme.Color.White}\n        TertiaryColor={Theme.Color.Nightsky}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero TextColor={Theme.Color.White}>\n          <Block maxWidth={0.5}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: '/learn',\n                  Label: 'Learn',\n                },\n              ]}\n              TextColor={Theme.Color.White}\n            />\n            <h1 className=\"h2\">You've got questions. We've got answers.</h1>\n            <Btn\n              IconClass=\"intercom\"\n              Label=\"Ask a question\"\n              BgColor={Theme.Color.Nightsky}\n              TextColor={Theme.Color.White}\n              Destination=\"/learn/all\"\n              IconPosition=\"left\"\n            />\n          </Block>\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Snow}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n\n        {/* The Question / Category / Tag footer. */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          <QuestionFooter HideCategories />\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n\n        {/* ///////////// */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LearnTemplateAll = ({ data }) => {\n  return (\n    <PageWrapper>\n      {/* Pass our categories GraphQL query to the LearnSection. */}\n      <LearnSection\n        Filter=\"all\"\n        Categories={data.allQuestionCategoriesJson.edges}\n      />\n    </PageWrapper>\n  );\n};\n\nexport default LearnTemplateAll;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\nexport const query = graphql`\n  query {\n    allQuestionCategoriesJson {\n      edges {\n        node {\n          id\n          Name\n          Icon\n          Headline\n          Slug\n          Tags {\n            Name\n            Icon\n            Slug\n          }\n          Breadcrumb {\n            Destination\n            Label\n          }\n          PageTheme {\n            Color {\n              Background\n              Primary\n              Secondary\n              Tertiary\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle Flex={Flex}>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  src,\n  AltText,\n  className,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={src}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    AltText={AltText}\n    className={className ? className : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/' + BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={\n          this.props.Prefix\n            ? this.props.Prefix + this.props.Data.Name\n            : this.props.Data.Name\n        }\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ Categories, Filter, Prefix }) => {\n  if (Filter == 'all') {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a section. */}\n        {Categories.map((Category, index) => {\n          return (\n            <SlideSectionWithData\n              key={index}\n              BaseUrl=\"learn\"\n              Data={Category.node}\n            />\n          );\n        })}\n      </Block>\n    );\n  } else {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a the desired section. */}\n        {Categories.map((Category, index) => {\n          if (Category.node.Slug == Filter) {\n            return (\n              <SlideSectionWithData\n                key={index}\n                BaseUrl=\"learn\"\n                Data={Category.node}\n                Prefix={Prefix ? Prefix : null}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </Block>\n    );\n  }\n};\n\nexport default LearnSection;\n"],"sourceRoot":""}