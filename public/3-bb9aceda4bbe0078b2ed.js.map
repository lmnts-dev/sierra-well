{"version":3,"sources":["webpack:///./src/components/library/Section/styles.scss.js","webpack:///./src/components/core/ImgMatch/index.js","webpack:///./src/components/library/Widgets/Container/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Article/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/index.js","webpack:///./src/components/library/Widgets/Library/Logo/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Logo/index.js","webpack:///./src/components/library/Widgets/Library/MenuWidget/styles.scss.js","webpack:///./src/components/library/ContentOverlay/Menu/styles.scss.js","webpack:///./src/components/library/ContentOverlay/Menu/index.js","webpack:///./src/components/library/Widgets/Library/MenuWidget/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/styles.scss.js","webpack:///./src/components/library/Forecast/styles.scss.js","webpack:///./src/components/library/Forecast/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/index.js","webpack:///./src/components/library/Widgets/Container/index.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Widgets/Library/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/index.js","webpack:///./src/components/library/Widgets/Library/SideHeader/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideHeader/index.js","webpack:///./src/components/library/Widgets/Library/SideWidget/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideWidget/index.js"],"names":["SectionInnerStyle","styled","div","_templateObject","Root","Grid","Gutter","Left","Size","SectionContentStyle","_templateObject2","props","FullWidth","Theme","Base","SiteWidth","Image","_ref","AltText","src","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","data","_public_static_d_346298689_json__WEBPACK_IMPORTED_MODULE_3__","match","useMemo","allFile","edges","find","_ref2","node","relativePath","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_5___default","Object","assign","className","objectFit","objectPosition","alt","fluid","childImageSharp","WidgetContainerStyle","Flex","Width","Inner","Radius","Transition","Duration","CssEase","ViewWidthPadding","Color","White","WidgetStyle","styles_scss_templateObject","BgColor","TextColor","Black","BgImage","TintColor","TintOpacity","Media","Md","Subhead","styles_scss_templateObject2","ViewWidthFontSize","Headline","_templateObject3","Icon","i","_templateObject4","IconSize","CrossWidgetStyle","Cross_styles_scss_templateObject","Nav","Footer","Cross_styles_scss_templateObject2","CrossWidget","objectDestructuringEmpty_default","react_default","Cross_styles_scss","styles_scss","Default","Nightsky","Destination","IconColor","Primary","IconName","Slate","Gunmetal","BgImageFile","Logo_styles_scss_templateObject","Logo_styles_scss_templateObject2","styles_scss_templateObject3","styles_scss_templateObject4","WidgetInnerWrapper","children","gatsby_browser_entry","to","LogoWidget","BgQuery","CallToAction","BgImageAltText","Logo_styles_scss","Logo_WidgetInnerWrapper","Brandmark","Icons","Name","class","ImgMatch","ImgQuery","MenuWidget_styles_scss_templateObject","MenuWidget_styles_scss_templateObject2","MenuWidget_styles_scss_templateObject3","MenuWidget_styles_scss_templateObject4","MenuOverlayStyle","Menu_styles_scss_templateObject","MenuOverlayToggle","_this","_React$Component","call","this","state","overlayVisible","toggleOverlay","bind","assertThisInitialized_default","setState","render","Fragment","onClick","onKeyPress","role","tabIndex","Menu_OverlayContentContainer","overlayToggle","React","Component","OverlayContentContainer","_React$Component2","ReactDOM","createPortal","ContentOverlay_styles_scss","Menu_styles_scss","fas","frameBorder","title","document","getElementById","MenuWidget","MenuWidget_styles_scss","Menu","Btn","IconClass","Label","IconPosition","Pseudo","IconFas","SideForecastStyle","SideForecast_styles_scss_templateObject","Header","h1","SideForecast_styles_scss_templateObject2","ViewHeightFontSize","Body","SideForecast_styles_scss_templateObject3","SideForecast_styles_scss_templateObject4","_templateObject5","ForecastStyle","Forecast_styles_scss_templateObject","Top","Forecast_styles_scss_templateObject2","Bottom","Forecast_styles_scss_templateObject3","Forecast","forecast","Forecast_styles_scss","SideForecast","Location","SideForecast_styles_scss","library_Forecast","WidgetSlider","settings","dots","Dots","speed","arrows","autoplaySpeed","slidesToShow","autoplay","infinite","Helmet","rel","type","href","lib_default","ref","g","slider","WidgetType","WidgetContent","length","Container_WidgetSlider","map","Content","index","Style","Meta","Generic","key","SideWidget","Library_MenuWidget","Library_SideForecast","HideCarat","Logo","Cross","SideHeader","IntroCopy","BodyCopy","WidgetContainer","Container_WidgetType","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","fadeIn","d","__webpack_exports__","defaultWidgetDataTransformer","DefaultWidget","Default_WidgetInnerWrapper","widget","widget_height_fraction","widget_width_multiple","widget_destination","widget_bg_color","widget_background_image","localFile","widget_subheadline","widget_headline","text","widget_text_color","widget_icon_class","tint_color","tint_opacity","SideHeaderWidgetStyle","p","_templateObject6","SideHeader_sideHeaderWidgetDataTransformer","SideHeaderWidget","sideHeaderWidgetDataTransformer","widget_intro_copy","widget_body_copy","SideWidgetStyle","sideWidgetDataTransformer"],"mappings":"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","file":"3-bb9aceda4bbe0078b2ed.js","sourcesContent":["// SectionInnerStyle Styles:\n// These are nearly identical to the Hero base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n  padding-right: ${Root.Size};\n`;\n\nexport const SectionContentStyle = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  display: flex;\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Dynamic query variables in GraphQl queries for Gatsby-Image\n// Learn more: https://github.com/gatsbyjs/gatsby/issues/10482#issuecomment-485349612\n\nimport React, { useMemo } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Img from 'gatsby-image/withIEPolyfill';\n\nconst Image = ({ AltText, src, ...props }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { internal: { mediaType: { regex: \"images/\" } } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 650) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const match = useMemo(\n    () => data.allFile.edges.find(({ node }) => src === node.relativePath),\n    [data, src]\n  );\n\n  return (\n    <Img\n      className=\"img\"\n      objectFit=\"cover\"\n      objectPosition=\"50% 50%\"\n      alt={AltText ? AltText : null}\n      fluid={match.node.childImageSharp.fluid}\n      {...props}\n    />\n  );\n};\n\nexport default Image;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetContainerStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  flex: ${props => (props.Flex ? props.Flex : '1')};\n  display: flex;\n  flex-direction: column;\n  width: ${props =>\n    props.Width ? 'calc(' + Root.Size + ' * ' + props.Width + ')' : '100%'};\n`;\n\nWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  z-index: 1;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n\n  /* Slick Slider Adjustments */\n\n  .slick-slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    .slick-track {\n      display: block !important;\n    }\n\n    .slick-dots {\n      bottom: ${Root.ViewWidthPadding};\n      left: ${Root.ViewWidthPadding};\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.White};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .slick-slider,\n  .slick-list,\n  .slick-track {\n    flex: 1;\n  }\n\n  .slick-list,\n  .slick-slider {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n  }\n\n  .slick-slide {\n    display: flex !important;\n    flex-direction: column;\n    align-items: stretch;\n    flex: 1;\n\n    &:first-child {\n      padding: 0;\n    }\n\n    div {\n      &:first-child {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n    }\n\n    .widget-content {\n      flex: 1;\n\n      div {\n        &:first-child {\n          flex: unset;\n          display: unset;\n          flex-direction: unset;\n          align-items: unset;\n        }\n      }\n    }\n  }\n`;\n\nexport default WidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Cross Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Cross Widget Content */\nconst CrossWidgetStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(\n    (100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size})) -\n      ((${Root.Size} / 6) * 2)\n  );\n`;\n\nCrossWidgetStyle.Inner = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0.75fr 1fr;\n  grid-template-rows: 1fr 0.75fr 1fr;\n  grid-gap: calc(${Root.Size} / 4);\n  justify-content: stretch;\n  justify-items: stretch;\n  grid-auto-flow: row;\n  align-items: stretch;\n  width: calc(\n    (100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size})) -\n      ((${Root.Size} / 6) * 2)\n  );\n  flex: 1;\n`;\n\nexport default CrossWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// CrossWidget.js:\n\n// Visual:\n// https://www.dropbox.com/s/474d6mc15w2q1vk/Screenshot%202019-04-16%2012.41.23.png?dl=0\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport CrossWidgetStyle from './styles.scss';\nimport WidgetContainerStyle from './../../Container/styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport DefaultWidget from './../Default';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst CrossWidget = ({}) => (\n  <CrossWidgetStyle>\n    <CrossWidgetStyle.Inner>\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Nightsky}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/menu\"\n          Subhead=\"\"\n          Headline=\"View Our Menu\"\n          IconColor={Theme.Color.Primary}\n          IconName=\"plus\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/company\"\n          Subhead=\"We've reinvented Cannabis Retail.\"\n          Headline=\"Learn more.\"\n          IconColor={Theme.Color.White}\n          IconName=\"cannabis\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.White}\n          BgImage=\"\"\n          TextColor={Theme.Color.Nightsky}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/company\"\n          Subhead=\"Outreach\"\n          Headline=\"How we raised $5,000 for the Children’s Leukemia Foundation.\"\n          IconColor={Theme.Color.Nightsky}\n          IconName=\"heart\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/menu/\"\n          Subhead=\"No minimums.\"\n          Headline=\"100% Free Delivery.\"\n          IconColor={Theme.Color.White}\n          IconName=\"car\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Order by Phone.\"\n          IconColor={Theme.Color.White}\n          IconName=\"phone\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/company\"\n          Subhead=\"Leafly 2018\"\n          Headline=\"Voted Best Boutique Dispensary\"\n          IconColor={Theme.Color.White}\n          IconName=\"trophy\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Slate}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/learn\"\n          Subhead=\"Questions?\"\n          Headline=\"We've got answers.\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/company\"\n          Subhead=\"Values\"\n          Headline=\"Discover a new type of Cannabis Store.\"\n          IconColor={Theme.Color.White}\n          IconName=\"heart\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Gunmetal}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor={Theme.Color.Black}\n          TintOpacity=\"0.6\"\n          BgImageFile=\"be14.png\"\n          Destination=\"/locations\"\n          Subhead=\"63 locations\"\n          Headline=\"View our locations\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n    </CrossWidgetStyle.Inner>\n  </CrossWidgetStyle>\n);\n\nexport default CrossWidget;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  min-width: 100px\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  .widget-inner-wrapper {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: relative;\n    z-index: 10;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  .btn {\n    position: absolute;\n    flex: unset;\n    width: unset;\n    display: block;\n    flex-direction: unset;\n    left: ${Root.ViewWidthPadding};\n    bottom: ${Root.ViewWidthPadding};\n  }\n\n  /* The Carat Icon */\n  .ico {\n    svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%) translateZ(0);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n    }\n  }\n\n  /* The Brandmark */\n\n  .brandmark {\n    width: 60%;\n    margin-bottom: calc(${Root.ViewWidthPadding} / 2);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      .ico {\n        svg {\n        transform: translateX(50%) translateZ(0);\n        fill: ${Theme.Color.White};\n        }\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3) translateZ(0);\n      }\n\n      /* The Brandmark */\n      .brandmark {\n        fill: ${Theme.Color.White};\n        transition: all ${Theme.Base.Transition.Duration}\n          ${Theme.Base.Transition.CssEase};\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: calc(${Root.ViewWidthFontSize} * 2);\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: calc(${Root.ViewWidthFontSize} * 1.2);\n  line-height: 1.5;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: calc(${Root.IconSize} * 1);\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\nimport Brandmark from 'components/core/Branding/Brandmark';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetInnerWrapper = ({ children, Destination }) => {\n  if (Destination) {\n    return (\n      <Link className=\"widget-inner-wrapper\" to={Destination}>\n        {children}\n      </Link>\n    );\n  } else {\n    return <span className=\"widget-inner-wrapper\">{children}</span>;\n  }\n};\n\nconst LogoWidget = ({\n  BgColor,\n  BgImage,\n  BgQuery,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n  BgImageFile,\n  BgImageAltText,\n  CallToAction,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={BgImageFile ? Theme.Color.White : TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n\n    <WidgetInnerWrapper Destination={Destination}>\n      <Brandmark />\n      <WidgetStyle.Subhead className=\"widget-subheadline\">\n        {Subhead}\n      </WidgetStyle.Subhead>\n      <WidgetStyle.Headline className=\"widget-headline\">\n        {Headline}\n      </WidgetStyle.Headline>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n      {CallToAction ? <span class=\"cta-btn\">{CallToAction}</span> : null}\n    </WidgetInnerWrapper>\n    {BgImageFile ? <ImgMatch src={BgImageFile} AltText={Headline} /> : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={Headline} /> : null}\n  </WidgetStyle>\n);\n\nexport default LogoWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const LogoWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = data.map((widget, index) => {\n      return {\n        // Begin WidgetContent\n        Flex: widget.widget_height_fraction ? widget.widget_height_fraction : 1,\n        Width: widget.widget_width_multiple ? widget.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: widget.widget_destination,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: widget.widget_bg_color,\n                BgImage: '',\n                BgQuery: widget.widget_background_image.localFile\n                  ? widget.widget_background_image.localFile.childImageSharp\n                      .fluid\n                  : false,\n                Subhead: widget.widget_subheadline,\n                Headline: widget.widget_headline.text,\n                TextColor: widget.widget_text_color,\n                IconColor: widget.widget_text_color,\n                IconName: widget.widget_icon_class,\n                TintColor: widget.tint_color ? widget.tint_color : '',\n                TintOpacity: widget.tint_opacity ? widget.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      };\n    });\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  min-width: 100px\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  .widget-inner-wrapper {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: relative;\n    z-index: 10;\n    width: 100%;\n    color: white;\n    /* transform: scale(1.000000001); */\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n\n      .overlay-toggle {\n        flex: 1;\n        position: relative;\n      }\n  }\n\n  .btn {\n    position: absolute !important;\n    display: block;\n    flex-direction: unset;\n    left: calc(${Root.Size} * .4);\n    bottom: calc(${Root.Size} * .4);\n    \n    .btn-inner {\n      font-size: 1rem;\n    }\n\n    .ico {\n      i {\n        font-size: 1.2rem;\n      }\n    }\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%) translateZ(0);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Widget Icon */\n\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%) translateZ(0);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3) translateZ(0);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MenuHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Extended Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframes\nimport { SlideUpKeyframes } from 'components/core/Transition/Keyframes.js';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MenuOverlayStyle = styled.div`\n  position: relative;\n  flex: 1;\n  overflow-x: hidden;\n  width: 100%;\n  overflow-y: auto;\n  background: ${Theme.Color.White};\n\n  iframe {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: ${Root.Nav.Size * 0.4};\n    top: ${Root.Nav.Size};\n    width: 100%;\n    height: calc(100% - (${Root.Nav.Size} + (${Root.Nav.Size} * 0.4)));\n  }\n\n  .overlay-bar-inner {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    height: 100%;\n  }\n\n  .overlay-top-bar,\n  .overlay-bottom-bar {\n    position: absolute;\n    z-index: 500;\n    left: 0;\n    right: 0;\n    height: ${Root.Nav.Size};\n    background: ${Theme.Color.White};\n    color: ${Theme.Color.Nightsky};\n    display: flex;\n    align-items: center;\n    padding: 0 calc(${Root.Size});\n    font-weight: bold;\n    font-size: 1.1rem;\n  }\n\n  .overlay-top-bar {\n    top: 0;\n    justify-content: center;\n\n    .overlay-close {\n      position: absolute;\n      width: calc(${Root.Size} * 1.4);\n      height: calc(${Root.Size} * 1.4);\n      left: 0;\n      top: 50%;\n      transform: translateY(-50%);\n\n      figure {\n        padding: 0;\n        margin: 0;\n        width: 100%;\n        height: 100%;\n        position: relative;\n\n        &:before,\n        &:after {\n          content: '';\n          position: absolute;\n          left: 50%;\n          top: 50%;\n          width: 100%;\n          height: 2px;\n          background-color: ${Theme.Color.Nightsky};\n        }\n\n        &:before {\n          transform: rotate(45deg) translate(-50%, -50%);\n          transform-origin: left center;\n        }\n        &:after {\n          transform: rotate(-45deg) translate(-50%, -50%);\n          transform-origin: left center;\n        }\n      }\n    }\n\n    .overlay-icon {\n      position: absolute;\n      width: calc(${Root.Size} * 1.4);\n      height: calc(${Root.Size} * 1.4);\n      right: 0;\n      top: 50%;\n      transform: translateY(-50%);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      i {\n        font-size: 1.7rem;\n        line-height: 0;\n      }\n    }\n\n    .overlay-bar-inner {\n      justify-content: center;\n    }\n  }\n\n  .overlay-bottom-bar {\n    bottom: 0;\n    border-top: ${Theme.Color.Slate} 1px solid;\n    padding: 0 calc(${Root.Size} * 1.5);\n\n    .overlay-bar-inner {\n      justify-content: space-between;\n    }\n\n    a {\n      color: ${Theme.Color.Primary};\n      text-decoration: none;\n\n      &:hover {\n        color: ${Theme.Color.Primary};\n      }\n    }\n  }\n`;\n\nexport default MenuOverlayStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MenuHero Component:\n// This is the specialize hero for the Menu page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Device from 'components/core/DeviceQuery';\n\n// Styles\nimport MenuOverlayStyle from './styles.scss';\nimport OverlayContentContainerStyle from 'components/library/ContentOverlay/styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nclass MenuOverlayToggle extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n\n    // Initial state.\n    this.state = {\n      overlayVisible: false,\n    };\n\n    // Bind overlay state.\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n  }\n\n  // Base functions to change transition state for the Overlay.\n  toggleOverlay() {\n    // If currently hidden...\n    if (this.state.overlayVisible == false) {\n      this.setState({\n        overlayVisible: true,\n      });\n    }\n\n    // If currently visible...\n    else {\n      this.setState({\n        overlayVisible: false,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <span\n          onClick={this.toggleOverlay.bind(this)}\n          // These are eslint errors for accessibility below.\n          onKeyPress={this.toggleOverlay.bind(this)}\n          role=\"button\"\n          tabIndex=\"0\"\n          className=\"overlay-toggle\"\n        >\n          {this.props.children}\n        </span>\n        <OverlayContentContainer\n          overlayVisible={this.state.overlayVisible}\n          overlayToggle={this.toggleOverlay.bind(this)}\n        />\n      </>\n    );\n  }\n}\n\nclass OverlayContentContainer extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    const overlayVisible = this.props.overlayVisible;\n\n    // If the overlay is hidden...\n    if (overlayVisible == false) {\n      return null;\n    }\n\n    // If the overlay is visible...\n    else {\n      return ReactDOM.createPortal(\n        <OverlayContentContainerStyle>\n          <MenuOverlayStyle>\n            <div className=\"overlay-top-bar\">\n              <div className=\"overlay-bar-inner\">\n                <span\n                  onClick={this.props.overlayToggle}\n                  // These are eslint errors for accessibility below.\n                  onKeyPress={this.props.overlayToggle}\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  className=\"overlay-close\"\n                >\n                  <figure />\n                </span>\n                <span class=\"overlay-title\">Carson City, Nevada</span>\n                <span class=\"overlay-icon\">\n                  <Icon fas={true} Name=\"share-alt\" />\n                </span>\n              </div>\n            </div>\n            <iframe\n              className=\"dutchie-iframe\"\n              frameBorder=\"0\"\n              title=\"menu\"\n              src=\"https://www.dutchie.com/embedded-menu/sierra-well-reno/menu?\"\n            />\n            <div className=\"overlay-bottom-bar\">\n              <div className=\"overlay-bar-inner\">\n                <Link to=\"/\">Call</Link>\n                <Link to=\"/\">Visit</Link>\n                <Link to=\"/\">Chat</Link>\n                <Link to=\"/\">Info</Link>\n              </div>\n            </div>\n          </MenuOverlayStyle>\n        </OverlayContentContainerStyle>,\n        document.getElementById('content-overlay')\n      );\n    }\n  }\n}\n\nexport default MenuOverlayToggle;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Default Widget.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\nimport MenuOverlayToggle from 'components/library/ContentOverlay/Menu';\nimport Btn from 'components/library/Btn/';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MenuWidget = ({\n  BgColor,\n  BgImage,\n  BgQuery,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n  BgImageFile,\n  BgImageAltText,\n  CallToAction,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={BgImageFile ? Theme.Color.White : TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n    <span className=\"widget-inner-wrapper\">\n      <MenuOverlayToggle>\n        <WidgetStyle.Subhead className=\"widget-subheadline\">\n          {Subhead}\n        </WidgetStyle.Subhead>\n        <WidgetStyle.Headline className=\"widget-headline\">\n          {Headline}\n        </WidgetStyle.Headline>\n        <Btn\n          IconClass=\"expand\"\n          Label=\"View Menu\"\n          BgColor={IconColor}\n          TextColor={Theme.Color.White}\n          IconPosition=\"left\"\n          Pseudo\n          IconFas\n        />\n        <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n        <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n        {CallToAction ? <span class=\"cta-btn\">{CallToAction}</span> : null}\n      </MenuOverlayToggle>\n    </span>\n\n    {BgImageFile ? (\n      <ImgMatch src={BgImageFile} AltText={BgImageAltText} />\n    ) : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={BgImageAltText} /> : null}\n  </WidgetStyle>\n);\n\nexport default MenuWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const MenuWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = data.map((widget, index) => {\n      return {\n        // Begin WidgetContent\n        Flex: widget.widget_height_fraction ? widget.widget_height_fraction : 1,\n        Width: widget.widget_width_multiple ? widget.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: widget.widget_destination,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: widget.widget_bg_color,\n                BgImage: '',\n                BgQuery: widget.widget_background_image.localFile\n                  ? widget.widget_background_image.localFile.childImageSharp\n                      .fluid\n                  : false,\n                Subhead: widget.widget_subheadline,\n                Headline: widget.widget_headline.text,\n                TextColor: widget.widget_text_color,\n                IconColor: widget.widget_text_color,\n                IconName: widget.widget_icon_class,\n                TintColor: widget.tint_color ? widget.tint_color : '',\n                TintOpacity: widget.tint_opacity ? widget.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      };\n    });\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideForecastStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideForecastStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideForecastStyle.Body = styled.div``;\n\nSideForecastStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nSideForecastStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Button Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst ForecastStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nForecastStyle.Top = styled.div`\n  font-size: calc(${Root.ViewHeightFontSize} * 5);\n  font-family: 'Roboto', 'Helvetica', sans-serif;\n  font-weight: 100;\n  padding-right: calc(${Root.ViewWidthPadding} * 1.2);\n  margin-left: -5px;\n  position: relative;\n\n  &:before,\n  &:after {\n    position: absolute;\n    right: 0;\n  }\n\n  &:before {\n    content: '';\n    top: calc(${Root.ViewWidthPadding} / 2.2);\n    width: calc(${Root.ViewWidthPadding} / 1.4);\n    height: calc(${Root.ViewWidthPadding} / 1.4);\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 100%;\n  }\n\n  &:after {\n    content: 'F';\n    color: ${Theme.Color.White};\n    font-size: calc(${Root.ViewWidthPadding});\n    line-height: 0;\n    right: calc(${Root.ViewWidthPadding} / 5.5);\n    bottom: calc(${Root.ViewWidthPadding} / 1.1);\n  }\n`;\n\nForecastStyle.Bottom = styled.div`\n  span {\n    display: block;\n    line-height: 1.4;\n    font-size: calc(${Root.ViewWidthFontSize} / 1.25);\n  }\n`;\n\nexport default ForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Forecast Component:\n// This is the component to display a\n// Forecast from a specific location.\n\n// TODO: Fix CORS Console Error\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport axios from 'axios';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport ForecastStyle from 'components/library/Forecast/styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  state = {\n    forecast: [],\n  };\n\n  // componentDidMount() {\n  //   axios\n  //     .get(\n  //       'https://api.darksky.net/forecast/20fcdf5192dab046a8b9303c6f6d2667/37.8267,-122.4233'\n  //     )\n  //     .then(res => {\n  //       const forecast = res.data;\n  //       this.setState({ forecast });\n  //     });\n  // }\n\n  render() {\n    return (\n      <ForecastStyle>\n        <ForecastStyle.Top>\n          <span>64</span>\n        </ForecastStyle.Top>\n        <ForecastStyle.Bottom>\n          <span>Overcast Clouds</span>\n          <span>45% Humidity</span>\n        </ForecastStyle.Bottom>\n      </ForecastStyle>\n    );\n  }\n}\n\n// const Forecast = ({}) => (\n//   <ForecastStyle>\n//     <ForecastStyle.Top>\n//       <span>64</span>\n//     </ForecastStyle.Top>\n//     <ForecastStyle.Bottom>\n//       <span>Overcast Clouds</span>\n//       <span>45% Humidity</span>\n//     </ForecastStyle.Bottom>\n//   </ForecastStyle>\n// );\n\nexport default Forecast;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SideForecastStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideForecastStyle from './styles.scss';\n\n// Components\nimport Forecast from '../../../Forecast';\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideForecast = ({\n  BgColor,\n  BgImage,\n  Location,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideForecastStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideForecastStyle.Header>{Location}</SideForecastStyle.Header>\n      <SideForecastStyle.Body>\n        <Forecast Location={Location} />\n      </SideForecastStyle.Body>\n    </Link>\n  </SideForecastStyle>\n);\n\nexport default SideForecast;\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport WidgetContainerStyle from './styles.scss';\n\n// Components\nimport ArticleWidget from '../Library/Article';\nimport CrossWidget from '../Library/Cross';\nimport DefaultWidget from '../Library/Default';\nimport LogoWidget from '../Library/Logo';\nimport MenuWidget from '../Library/MenuWidget';\nimport SideHeaderWidget from '../Library/SideHeader';\nimport SideForecast from '../Library/SideForecast';\nimport SideWidget from '../Library/SideWidget';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Widget Slider:\n// For WidgetContainers with multiple widgets\n// inside of them.\nclass WidgetSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: this.props.Dots ? this.props.Dots : true,\n      speed: 1500,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: 1,\n      autoplay: true,\n      infinite: true,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={g => (this.slider = g)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// WidgetType\nclass WidgetType extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  // Render\n  render() {\n    const WidgetContent = this.props.WidgetContent;\n\n    // If the Widget Content is > 1, then make a Slider.\n    if (WidgetContent.length > 1) {\n      return (\n        // In this case we wrap the entire element in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // SideForecast\n        // SideWidget\n        // Default\n\n        <WidgetContainerStyle.Inner className=\"widget-inner\">\n          <WidgetSlider Dots={this.props.Dots}>\n            {WidgetContent.map((Content, index) => {\n              switch (Content.Style) {\n                case 'Article':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      CallToAction={Content.Meta.Generic.CallToAction}\n                      key={index}\n                    />\n                  );\n                case 'SideWidget':\n                  return (\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      BgQuery={Content.Meta.SideWidget.BgQuery}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                      BgImageFile={Content.Meta.SideWidget.BgImageFile}\n                      key={index}\n                    />\n                  );\n                case 'MenuWidget':\n                  return (\n                    <MenuWidget\n                      BgColor={Content.Meta.MenuWidget.BgColor}\n                      BgImage={Content.Meta.MenuWidget.BgImage}\n                      BgQuery={Content.Meta.MenuWidget.BgQuery}\n                      TextColor={Content.Meta.MenuWidget.TextColor}\n                      TintColor={Content.Meta.MenuWidget.TintColor}\n                      TintOpacity={Content.Meta.MenuWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.MenuWidget.Subhead}\n                      Headline={Content.Meta.MenuWidget.Headline}\n                      IconName={Content.Meta.MenuWidget.IconName}\n                      IconColor={Content.Meta.MenuWidget.IconColor}\n                      CallToAction={Content.Meta.MenuWidget.CallToAction}\n                      key={index}\n                    />\n                  );\n                case 'SideForecast':\n                  return (\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  );\n                case 'Generic':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImageFile={Content.Meta.Generic.BgImageFile}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      CallToAction={Content.Meta.Generic.CallToAction}\n                      HideCarat={Content.Meta.Generic.HideCarat}\n                      key={index}\n                    />\n                  );\n                case 'LogoWidget':\n                  return (\n                    <LogoWidget\n                      BgColor={Content.Meta.LogoWidget.BgColor}\n                      BgImageFile={Content.Meta.LogoWidget.BgImageFile}\n                      BgQuery={Content.Meta.LogoWidget.BgQuery}\n                      TextColor={Content.Meta.LogoWidget.TextColor}\n                      TintColor={Content.Meta.LogoWidget.TintColor}\n                      TintOpacity={Content.Meta.LogoWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.LogoWidget.Subhead}\n                      Headline={Content.Meta.LogoWidget.Headline}\n                      IconName={Content.Meta.LogoWidget.IconName}\n                      IconColor={Content.Meta.LogoWidget.IconColor}\n                      CallToAction={Content.Meta.LogoWidget.CallToAction}\n                      key={index}\n                    />\n                  );\n              }\n            })}\n          </WidgetSlider>\n        </WidgetContainerStyle.Inner>\n      );\n    }\n\n    // If there is only 1 Widget.\n    else {\n      return (\n        // In this case we wrap the INDIVIDUAL elements in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii\n        // if needed, allowing for more customized Widget Components.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // Cross\n        // SideHeader\n        // SideForecast\n        // SideWidget\n        // Default\n        <>\n          {WidgetContent.map((Content, index) => {\n            switch (Content.Style) {\n              case 'Cross':\n                return <CrossWidget key={index} />;\n              case 'Article':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'Generic':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImageFile={Content.Meta.Generic.BgImageFile}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      CallToAction={Content.Meta.Generic.CallToAction}\n                      HideCarat={Content.Meta.Generic.HideCarat}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'LogoWidget':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <LogoWidget\n                      BgColor={Content.Meta.LogoWidget.BgColor}\n                      BgImageFile={Content.Meta.LogoWidget.BgImageFile}\n                      BgQuery={Content.Meta.LogoWidget.BgQuery}\n                      TextColor={Content.Meta.LogoWidget.TextColor}\n                      TintColor={Content.Meta.LogoWidget.TintColor}\n                      TintOpacity={Content.Meta.LogoWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.LogoWidget.Subhead}\n                      Headline={Content.Meta.LogoWidget.Headline}\n                      IconName={Content.Meta.LogoWidget.IconName}\n                      IconColor={Content.Meta.LogoWidget.IconColor}\n                      CallToAction={Content.Meta.LogoWidget.CallToAction}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'MenuWidget':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <MenuWidget\n                      BgColor={Content.Meta.MenuWidget.BgColor}\n                      BgImage={Content.Meta.MenuWidget.BgImage}\n                      BgQuery={Content.Meta.MenuWidget.BgQuery}\n                      TextColor={Content.Meta.MenuWidget.TextColor}\n                      TintColor={Content.Meta.MenuWidget.TintColor}\n                      TintOpacity={Content.Meta.MenuWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.MenuWidget.Subhead}\n                      Headline={Content.Meta.MenuWidget.Headline}\n                      IconName={Content.Meta.MenuWidget.IconName}\n                      IconColor={Content.Meta.MenuWidget.IconColor}\n                      CallToAction={Content.Meta.MenuWidget.CallToAction}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideWidget':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      BgQuery={Content.Meta.SideWidget.BgQuery}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      BgImageFile={Content.Meta.SideWidget.BgImageFile}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideForecast':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideHeader':\n                return (\n                  <SideHeaderWidget\n                    Header={Content.Meta.SideHeader.Header}\n                    IntroCopy={Content.Meta.SideHeader.IntroCopy}\n                    BodyCopy={Content.Meta.SideHeader.BodyCopy}\n                    TextColor={Content.Meta.SideHeader.TextColor}\n                    key={index}\n                  />\n                );\n            }\n          })}\n        </>\n      );\n    }\n  }\n}\n\nconst WidgetContainer = ({ WidgetContent, Flex, Dots, Width }) => (\n  <WidgetContainerStyle className=\"widget\" Flex={Flex} Width={Width}>\n    <WidgetType Dots={Dots} WidgetContent={WidgetContent} />\n  </WidgetContainerStyle>\n);\n\nexport default WidgetContainer;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  src,\n  AltText,\n  className,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={src}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    AltText={AltText}\n    className={className ? className : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  min-width: 100px\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  .widget-inner-wrapper {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: relative;\n    z-index: 10;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  .btn {\n    position: absolute;\n    flex: unset;\n    width: unset;\n    display: block;\n    flex-direction: unset;\n    left: ${Root.ViewWidthPadding};\n    bottom: ${Root.ViewWidthPadding};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%) translateZ(0);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Widget Icon */\n\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%) translateZ(0);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3) translateZ(0);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetInnerWrapper = ({ children, Destination }) => {\n  if (Destination) {\n    return (\n      <Link className=\"widget-inner-wrapper\" to={Destination}>\n        {children}\n      </Link>\n    );\n  } else {\n    return <span className=\"widget-inner-wrapper\">{children}</span>;\n  }\n};\n\nconst DefaultWidget = ({\n  BgColor,\n  BgImage,\n  BgQuery,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n  BgImageFile,\n  BgImageAltText,\n  CallToAction,\n  HideCarat,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={BgImageFile ? Theme.Color.White : TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    HideCarat={HideCarat}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n\n    <WidgetInnerWrapper Destination={Destination}>\n      <WidgetStyle.Subhead className=\"widget-subheadline\">\n        {Subhead}\n      </WidgetStyle.Subhead>\n      <WidgetStyle.Headline className=\"widget-headline\">\n        {Headline}\n      </WidgetStyle.Headline>\n      {HideCarat ? null : (\n        <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      )}\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n      {CallToAction ? <span class=\"cta-btn\">{CallToAction}</span> : null}\n    </WidgetInnerWrapper>\n    {BgImageFile ? <ImgMatch src={BgImageFile} AltText={Headline} /> : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={Headline} /> : null}\n  </WidgetStyle>\n);\n\nexport default DefaultWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const defaultWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = data.map((widget, index) => {\n      return {\n        // Begin WidgetContent\n        Flex: widget.widget_height_fraction ? widget.widget_height_fraction : 1,\n        Width: widget.widget_width_multiple ? widget.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: widget.widget_destination,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: widget.widget_bg_color,\n                BgImage: '',\n                BgQuery: widget.widget_background_image.localFile\n                  ? widget.widget_background_image.localFile.childImageSharp\n                      .fluid\n                  : false,\n                Subhead: widget.widget_subheadline,\n                Headline: widget.widget_headline.text,\n                TextColor: widget.widget_text_color,\n                IconColor: widget.widget_text_color,\n                IconName: widget.widget_icon_class,\n                TintColor: widget.tint_color ? widget.tint_color : '',\n                TintOpacity: widget.tint_opacity ? widget.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      };\n    });\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideHeaderWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: none;\n  position: relative;\n  overflow: hidden;\n  max-width: 350px;\n  cursor: crosshair;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSideHeaderWidgetStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Root.ViewWidthPadding};\n  flex: 1;\n  width: 100%;\n  position: relative;\n`;\n\nSideHeaderWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  opacity: 0.3;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideHeaderWidgetStyle.Body = styled.div``;\n\nSideHeaderWidgetStyle.IntroCopy = styled.p`\n  font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n  padding-bottom: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: light;\n`;\n\nSideHeaderWidgetStyle.BodyCopy = styled.p`\n  font-size: ${Root.ViewWidthFontSize};\n  padding-top: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: regular;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: calc(${Root.ViewWidthFontSize} * 1.5);\n    height: 1px;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n`;\n\nexport default SideHeaderWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideHeaderWidgetStyle.js:\n\n// Core\nimport React from 'react';\n\n// Styles\nimport SideHeaderWidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideHeaderWidget = ({ Header, IntroCopy, BodyCopy, TextColor }) => (\n  <SideHeaderWidgetStyle TextColor={TextColor} className=\"widget-content\">\n    <SideHeaderWidgetStyle.Inner>\n      <SideHeaderWidgetStyle.Header>{Header}</SideHeaderWidgetStyle.Header>\n      <SideHeaderWidgetStyle.Body>\n        <SideHeaderWidgetStyle.IntroCopy>\n          {IntroCopy}\n        </SideHeaderWidgetStyle.IntroCopy>\n        <SideHeaderWidgetStyle.BodyCopy>\n          {BodyCopy}\n        </SideHeaderWidgetStyle.BodyCopy>\n      </SideHeaderWidgetStyle.Body>\n    </SideHeaderWidgetStyle.Inner>\n  </SideHeaderWidgetStyle>\n);\n\nexport default SideHeaderWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Title Widget Map inside the Columns Map.\nexport const sideHeaderWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = [\n      {\n        // Begin WidgetContent\n        Flex: 1,\n        Width: 6,\n        WidgetContent: [\n          {\n            Destination: null,\n            Style: 'SideHeader',\n            Meta: {\n              SideHeader: {\n                Header: data.widget_headline.text,\n                IntroCopy: data.widget_intro_copy,\n                BodyCopy: data.widget_body_copy,\n                TextColor: Theme.Color.Nightsky,\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      },\n    ];\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n      height: 100%;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    z-index: 5;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideWidgetStyle.Body = styled.div``;\n\nSideWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: calc(${Root.Size} / 1.5);\n`;\n\nSideWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideWidgetStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgQuery from 'components/core/ImgQuery';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideWidget = ({\n  BgColor,\n  BgQuery,\n  BgImageFile,\n  Header,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideWidgetStyle\n    BgColor={BgColor}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n    <Link to={Destination}>\n      <SideWidgetStyle.Header>{Header}</SideWidgetStyle.Header>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideWidgetStyle.Body>\n        <SideWidgetStyle.Subhead>{Subhead}</SideWidgetStyle.Subhead>\n      </SideWidgetStyle.Body>\n      <SideWidgetStyle.Icon\n        className={'fas fa-' + IconName}\n        Color={IconColor}\n      />\n    </Link>\n    {BgImageFile ? <ImgMatch src={BgImageFile} AltText={Header} /> : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={Header} /> : null}\n  </SideWidgetStyle>\n);\n\nexport default SideWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const sideWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = [\n      {\n        // Begin WidgetContent\n        Flex: data.widget_height_fraction ? data.widget_height_fraction : 1,\n        Width: data.widget_width_multiple ? data.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: data.widget_destination,\n            Style: 'SideWidget',\n            Meta: {\n              SideWidget: {\n                BgColor: data.widget_bg_color,\n                BgImage: '',\n                BgQuery: data.widget_background_image.localFile\n                  ? data.widget_background_image.localFile.childImageSharp.fluid\n                  : false,\n                Subhead: data.widget_subheadline,\n                Header: data.widget_headline.text,\n                TextColor: data.widget_text_color,\n                IconColor: data.widget_text_color,\n                IconName: data.widget_icon_class,\n                TintColor: data.tint_color ? data.tint_color : '',\n                TintOpacity: data.tint_opacity ? data.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      },\n    ];\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n"],"sourceRoot":""}