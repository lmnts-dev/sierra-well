{"version":3,"sources":["webpack:///./src/templates/Location/Special/layout.js","webpack:///./src/templates/Location/Special/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/helpers/hexToRGB.js","webpack:///./src/components/library/SuggestionList/styles.scss.js","webpack:///./src/components/library/SuggestionList/index.js","webpack:///./src/components/library/PageTabs/styles.scss.js","webpack:///./src/components/library/PageTabs/index.js","webpack:///./src/templates/Location/Components/LocationPageWrapper/index.js"],"names":["TemplateLayout","_ref","LocationData","Location","Headline","react_default","a","createElement","LocationPageWrapper","console","log","SimpleSection","BgColor","Theme","Color","Snow","BgQuery","BgAlt","FluidHeight","Gutter","LocationLandingTemplate","_ref2","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","query","LocationLandingPage","props","layout","data","allLocationsJson","edges","node","location","about","headline","SlideSectionStyle","styled","div","_templateObject","Base","Size","Sm","Root","Black","Inner","SectionInnerStyle","_templateObject2","Grid","Left","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","_templateObject5","TextColor","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","className","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Fragment","Helmet","rel","type","href","lib_default","ref","h","slider","children","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","Btn","Destination","Label","IconclassName","SlideSection_SectionSlider","TextColr","map","Widget","index","Container","key","WidgetContent","Flex","BlockStyle","AlignItems","Style","css","BgTint","Width","maxWidth","SiteWidth","Padding","Block","styles_scss","ImgMatch","src","AltText","WrapperLock","createGlobalStyle","Media","Md","WrapperRelease","SimpleSectionStyle","Primary","White","Right","SimpleSection_styles_scss","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","PrimaryColor","SecondaryColor","TertiaryColor","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","Background","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","WidgetSection","Slider","WidgetSection_styles_scss","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","allQuestionCategoriesJson","PageTheme","slug","title","BgImageFile","coverImage","BgImageAltText","tags","includes","toLowerCase","Slug","_234893462","QuestionListings","Nightsky","QuestionListings_QuestionCards","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","SimpleHeroStyle","Tint","SimpleHero","Hero","BreadCrumb","Link","Bread","Crumbs","crumb","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_4273665236","QuestionFooter","HideCategories","IconClass","IconPosition","QuestionFooter_BrowseCategories","SocialStripStyle","Margin","span","SocialStrip","target","hexToRGB","hex","alpha","r","parseInt","slice","g","b","SuggestionListStyle","GradientColor","Button","SuggestionList","List","BaseUrl","Affix","item","name","PageTabsStyle","PageTabs","DestinationPath","LocationPath","pathname","LocationPathWithSlash","matchPath","destination","currentLocation","AddClass","LocationTheme","react__WEBPACK_IMPORTED_MODULE_1___default","components_core_Layout__WEBPACK_IMPORTED_MODULE_2__","Secondary","Tertiary","templates_SubLevelPage__WEBPACK_IMPORTED_MODULE_3__","components_library_Hero_SimpleHero__WEBPACK_IMPORTED_MODULE_4__","components_library_Block__WEBPACK_IMPORTED_MODULE_15__","components_library_Breadcrumb__WEBPACK_IMPORTED_MODULE_9__","geography","state","components_library_Btn___WEBPACK_IMPORTED_MODULE_12__","IconFas","contactDetails","address","meta","maps","External","components_library_PageTabs__WEBPACK_IMPORTED_MODULE_14__","nearby","components_library_SuggestionList__WEBPACK_IMPORTED_MODULE_13__"],"mappings":"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","file":"component---src-templates-location-special-index-js-c0ca1171a0a1afe26280.js","sourcesContent":["// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\nimport PageTabs from 'components/library/PageTabs';\n\n// Template Specific Components\nimport LocationPageWrapper from '../Components/LocationPageWrapper';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({ LocationData, Location, Headline }) => {\n  return (\n    <LocationPageWrapper\n      Headline={Headline}\n      LocationData={LocationData}\n      Location={Location}\n    >\n      {console.log(Location)}\n\n      {/* ///////////// */}\n\n      <SimpleSection\n        BgColor={Theme.Color.Snow}\n        BgQuery=\"placeholder_bg_4.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        FluidHeight={true}\n        Gutter={[0, 0, 0, 0]}\n      />\n\n      {/* ///////////// */}\n    </LocationPageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LocationLandingTemplate = ({ LocationData, Location }) => {\n  return <TemplateLayout LocationData={LocationData} Location={Location} />;\n};\n\nexport default LocationLandingTemplate;\n","// templates/Location/Landing/index.js:\n// This is the Location Landing page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LocationLandingTemplate from './layout';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationLandingPage = props => {\n  return (\n    <LocationLandingTemplate\n      LocationData={props.data.allLocationsJson.edges[0].node}\n      Location={props.location}\n      Headline={props.data.allLocationsJson.edges[0].node.about.headline}\n    />\n  );\n};\n\nexport default LocationLandingPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n//\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const query = graphql`\n  query($Slug: String!) {\n    allLocationsJson(filter: { slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          slug\n          name\n          geography {\n            city\n            state\n            country\n          }\n          status {\n            delivery\n            store\n          }\n          meta {\n            reserveSpot\n            menu\n            maps\n          }\n          contactDetails {\n            phone\n            location {\n              address\n              state\n            }\n            hours {\n              days\n              startTime\n              endTime\n            }\n          }\n          nearby {\n            name\n            slug\n          }\n          about {\n            headline\n            PageTheme {\n              Color {\n                Background\n                Primary\n                Secondary\n                Tertiary\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: visible;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle Flex={Flex}>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgQuery,\n  BgAlt,\n  Flex,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgQuery} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Convert #HEXCODES to RGBA\n// hexToRGB('#FF0000', 0.5);\n\nconst hexToRGB = (hex, alpha) => {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  } else {\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n  }\n};\n\nexport default hexToRGB;\n","// <SuggestionListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SuggestionListStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size} / 4);\n      font-size: 1.2rem;\n\n      &:first-child {\n        opacity: .3;\n      }\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.2rem;\n          font-weight: normal;\n          padding: 0 calc(${Root.Size} / 4);\n        }\n      }\n    }\n  }\n`;\n\nexport default SuggestionListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SuggestionList Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport SuggestionListStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst SuggestionList = ({\n  List,\n  Label,\n  BaseUrl,\n  TextColor,\n  GradientColor,\n  Padding,\n  Affix,\n}) => (\n  <SuggestionListStyle\n    className=\"suggestion-list\"\n    GradientColor={GradientColor}\n    Padding={Padding}\n  >\n    <ul>\n      {Label ? <li>{Label}</li> : null}\n      {List.map((item, index) => (\n        <li key={index}>\n          <Btn\n            BgColor=\"none\"\n            Label={item.name}\n            Destination={\n              Affix ? BaseUrl + item.slug + Affix : BaseUrl + item.slug\n            }\n            TextColor={TextColor}\n          />\n        </li>\n      ))}\n    </ul>\n  </SuggestionListStyle>\n);\n\nexport default SuggestionList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <PageTabsStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const PageTabsStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size});\n      font-size: 1.5rem;\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.8rem;\n          font-weight: normal;\n          padding: 0;\n          box-shadow: none;\n          opacity: .6;\n\n          &:hover {\n            box-shadow: none;\n            opacity: 1;\n          }\n        }\n\n        &.active {\n          .btn-inner {\n            font-weight: bold;\n            opacity: 1;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTabsStyle;\n//////////////////////////////////////////////////////////////////////\n","// PageTabs Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport PageTabsStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst PageTabs = ({\n  List,\n  Label,\n  Location,\n  BaseUrl,\n  TextColor,\n  Padding,\n  Affix,\n}) => {\n  return (\n    <PageTabsStyle className=\"page-tabs\" Padding={Padding}>\n      <ul>\n        {List.map((item, index) => {\n          // Creating slugs.\n          const DestinationPath = Affix\n            ? BaseUrl + item.slug + Affix\n            : BaseUrl + item.slug;\n          const LocationPath = Location.pathname;\n          const LocationPathWithSlash = Location.pathname + '/';\n\n          // Helper function to match our locations.\n          function matchPath(destination, currentLocation) {\n\n            // If location & destination match:\n            if (destination == currentLocation) {\n              let className = 'active';\n              return className;\n            } else {\n\n              // Check and see if our destination matches without the\n              // last `/` of the url. I.e. `locations/reno vs locations/reno/`\n              if (destination == currentLocation.slice(0, -1)) {\n                let className = 'active';\n                return className;\n              } else {\n\n                // Then inactive:\n                let className = 'inactive';\n                return 'inactive';\n              }\n            }\n          }\n\n          // Return PageTabs.\n          return (\n            <li key={index}>\n              <Btn\n                AddClass={matchPath(DestinationPath, LocationPathWithSlash)}\n                BgColor=\"none\"\n                Label={item.name}\n                Destination={DestinationPath}\n                TextColor={TextColor}\n              />\n              {console.log('DestinationPath: ' + DestinationPath)}\n              {console.log('LocationPath: ' + LocationPath)}\n              {console.log('LocationPathWithSlash: ' + LocationPathWithSlash)}\n              {console.log(\n                'ClassName: ' +\n                  matchPath(DestinationPath, LocationPathWithSlash)\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </PageTabsStyle>\n  );\n};\n\nexport default PageTabs;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\nimport PageTabs from 'components/library/PageTabs';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// LocationPageWrapper component for page theming.\nconst LocationPageWrapper = ({ children, Headline, LocationData, Location }) => {\n  const LocationTheme = LocationData.about.PageTheme;\n\n  return (\n    <Layout\n      BgColor={LocationTheme.Color.Background}\n      PrimaryColor={LocationTheme.Color.Primary}\n      SecondaryColor={LocationTheme.Color.Secondary}\n      TertiaryColor={LocationTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={LocationTheme.Color.Background}\n        PrimaryColor={LocationTheme.Color.Primary}\n        SecondaryColor={LocationTheme.Color.Secondary}\n        TertiaryColor={LocationTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[2, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <Block maxWidth={0.5}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: 'locations/',\n                  Label: 'Locations',\n                },\n                {\n                  Destination: 'locations/',\n                  Label: LocationData.geography.state,\n                },\n                {\n                  Destination:\n                    'locations/' +\n                    LocationData.geography.state.toLowerCase() +\n                    '/' +\n                    LocationData.slug,\n                  Label: LocationData.name,\n                },\n              ]}\n              TextColor={LocationTheme.Color.Primary}\n            />\n            <h1 className=\"h2\">{LocationData.about.headline}</h1>\n            <Btn\n              IconClass=\"plus\"\n              Label=\"View Menu\"\n              BgColor={LocationTheme.Color.Primary}\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={\n                '/menu/' +\n                LocationData.geography.state.toLowerCase() +\n                '/' +\n                LocationData.slug\n              }\n              IconPosition=\"left\"\n              IconFas\n            />\n            <Btn\n              AddClass=\"btn-secondary\"\n              IconClass=\"map-marker-alt\"\n              Label={LocationData.contactDetails.location.address}\n              BgColor=\"none\"\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={LocationData.meta.maps}\n              IconPosition=\"left\"\n              External\n              IconFas\n            />\n            {/* <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n          </Block>\n\n          <PageTabs\n            Location={Location}\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={[\n              { name: 'About', slug: ''  },\n              { name: 'Specials', slug: 'specials' },\n              { name: 'Menu', slug: 'menu' },\n            ]}\n            TextColor={LocationTheme.Color.Primary}\n            Padding={[1.45, 0, 0, 0]}\n          />\n\n          {console.log(LocationData.nearby)}\n        </SimpleHero>\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n          Tint={0.05}\n        >\n          <SuggestionList\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={LocationData.nearby}\n            Affix=\"/menu\"\n            Label=\"Nearby\"\n            TextColor={LocationTheme.Color.Primary}\n            GradientColor={LocationTheme.Color.Background}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n\nexport default LocationPageWrapper;\n"],"sourceRoot":""}