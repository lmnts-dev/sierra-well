{"version":3,"sources":["webpack:///./src/templates/Special/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/Section/LearnSection/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/core-js/modules/_object-gopn.js"],"names":["__webpack_require__","d","__webpack_exports__","query","SpecialsArticlePage","props","node","data","allPrismicSpecial","edges","react_default","a","createElement","Fragment","title","text","console","log","SlideSectionStyle","styled","div","_templateObject","Theme","Base","Size","Sm","Root","Color","Black","Inner","SectionInnerStyle","_templateObject2","Gutter","Grid","Left","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","Headline","_templateObject5","TextColor","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","className","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Helmet","rel","type","href","lib_default","ref","h","slider","children","React","Component","SlideSection","_ref","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","Btn","Destination","BgColor","Label","IconclassName","SlideSection_SectionSlider","TextColr","map","Widget","index","Container","key","WidgetContent","Flex","BlockStyle","flex","AlignItems","Style","css","JustifyContent","BgTint","Width","maxWidth","SiteWidth","Padding","Block","BgQuery","BgAlt","styles_scss","ImgMatch","src","AltText","WrapperLock","createGlobalStyle","Media","Md","WrapperRelease","SimpleSectionStyle","Primary","White","Right","FluidHeight","SimpleSection","SimpleSection_styles_scss","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","WidgetSection","Slider","WidgetSection_styles_scss","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","PrimaryColor","SecondaryColor","TertiaryColor","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","Background","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","_ref2","ItemProp","itemProp","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","allQuestionCategoriesJson","PageTheme","slug","BgImageFile","coverImage","BgImageAltText","tags","includes","toLowerCase","Slug","_234893462","QuestionListings","Nightsky","QuestionListings_QuestionCards","SimpleHeroStyle","Tint","TintBorder","SimpleHero","Hero","BreadCrumb","Link","Bread","Crumbs","crumb","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_4273665236","QuestionFooter","HideCategories","IconClass","IconPosition","QuestionFooter_BrowseCategories","SocialStripStyle","Margin","span","SocialStrip","Location","target","SplitSectionStyle","Site","SplitSection","SplitSection_styles_scss","SlideSectionWithData","BaseUrl","Data","Secondary","Tags","Tag","react__WEBPACK_IMPORTED_MODULE_1___default","components_library_Section_SlideSection__WEBPACK_IMPORTED_MODULE_2__","Prefix","LearnSection","Categories","Filter","components_library_Block__WEBPACK_IMPORTED_MODULE_3__","Category","anObject","$flags","DESCRIPTORS","$toString","define","fn","RegExp","prototype","source","flags","R","concat","undefined","name","f","configurable","get","global","inheritIfRequired","dP","gOPN","isRegExp","$RegExp","proto","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","constructor","proxy","set","it","keys","length","isObject","setPrototypeOf","module","exports","that","C","P","S","check","O","TypeError","test","buggy","Function","Array","e","__proto__","pIE","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","getOwnPropertyDescriptor","$keys","hiddenKeys","getOwnPropertyNames"],"mappings":"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","file":"component---src-templates-special-index-js-0473d56393b7a3f6688f.js","sourcesContent":["// Index.js:\n// This is the home page of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Templates\nimport QuestionTemplate from './layout';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Question Template\nconst SpecialsArticlePage = props => {\n\n  const node = props.data.allPrismicSpecial.edges[0].node;\n\n  return (\n    <>\n      <h1>{node.data.title.text}</h1>\n      {console.log(node.data)}\n    </>\n  );\n};\n\nexport default SpecialsArticlePage;\n\n// GraphQL Queries\n// ///////////////////////////////////////////////////////////////////\nexport const query = graphql`\n  query($Id: String!) {\n    allPrismicSpecial(filter: { id: { eq: $Id } }) {\n      edges {\n        node {\n          id\n          data {\n            title {\n              text\n            }\n            description\n            category\n            tags\n            color_background\n            color_primary\n            color_secondary\n            color_tertiary\n            elements {\n              ... on PrismicSpecialElementsHero {\n                slice_type\n                primary {\n                  body_text\n                  text_alignment\n                  background_color\n                  text_color\n                  tint_color\n                  tint_opacity\n                  breadcrumb\n                  cta_label\n                  cta_bg_color\n                  cta_text_color\n                  cta_destination\n                  padding\n                }\n              }\n              ... on PrismicSpecialElementsSimpleSection {\n                slice_type\n                primary {\n                  subheadline\n                  text_color\n                  background_color\n                  text_alignment\n                  padding\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// ////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgQuery} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle Flex={Flex}>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgQuery,\n  BgAlt,\n  Flex,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgQuery} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: space-between;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/' + BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={\n          this.props.Prefix\n            ? this.props.Prefix + this.props.Data.Name\n            : this.props.Data.Name\n        }\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ Categories, Filter, Prefix }) => {\n  if (Filter == 'all') {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a section. */}\n        {Categories.map((Category, index) => {\n          return (\n            <SlideSectionWithData\n              key={index}\n              BaseUrl=\"learn\"\n              Data={Category.node}\n            />\n          );\n        })}\n      </Block>\n    );\n  } else {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a the desired section. */}\n        {Categories.map((Category, index) => {\n          if (Category.node.Slug == Filter) {\n            return (\n              <SlideSectionWithData\n                key={index}\n                BaseUrl=\"learn\"\n                Data={Category.node}\n                Prefix={Prefix ? Prefix : null}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </Block>\n    );\n  }\n};\n\nexport default LearnSection;\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n"],"sourceRoot":""}