{"version":3,"sources":["webpack:///./src/templates/Question/layout.js","webpack:///./src/templates/Question/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/components/library/Section/LearnSection/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/core-js/modules/_object-gopn.js"],"names":["PostDetails","_ref","Author","Time","react_default","a","createElement","className","itemProp","TagList","_ref2","baseUrl","categorySlug","list","Tags","CategorySlug","Fragment","Breadcrumb","Crumbs","map","tag","index","Destination","Label","string","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","TextColor","Theme","Color","White","QuestionTemplate","_ref3","BgQuery","PageTheme","Location","AllCategories","QuestionData","Layout","BgColor","Background","PrimaryColor","Primary","SecondaryColor","Secondary","TertiaryColor","Tertiary","SubLevelPage","itemScope","itemType","SimpleHero","Size","BgAlt","title","Tint","Block","AlignItems","Width","maxWidth","layout_TagList","tags","console","log","SocialStrip","ItemProp","SimpleSection","Snow","Nightsky","Padding","layout_PostDetails","date","author","shortAnswer","longAnswer","LearnSection","Prefix","Categories","Filter","category","QuestionFooter","__webpack_require__","d","__webpack_exports__","query","QuestionPage","props","QuestionCategory","data","allQuestionsJson","edges","node","allQuestionCategoriesJson","Category","Name","layout","coverImage","childImageSharp","fluid","location","href","Slug","key","SlideSectionStyle","styled","div","_templateObject","Base","Sm","Root","Black","Inner","SectionInnerStyle","_templateObject2","Gutter","Grid","Left","Content","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","Headline","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Helmet","rel","type","lib_default","ref","h","slider","children","React","Component","SlideSection","Widgets","Header","Icon","ViewAll","SlideSection_styles_scss","Btn","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","WidgetContent","Flex","WrapperLock","createGlobalStyle","Media","Md","WrapperRelease","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","ImgQuery","alt","imgClass","objectFit","objectPosition","fadeIn","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","SiteWidth","SidebarWidgetStyle","FadeIn","Radius","BgImage","TintColor","TintOpacity","Subhead","i","SidebarWidget","IconName","IconColor","styles_scss","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","BlockStyle","Style","css","BgTint","SimpleSectionStyle","Right","FluidHeight","SimpleSection_styles_scss","WidgetSection","Slider","WidgetSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroInner","SimpleHeroStyle","SimpleHero_styles_scss","Hero_HeroInner","BreadCrumb","Link","Bread","crumb","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","TagSlug","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","Question","filteredCategory","slug","BgImageFile","BgImageAltText","includes","_234893462","QuestionListings","QuestionListings_QuestionCards","Mint","Tahoe","Dank","Sunset","PurpleHaze","BrowseCategories","categoryWidgets","widgetArray","Meta","Generic","IconSize","viewAll","unshift","Slate","_4273665236","HideCategories","QuestionFooter_BrowseCategories","SocialStripStyle","span","target","SlideSectionWithData","BaseUrl","Data","Tag","react__WEBPACK_IMPORTED_MODULE_1___default","components_library_Section_SlideSection__WEBPACK_IMPORTED_MODULE_2__","components_library_Block__WEBPACK_IMPORTED_MODULE_3__","SplitSectionStyle","Site","SplitSection","SplitSection_styles_scss","anObject","$flags","DESCRIPTORS","$toString","define","fn","prototype","source","flags","R","concat","undefined","name","f","configurable","get","global","inheritIfRequired","dP","gOPN","isRegExp","$RegExp","proto","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","constructor","proxy","set","it","keys","length","isObject","setPrototypeOf","module","exports","that","C","P","S","check","O","TypeError","test","buggy","Function","Array","e","__proto__","pIE","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","getOwnPropertyDescriptor","$keys","hiddenKeys","getOwnPropertyNames"],"mappings":"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","file":"component---src-templates-question-index-js-24aef03c00df101bcb6a.js","sourcesContent":["// templates/Question.js:\n// This is the Question template of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/core/Layout';\n\n// Components\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\n\n// Hero Components\nimport SimpleHero from 'components/library/Hero/SimpleHero';\n\n//// Section Components\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport LearnSection from 'components/library/Section/LearnSection';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport SocialStrip from 'components/library/SocialStrip';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Slugify Helper\n\nfunction slugify(string) {\n  const a = 'àáäâãåăæçèéëêǵḧìíïîḿńǹñòóöôœṕŕßśșțùúüûǘẃẍÿź·/_,:;';\n  const b = 'aaaaaaaaceeeeghiiiimnnnoooooprssstuuuuuwxyz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with ‘and’\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n}\n\n// Post Details Snippet\nconst PostDetails = ({ Author, Time }) => (\n  <span className=\"post-details\">\n    Answered <time itemProp=\"datePublished\">{Time}</time> by{' '}\n    <span itemProp=\"author\">{Author}</span>\n  </span>\n);\n\n// Breadcrumb Tag List\nconst TagList = ({ Tags, CategorySlug }) => {\n  // Tag Crumb Function\n  function tagCrumbs(baseUrl, categorySlug, list) {\n    let crumbs = list.map((tag, index) => {\n      if (index == 0) {\n        return {\n          Destination: '/' + baseUrl + '/' + categorySlug,\n          Label: categorySlug + ' Cannabis Questions',\n        };\n      } else {\n        return {\n          Destination: '/' + baseUrl + '/' + categorySlug + '/' + slugify(tag),\n          Label: tag,\n        };\n      }\n    });\n\n    return crumbs;\n  }\n\n  return (\n    <>\n      <Bread\n        Crumbs={tagCrumbs('learn', CategorySlug, Tags)}\n        TextColor={Theme.Color.White}\n      />\n    </>\n  );\n};\n\n// The Question Template\nconst QuestionTemplate = ({\n  BgQuery,\n  PageTheme,\n  Location,\n  CategorySlug,\n  AllCategories,\n  QuestionData,\n}) => (\n  <Layout\n    BgColor={PageTheme.Color.Background}\n    PrimaryColor={PageTheme.Color.Primary}\n    SecondaryColor={PageTheme.Color.Secondary}\n    TertiaryColor={PageTheme.Color.Tertiary}\n  >\n    <SubLevelPage\n      BgColor={PageTheme.Color.Background}\n      PrimaryColor={PageTheme.Color.Primary}\n      SecondaryColor={PageTheme.Color.Secondary}\n      TertiaryColor={PageTheme.Color.Tertiary}\n    >\n      {/* Schema.org BlogPosting */}\n      {/* Read more: https://schema.org/BlogPosting */}\n\n      <article itemScope itemType=\"http://schema.org/BlogPosting\">\n        {/* ///////////// */}\n\n        <SimpleHero\n          Size=\"2\"\n          BgQuery={BgQuery}\n          BgAlt={QuestionData.title}\n          TextColor={Theme.Color.White}\n          Tint=\"0.5\"\n        >\n          <Block AlignItems=\"flex-start\" Width={1} maxWidth={0.5}>\n            <TagList Tags={QuestionData.tags} CategorySlug={CategorySlug} />\n\n            {console.log(QuestionData.tags)}\n\n            <h1 itemProp=\"name\">{QuestionData.title}</h1>\n            <SocialStrip Location={Location} TextColor={Theme.Color.White} />\n          </Block>\n        </SimpleHero>\n\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.White}\n          ItemProp=\"articleBody\"\n        >\n          {/* ///////////// */}\n\n          <SimpleSection\n            BgColor={Theme.Color.Snow}\n            TextColor={Theme.Color.Nightsky}\n          >\n            <Block Padding={[1, 0, 1, 0]} maxWidth={0.5}>\n              <PostDetails\n                Time={QuestionData.date}\n                Author={QuestionData.author}\n              />\n              <h3>{QuestionData.shortAnswer}</h3>\n              <p className=\"p-md\">{QuestionData.longAnswer}</p>\n            </Block>\n          </SimpleSection>\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n        {/* ///////////// */}\n      </article>\n\n      {/* The Related Categories. */}\n      <SubLevelPageContent\n        BgColor={Theme.Color.Snow}\n        TextColor={Theme.Color.Nightsky}\n      >\n        <LearnSection\n          Prefix=\"More from \"\n          Categories={AllCategories}\n          Filter={QuestionData.category.toLowerCase()}\n        />\n      </SubLevelPageContent>\n\n      {/* The Question / Category / Tag footer. */}\n      <SubLevelPageContent\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n      >\n        {/* ///////////// */}\n\n        <QuestionFooter />\n\n        {/* ///////////// */}\n      </SubLevelPageContent>\n    </SubLevelPage>\n  </Layout>\n);\n\nexport default QuestionTemplate;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Index.js:\n// This is the home page of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Templates\nimport QuestionTemplate from './layout';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Question Template\nconst QuestionPage = props => {\n  let QuestionCategory = props.data.allQuestionsJson.edges[0].node.category;\n  let AllCategories = props.data.allQuestionCategoriesJson.edges;\n\n  return (\n    <>\n      {AllCategories.map((Category, index) => {\n        if (Category.node.Name == QuestionCategory) {\n          return (\n            <QuestionTemplate\n              PageTheme={Category.node.PageTheme}\n              BgQuery={props.data.coverImage.childImageSharp.fluid}\n              Location={props.location.href}\n              AllCategories={AllCategories}\n              CategorySlug={Category.node.Slug}\n              QuestionData={props.data.allQuestionsJson.edges[0].node}\n              key={index}\n            />\n          );\n        } else {\n          return null;\n        }\n      })}\n    </>\n  );\n};\n\nexport default QuestionPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\nexport const query = graphql`\n  query($Slug: String!, $CoverImage: String!) {\n    coverImage: file(relativePath: { eq: $CoverImage }) {\n      childImageSharp {\n        fluid(maxWidth: 1280) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n\n    allQuestionsJson(filter: { slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          slug\n          coverImage\n          date\n          author\n          title\n          category\n          tags\n          shortAnswer\n          longAnswer\n        }\n      }\n    }\n\n    allQuestionCategoriesJson {\n      edges {\n        node {\n          id\n          Name\n          Icon\n          Headline\n          Slug\n          Tags {\n            Name\n            Icon\n            Slug\n          }\n          Breadcrumb {\n            Destination\n            Label\n          }\n          PageTheme {\n            Color {\n              Background\n              Primary\n              Secondary\n              Tertiary\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: visible;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: scroll; /* has to be scroll, not auto */\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: unset;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: hidden;\n      height: auto;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden; /* has to be scroll, not auto */\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  query,\n  alt,\n  imgClass,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={query}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    alt={alt}\n    className={imgClass ? imgClass : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n  padding-right: ${Root.Size};\n  padding-top: calc(${Root.Size} * ${props => (props.Size ? props.Size : '2')});\n  padding-bottom: calc(\n    ${Root.Size} * ${props => (props.Size ? props.Size : '2')}\n  );\n  position: relative;\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery query={BgQuery} alt={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgQuery query={BgQuery} alt={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgQuery ? (\n        <div className=\"section-img\">\n          <ImgQuery query={BgQuery} alt={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n  overflow: hidden;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0, 0.5);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Size,\n  BgQuery,\n  BgAlt,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n    >\n      {children}\n    </HeroInner>\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery query={BgQuery} alt={BgAlt} />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n        {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={Question.node.category + ' & Cannabis | ' + Question.node.title}\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={Question.node.category + ' & Cannabis | ' + Question.node.title}\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={Question.node.category + ' & Cannabis | ' + Question.node.title}\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\nconst Widgets = [\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/all/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Nightsky,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'All Questions',\n            TextColor: Theme.Color.White,\n            IconColor: Theme.Color.White,\n            IconName: 'question', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/recreational/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Mint,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'Recreational',\n            TextColor: Theme.Color.Black,\n            IconColor: Theme.Color.Black,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/medical/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Tahoe,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'Medical',\n            TextColor: Theme.Color.White,\n            IconColor: Theme.Color.White,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/safety/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Dank,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'Safety',\n            TextColor: Theme.Color.Black,\n            IconColor: Theme.Color.Black,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/industry/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.Sunset,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'Industry',\n            TextColor: Theme.Color.White,\n            IconColor: Theme.Color.White,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n  {\n    // Begin WidgetContent\n    Flex: 1,\n    WidgetContent: [\n      {\n        Destination: '/learn/california/',\n        Style: 'Generic',\n        Meta: {\n          Generic: {\n            BgColor: Theme.Color.PurpleHaze,\n            BgImage: '',\n            Subhead: '',\n            Headline: 'California',\n            TextColor: Theme.Color.White,\n            IconColor: Theme.Color.White,\n            IconName: 'leaf', // FontAwesome Icon Name\n            TintColor: '',\n            TintOpacity: '',\n            IconSize: '',\n          },\n        },\n      },\n    ],\n    // End WidgetContent\n  },\n];\n\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location }) => (\n  <SocialStripStyle TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SlideSection from 'components/library/Section/SlideSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/' + BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={\n          this.props.Prefix\n            ? this.props.Prefix + this.props.Data.Name\n            : this.props.Data.Name\n        }\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ Categories, Filter, Prefix }) => {\n  if (Filter == 'all') {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a section. */}\n        {Categories.map((Category, index) => {\n          return (\n            <SlideSectionWithData\n              key={index}\n              BaseUrl=\"learn\"\n              Data={Category.node}\n            />\n          );\n        })}\n      </Block>\n    );\n  } else {\n    return (\n      <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n        {/* Loop through each of our categories and display a the desired section. */}\n        {Categories.map((Category, index) => {\n          if (Category.node.Slug == Filter) {\n            return (\n              <SlideSectionWithData\n                key={index}\n                BaseUrl=\"learn\"\n                Data={Category.node}\n                Prefix={Prefix ? Prefix : null}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </Block>\n    );\n  }\n};\n\nexport default LearnSection;\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: space-between;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n"],"sourceRoot":""}