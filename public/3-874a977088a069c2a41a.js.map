{"version":3,"sources":["webpack:///./src/components/library/Section/styles.scss.js","webpack:///./src/components/core/ImgMatch/index.js","webpack:///./src/components/library/Widgets/Container/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Article/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/index.js","webpack:///./src/components/library/Widgets/Library/MenuWidget/styles.scss.js","webpack:///./src/components/library/ContentOverlay/Menu/styles.scss.js","webpack:///./src/components/library/ContentOverlay/styles.scss.js","webpack:///./src/components/library/ContentOverlay/Menu/index.js","webpack:///./src/components/library/Widgets/Library/MenuWidget/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/styles.scss.js","webpack:///./src/components/library/Forecast/styles.scss.js","webpack:///./src/components/library/Forecast/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/index.js","webpack:///./src/components/library/Widgets/Container/index.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Widgets/Library/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/index.js","webpack:///./src/helpers/hexToRGB.js","webpack:///./src/components/library/Widgets/Library/SideHeader/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideHeader/index.js","webpack:///./src/components/library/Widgets/Library/SideWidget/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideWidget/index.js"],"names":["SectionInnerStyle","styled","div","_templateObject","Root","Grid","Gutter","Left","Size","SectionContentStyle","_templateObject2","props","FullWidth","Theme","Base","SiteWidth","Image","_ref","AltText","src","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","data","_public_static_d_346298689_json__WEBPACK_IMPORTED_MODULE_3__","match","useMemo","allFile","edges","find","_ref2","node","relativePath","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_5___default","Object","assign","className","objectFit","objectPosition","alt","fluid","childImageSharp","WidgetContainerStyle","Sm","Flex","Width","Inner","Radius","Transition","Duration","CssEase","Color","Black","WidgetStyle","styles_scss_templateObject","BgColor","White","TextColor","BgImage","TintColor","TintOpacity","ViewWidthPadding","Media","Md","Subhead","styles_scss_templateObject2","ViewWidthFontSize","Headline","_templateObject3","Icon","i","_templateObject4","IconSize","CrossWidgetStyle","Cross_styles_scss_templateObject","Nav","Footer","Cross_styles_scss_templateObject2","CrossWidget","objectDestructuringEmpty_default","react_default","Cross_styles_scss","styles_scss","Default","Nightsky","Destination","IconColor","Primary","IconName","Slate","Gunmetal","MenuWidget_styles_scss_templateObject","MenuWidget_styles_scss_templateObject2","styles_scss_templateObject3","styles_scss_templateObject4","MenuOverlayStyle","Menu_styles_scss_templateObject","OverlayContentContainerStyle","ContentOverlay_styles_scss_templateObject","SlideUpKeyframes","MenuOverlayToggle","_this","_React$Component","call","this","state","overlayVisible","toggleOverlay","bind","assertThisInitialized_default","setState","render","Fragment","onClick","onKeyPress","role","tabIndex","children","Menu_OverlayContentContainer","overlayToggle","React","Component","OverlayContentContainer","_React$Component2","ReactDOM","createPortal","ContentOverlay_styles_scss","Menu_styles_scss","class","Icons","fas","Name","frameBorder","title","gatsby_browser_entry","to","document","getElementById","MenuWidget","BgQuery","BgImageFile","BgImageAltText","CallToAction","MenuWidget_styles_scss","Menu","Btn","IconClass","Label","IconPosition","Pseudo","IconFas","ImgMatch","ImgQuery","SideForecastStyle","SideForecast_styles_scss_templateObject","Header","h1","SideForecast_styles_scss_templateObject2","ViewHeightFontSize","Body","SideForecast_styles_scss_templateObject3","SideForecast_styles_scss_templateObject4","_templateObject5","ForecastStyle","Forecast_styles_scss_templateObject","Top","Forecast_styles_scss_templateObject2","Bottom","Forecast_styles_scss_templateObject3","Forecast","forecast","componentDidMount","_this2","axios","get","then","res","Forecast_styles_scss","SideForecast","Location","SideForecast_styles_scss","library_Forecast","WidgetSlider","Helmet","rel","type","href","lib_default","ref","g","slider","dots","speed","arrows","autoplaySpeed","slidesToShow","autoplay","infinite","WidgetType","WidgetContent","length","Container_WidgetSlider","map","Content","index","Style","Meta","Generic","key","SideWidget","Library_MenuWidget","Library_SideForecast","Cross","SideHeader","IntroCopy","BodyCopy","WidgetContainer","Container_WidgetType","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","fadeIn","d","__webpack_exports__","defaultWidgetDataTransformer","WidgetInnerWrapper","DefaultWidget","Default_WidgetInnerWrapper","widget","widget_height_fraction","widget_width_multiple","widget_destination","widget_bg_color","widget_background_image","localFile","widget_subheadline","widget_headline","text","widget_text_color","widget_icon_class","tint_color","tint_opacity","hexToRGB","hex","alpha","r","parseInt","slice","b","SideHeaderWidgetStyle","p","_templateObject6","SideHeader_sideHeaderWidgetDataTransformer","SideHeaderWidget","sideHeaderWidgetDataTransformer","widget_intro_copy","widget_body_copy","SideWidgetStyle","sideWidgetDataTransformer","console","log"],"mappings":"yfAeO,IAAMA,EAAoBC,IAAOC,IAAVC,IAGPC,IAAKC,KAAKC,OAAOC,KAAUH,IAAKI,KACpCJ,IAAKI,MAGXC,EAAsBR,IAAOC,IAAVQ,IAKjB,SAAAC,GAAK,OAAKA,EAAMC,UAAY,OAASC,IAAMC,KAAKT,KAAKU,4HCerDC,IAnCD,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,IAAQR,EAAYS,IAAAH,EAAA,mBACtCI,EAAOC,EAAAD,KAiBPE,EAAQC,kBACZ,kBAAMH,EAAKI,QAAQC,MAAMC,KAAK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAAcV,IAAQU,EAAKC,gBACzD,CAACT,EAAMF,IAGT,OACEY,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CACEC,UAAU,MACVC,UAAU,QACVC,eAAe,UACfC,IAAKtB,GAAoB,KACzBuB,MAAOlB,EAAMM,KAAKa,gBAAgBD,OAC9B9B,2zECtBV,IAAMgC,EAAuB1C,IAAOC,IAAVC,IACTU,IAAMC,KAAKN,KAAKoC,GACvB,SAAAjC,GAAK,OAAKA,EAAMkC,KAAOlC,EAAMkC,KAAO,KAGnC,SAAAlC,GAAK,OACZA,EAAMmC,MAAQ,QAAU1C,IAAKI,KAAO,MAAQG,EAAMmC,MAAQ,IAAM,SAGpEH,EAAqBI,MAAQ9C,IAAOC,IAApCQ,IAKmBN,IAAK4C,OAKJnC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAiBZtC,IAAMC,KAAKN,KAAKoC,GAClB/B,IAAMC,KAAKN,KAAKoC,GA4BE/B,IAAMuC,MAAMC,OAwD7BV,kwDCzHf,IAAMW,EAAcrD,IAAOC,IAAVqD,IAMK,SAAA5C,GAAK,OACvBA,EAAM6C,QAAU7C,EAAM6C,QAAU3C,IAAMuC,MAAMK,OAG5B5C,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAEjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAIjE,SAAA1C,GACA,GAAIA,EAAMgD,QACR,MACE,mCAEAhD,EAAMgD,QAFN,qIAaJ,SAAAhD,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,MACE,6LASAlD,EAAMiD,UATN,wBAYAjD,EAAMkD,YAZN,gCAcoBhD,IAAMC,KAAKmC,WAAWC,SAd1C,WAeArC,IAAMC,KAAKmC,WAAWE,QAftB,sBA8BO/C,IAAK0D,iBACP,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAEjDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAMjB/C,IAAK0D,iBACP1D,IAAK0D,iBAEMjD,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAIPtC,IAAMC,KAAKiD,MAAMjB,MAAMkB,GAEpBnD,IAAMuC,MAAMC,MACvBxC,IAAMuC,MAAMK,MAKV5C,IAAMuC,MAAMK,MAMb5C,IAAMuC,MAAMK,MAKX5C,IAAMuC,MAAMK,MAKrB,SAAA9C,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,sEAUVP,EAAYW,QAAUhE,IAAOC,IAA7BgE,IACe9D,IAAK+D,mBAIpBb,EAAYc,SAAWnE,IAAOC,IAA9BmE,IACejE,IAAK+D,mBAKpBb,EAAYgB,KAAOrE,IAAOsE,EAA1BC,IAEWpE,IAAK0D,iBACJ1D,IAAK0D,iBACF1D,IAAKqE,SAEA5D,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAMyC,MAAQzC,EAAMyC,MAAQvC,IAAMuC,MAAMC,QAG9CC,8kBC9If,IAAMoB,EAAmBzE,IAAOC,IAAVyE,IAINvE,IAAKwE,IAAIpE,KAAcJ,IAAKyE,OAAOrE,KAC1CK,IAAMC,KAAKN,KAAKoC,IAIzB8B,EAAiB3B,MAAQ9C,IAAOC,IAAhC4E,IAImB1E,IAAKI,KAMRJ,IAAKwE,IAAIpE,KAAcJ,IAAKyE,OAAOrE,KAC1CK,IAAMC,KAAKN,KAAKoC,IAKV8B,iBC0HAK,EA7IK,SAAA9D,GAAA,OAAA+D,IAAA/D,GAClBgE,EAAAjD,EAAAC,cAACiD,EAAD,KACED,EAAAjD,EAAAC,cAACiD,EAAiBnC,MAAlB,KACEkC,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMiC,SACrB1B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,QACZrB,QAAQ,GACRG,SAAS,gBACTmB,UAAW1E,IAAMuC,MAAMoC,QACvBC,SAAS,UAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,GACRG,SAAS,wBACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,iBAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMK,MACrBE,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMiC,SACvBzB,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,WACRG,SAAS,+DACTmB,UAAW1E,IAAMuC,MAAMiC,SACvBI,SAAS,WAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,GACRG,SAAS,sBACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,SAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,GACRG,SAAS,kBACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,WAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,OACRG,SAAS,iCACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,YAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMsC,MACrB/B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,qBACRG,SAAS,WACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,oBAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMoC,QACrB7B,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,WACRG,SAAS,uCACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,cAIbR,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,KACEkC,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAAS3C,IAAMuC,MAAMuC,SACrBhC,QAAQ,GACRD,UAAW7C,IAAMuC,MAAMK,MACvBG,UAAU,GACVC,YAAY,GACZyB,YAAY,WACZrB,QAAQ,qBACRG,SAAS,kBACTmB,UAAW1E,IAAMuC,MAAMK,MACvBgC,SAAS,ylFC5InB,IAAMnC,EAAcrD,IAAOC,IAAV0F,IAMK,SAAAjF,GAAK,OACvBA,EAAM6C,QAAU7C,EAAM6C,QAAU3C,IAAMuC,MAAMK,OAI5B5C,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAEjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAIjE,SAAA1C,GACA,GAAIA,EAAMgD,QACR,MACE,mCAEAhD,EAAMgD,QAFN,qIAyBJ,SAAAhD,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,MACE,sOAWAlD,EAAMiD,UAXN,wBAcAjD,EAAMkD,YAdN,oCAgBwBhD,IAAMC,KAAKmC,WAAWC,SAhB9C,WAiBArC,IAAMC,KAAKmC,WAAWE,QAjBtB,sBAkCO/C,IAAK0D,iBACP,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAEjDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAYb/C,IAAKI,KACHJ,IAAKI,KAgBXJ,IAAK0D,iBACP1D,IAAK0D,iBAEJ,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAChDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAQPtC,IAAMC,KAAKiD,MAAMjB,MAAMkB,GAEpBnD,IAAMuC,MAAMC,MACvBxC,IAAMuC,MAAMK,MAKV5C,IAAMuC,MAAMK,MAMb5C,IAAMuC,MAAMK,MAKX5C,IAAMuC,MAAMK,MAKrB,SAAA9C,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,mEAUVP,EAAYW,QAAUhE,IAAOC,IAA7B2F,IACezF,IAAK+D,mBAKpBb,EAAYc,SAAWnE,IAAOC,IAA9B4F,IACe1F,IAAK+D,mBAMpBb,EAAYgB,KAAOrE,IAAOsE,EAA1BwB,IAEW3F,IAAK0D,iBACJ1D,IAAK0D,iBACF1D,IAAKqE,SAEA5D,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAMyC,MAAQzC,EAAMyC,MAAQvC,IAAMuC,MAAMC,QAG9CC,w8ECtLf,IA6He0C,EA7HU/F,IAAOC,IAAV+F,IAMNpF,IAAMuC,MAAMK,MAME,GAAhBrD,IAAKwE,IAAIpE,KACZJ,IAAKwE,IAAIpE,KAEOJ,IAAKwE,IAAIpE,KAAWJ,IAAKwE,IAAIpE,KAiB1CJ,IAAKwE,IAAIpE,KACLK,IAAMuC,MAAMK,MACjB5C,IAAMuC,MAAMiC,SAGHjF,IAAKI,KAWPJ,IAAKI,KACJJ,IAAKI,KAoBIK,IAAMuC,MAAMiC,SAgBtBjF,IAAKI,KACJJ,IAAKI,KAqBRK,IAAMuC,MAAMsC,MACRtF,IAAKI,KAOZK,IAAMuC,MAAMoC,QAIV3E,IAAMuC,MAAMoC,uZCvH7B,IAkBeU,EAlBsBjG,IAAOC,IAAViG,IAEN/F,IAAKwE,IAAIpE,KAE5BJ,IAAKwE,IAAIpE,KAGIK,IAAMuC,MAAMK,MAEfrD,IAAK4C,OACToD,aCHTC,cACJ,SAAAA,EAAY1F,GAAO,IAAA2F,EAAA,OAEjBA,EAAAC,EAAAC,KAAAC,KAAM9F,IAAN8F,MAGKC,MAAQ,CACXC,gBAAgB,GAIlBL,EAAKM,cAAgBN,EAAKM,cAAcC,KAAnBC,IAAAR,IAVJA,sCAcnBM,cAAA,WAEmC,GAA7BH,KAAKC,MAAMC,eACbF,KAAKM,SAAS,CACZJ,gBAAgB,IAMlBF,KAAKM,SAAS,CACZJ,gBAAgB,OAKtBK,OAAA,WACE,OACE/B,EAAAjD,EAAAC,cAAAgD,EAAAjD,EAAAiF,SAAA,KACEhC,EAAAjD,EAAAC,cAAA,QACEiF,QAAST,KAAKG,cAAcC,KAAKJ,MAEjCU,WAAYV,KAAKG,cAAcC,KAAKJ,MACpCW,KAAK,SACLC,SAAS,IACThF,UAAU,kBAEToE,KAAK9F,MAAM2G,UAEdrC,EAAAjD,EAAAC,cAACsF,EAAD,CACEZ,eAAgBF,KAAKC,MAAMC,eAC3Ba,cAAef,KAAKG,cAAcC,KAAKJ,aA9CjBgB,IAAMC,WAqDhCC,cACJ,SAAAA,EAAYhH,GAAO,OAEjBiH,EAAApB,KAAAC,KAAM9F,IAFW8F,iCAKnBO,OAAA,WAIE,OAAsB,GAHCP,KAAK9F,MAAMgG,eAIzB,KAKAkB,IAASC,aACd7C,EAAAjD,EAAAC,cAAC8F,EAAD,KACE9C,EAAAjD,EAAAC,cAAC+F,EAAD,KACE/C,EAAAjD,EAAAC,cAAA,OAAKI,UAAU,mBACb4C,EAAAjD,EAAAC,cAAA,OAAKI,UAAU,qBACb4C,EAAAjD,EAAAC,cAAA,QACEiF,QAAST,KAAK9F,MAAM6G,cAEpBL,WAAYV,KAAK9F,MAAM6G,cACvBJ,KAAK,SACLC,SAAS,IACThF,UAAU,iBAEV4C,EAAAjD,EAAAC,cAAA,gBAEFgD,EAAAjD,EAAAC,cAAA,QAAMgG,MAAM,iBAAZ,uBACAhD,EAAAjD,EAAAC,cAAA,QAAMgG,MAAM,gBACVhD,EAAAjD,EAAAC,cAACiG,EAAA,EAAD,CAAMC,KAAK,EAAMC,KAAK,iBAI5BnD,EAAAjD,EAAAC,cAAA,UACEI,UAAU,iBACVgG,YAAY,IACZC,MAAM,OACNnH,IAAI,iEAEN8D,EAAAjD,EAAAC,cAAA,OAAKI,UAAU,sBACb4C,EAAAjD,EAAAC,cAAA,OAAKI,UAAU,qBACb4C,EAAAjD,EAAAC,cAACsG,EAAA,KAAD,CAAMC,GAAG,KAAT,QACAvD,EAAAjD,EAAAC,cAACsG,EAAA,KAAD,CAAMC,GAAG,KAAT,SACAvD,EAAAjD,EAAAC,cAACsG,EAAA,KAAD,CAAMC,GAAG,KAAT,QACAvD,EAAAjD,EAAAC,cAACsG,EAAA,KAAD,CAAMC,GAAG,KAAT,YAKRC,SAASC,eAAe,wBArDMjB,IAAMC,WA2D7BrB,KClEAsC,GAtDI,SAAA1H,GAAA,IACjBuC,EADiBvC,EACjBuC,QACAG,EAFiB1C,EAEjB0C,QACAiF,EAHiB3H,EAGjB2H,QACAlF,EAJiBzC,EAIjByC,UACAE,EALiB3C,EAKjB2C,UACAC,EANiB5C,EAMjB4C,YACAI,EAPiBhD,EAOjBgD,QACAG,EARiBnD,EAQjBmD,SACAmB,EATiBtE,EASjBsE,UACAE,EAViBxE,EAUjBwE,SACAoD,EAXiB5H,EAWjB4H,YACAC,EAZiB7H,EAYjB6H,eACAC,EAbiB9H,EAajB8H,aAbiB,OAejB9D,EAAAjD,EAAAC,cAAC+G,EAAD,CACExF,QAASA,EACTG,QAASA,EACTD,UAAWmF,EAAchI,IAAMuC,MAAMK,MAAQC,EAC7CE,UAAWA,EACXC,YAAaA,EACbxB,UAAU,kBAETuB,GAAaC,EAAcoB,EAAAjD,EAAAC,cAAA,UAAQI,UAAU,SAAY,KAC1D4C,EAAAjD,EAAAC,cAAA,QAAMI,UAAU,wBACd4C,EAAAjD,EAAAC,cAACgH,GAAD,KACEhE,EAAAjD,EAAAC,cAAC+G,EAAY/E,QAAb,CAAqB5B,UAAU,sBAC5B4B,GAEHgB,EAAAjD,EAAAC,cAAC+G,EAAY5E,SAAb,CAAsB/B,UAAU,mBAC7B+B,GAEHa,EAAAjD,EAAAC,cAACiH,EAAA,EAAD,CACEC,UAAU,SACVC,MAAM,YACN5F,QAAS+B,EACT7B,UAAW7C,IAAMuC,MAAMK,MACvB4F,aAAa,OACbC,QAAM,EACNC,SAAO,IAETtE,EAAAjD,EAAAC,cAACiG,EAAA,EAAD,CAAM7F,UAAU,YAAY+F,KAAK,QAAQhF,MAAOmC,IAChDN,EAAAjD,EAAAC,cAAC+G,EAAY1E,KAAb,CAAkBjC,UAAW,UAAYoD,EAAUrC,MAAOmC,IACzDwD,EAAe9D,EAAAjD,EAAAC,cAAA,QAAMgG,MAAM,WAAWc,GAAuB,OAIjEF,EACC5D,EAAAjD,EAAAC,cAACuH,EAAA,EAAD,CAAUrI,IAAK0H,EAAa3H,QAAS4H,IACnC,KACHF,EAAU3D,EAAAjD,EAAAC,cAACwH,EAAA,EAAD,CAAUtI,IAAKyH,EAAS1H,QAAS4H,IAAqB,mpECxDrE,IAAMY,GAAoBzJ,IAAOC,IAAVyJ,KAMD,SAAAhJ,GAAK,OACvBA,EAAM6C,QAAU7C,EAAM6C,QAAU3C,IAAMuC,MAAMK,OAG5B5C,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAEjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAIjE,SAAA1C,GACA,GAAIA,EAAMgD,QACR,MACE,mCAEAhD,EAAMgD,QAFN,qIAaJ,SAAAhD,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,MACE,6LASAlD,EAAMiD,UATN,wBAYAjD,EAAMkD,YAZN,gCAcoBhD,IAAMC,KAAKmC,WAAWC,SAd1C,WAeArC,IAAMC,KAAKmC,WAAWE,QAftB,sBA+BO/C,IAAK0D,iBACP,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAEjDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAMjB/C,IAAK0D,iBACP1D,IAAK0D,iBAEJ,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAChDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAIPtC,IAAMC,KAAKiD,MAAMjB,MAAMkB,GAEpBnD,IAAMuC,MAAMC,MACvBxC,IAAMuC,MAAMK,MAKV5C,IAAMuC,MAAMK,MAMb5C,IAAMuC,MAAMK,MAKX5C,IAAMuC,MAAMK,MAKrB,SAAA9C,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,sEAUV6F,GAAkBE,OAAS3J,IAAO4J,GAAlCC,KAES1J,IAAK0D,iBACJ1D,IAAK0D,iBAIK1D,IAAK2J,oBAUzBL,GAAkBM,KAAO/J,IAAOC,IAAhC+J,MAEAP,GAAkBzF,QAAUhE,IAAOC,IAAnCgK,KACe9J,IAAK+D,mBAIpBuF,GAAkBpF,KAAOrE,IAAOsE,EAAhC4F,KAEW/J,IAAK0D,iBACJ1D,IAAK0D,iBACF1D,IAAKqE,SAEA5D,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAMyC,MAAQzC,EAAMyC,MAAQvC,IAAMuC,MAAMC,QAG9CqG,m+BC9Jf,IAAMU,GAAgBnK,IAAOC,IAAVmK,MAMnBD,GAAcE,IAAMrK,IAAOC,IAA3BqK,KACoBnK,IAAK2J,mBAGD3J,IAAK0D,iBAYb1D,IAAK0D,iBACH1D,IAAK0D,iBACJ1D,IAAK0D,iBACAjD,IAAMuC,MAAMK,MAMvB5C,IAAMuC,MAAMK,MACHrD,IAAK0D,iBAET1D,IAAK0D,iBACJ1D,IAAK0D,kBAIxBsG,GAAcI,OAASvK,IAAOC,IAA9BuK,KAIsBrK,IAAK+D,mBAIZiG,UCQAM,eA/Cb,SAAAA,EAAY/J,GAAO,IAAA2F,EAAA,OAEjBA,EAAAC,EAAAC,KAAAC,KAAM9F,IAAN8F,MAGFC,MAAQ,CACNiE,SAAU,IANOrE,sCASnBsE,kBAAA,WAAoB,IAAAC,EAAApE,KAClBqE,KACGC,IACC,uFAEDC,KAAK,SAAAC,GACJ,IAAMN,EAAWM,EAAI5J,KACrBwJ,EAAK9D,SAAS,CAAE4D,kBAItB3D,OAAA,WACE,OACE/B,EAAAjD,EAAAC,cAACiJ,GAAD,KACEjG,EAAAjD,EAAAC,cAACiJ,GAAcZ,IAAf,KACErF,EAAAjD,EAAAC,cAAA,mBAEFgD,EAAAjD,EAAAC,cAACiJ,GAAcV,OAAf,KACEvF,EAAAjD,EAAAC,cAAA,+BACAgD,EAAAjD,EAAAC,cAAA,kCA7BawF,IAAMC,WCwBdyD,GA9BM,SAAAlK,GAAA,IACnBuC,EADmBvC,EACnBuC,QACAG,EAFmB1C,EAEnB0C,QACAyH,EAHmBnK,EAGnBmK,SAEA1H,GALmBzC,EAInBgD,QAJmBhD,EAKnByC,WACAE,EANmB3C,EAMnB2C,UACAC,EAPmB5C,EAOnB4C,YACAyB,EARmBrE,EAQnBqE,YAEAC,GAVmBtE,EASnBwE,SATmBxE,EAUnBsE,WAVmB,OAYnBN,EAAAjD,EAAAC,cAACoJ,GAAD,CACE7H,QAASA,EACTG,QAASA,EACTD,UAAWA,EACXE,UAAWA,EACXC,YAAaA,EACbxB,UAAU,kBAEV4C,EAAAjD,EAAAC,cAACsG,EAAA,KAAD,CAAMC,GAAIlD,GACRL,EAAAjD,EAAAC,cAACiG,EAAA,EAAD,CAAM7F,UAAU,YAAY+F,KAAK,QAAQhF,MAAOmC,IAChDN,EAAAjD,EAAAC,cAACoJ,GAAkBzB,OAAnB,KAA2BwB,GAC3BnG,EAAAjD,EAAAC,cAACoJ,GAAkBrB,KAAnB,KACE/E,EAAAjD,EAAAC,cAACqJ,GAAD,CAAUF,SAAUA,kBCbtBG,eACJ,SAAAA,EAAY5K,GAAO,OAEjB4F,EAAAC,KAAAC,KAAM9F,IAFW8F,iCAKnBO,OAAA,WAAS,IAAAV,EAAAG,KAYP,OACExB,EAAAjD,EAAAC,cAAAgD,EAAAjD,EAAAiF,SAAA,KACEhC,EAAAjD,EAAAC,cAACuJ,EAAA,OAAD,KACEvG,EAAAjD,EAAAC,cAAA,QAAMwJ,IAAI,aAAaC,KAAK,WAAWC,KAAK,0BAC5C1G,EAAAjD,EAAAC,cAAA,QACEwJ,IAAI,aACJC,KAAK,WACLC,KAAK,iCAGT1G,EAAAjD,EAAAC,cAAC2J,EAAA5J,EAADG,OAAAC,OAAA,CAAQyJ,IAAK,SAAAC,GAAC,OAAKxF,EAAKyF,OAASD,IApBpB,CACfE,MAAM,EACNC,MAAO,KACPC,QAAQ,EACRC,cAAe,IACfC,aAAc,EACdC,UAAU,EACVC,UAAU,IAcL7F,KAAK9F,MAAM2G,eA7BKG,IAAMC,WAqC3B6E,eACJ,SAAAA,EAAY5L,GAAO,OAEjBiH,EAAApB,KAAAC,KAAM9F,IAFW8F,iCAMnBO,OAAA,WACE,IAAMwF,EAAgB/F,KAAK9F,MAAM6L,cAGjC,OAAIA,EAAcC,OAAS,EAWvBxH,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,CAA4BV,UAAU,gBACpC4C,EAAAjD,EAAAC,cAACyK,GAAD,KACGF,EAAcG,IAAI,SAACC,EAASC,GAC3B,OAAQD,EAAQE,OACd,IAAK,UACH,OACE7H,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAASoJ,EAAQG,KAAKC,QAAQxJ,QAC9BG,QAASiJ,EAAQG,KAAKC,QAAQrJ,QAC9BiF,QAASgE,EAAQG,KAAKC,QAAQpE,QAC9BlF,UAAWkJ,EAAQG,KAAKC,QAAQtJ,UAChCE,UAAWgJ,EAAQG,KAAKC,QAAQpJ,UAChCC,YAAa+I,EAAQG,KAAKC,QAAQnJ,YAClCyB,YAAasH,EAAQtH,YACrBrB,QAAS2I,EAAQG,KAAKC,QAAQ/I,QAC9BG,SAAUwI,EAAQG,KAAKC,QAAQ5I,SAC/BqB,SAAUmH,EAAQG,KAAKC,QAAQvH,SAC/BF,UAAWqH,EAAQG,KAAKC,QAAQzH,UAChCwD,aAAc6D,EAAQG,KAAKC,QAAQjE,aACnCkE,IAAKJ,IAGX,IAAK,aACH,OACE5H,EAAAjD,EAAAC,cAACiL,GAAA,EAAD,CACE1J,QAASoJ,EAAQG,KAAKG,WAAW1J,QACjCG,QAASiJ,EAAQG,KAAKG,WAAWvJ,QACjCiF,QAASgE,EAAQG,KAAKG,WAAWtE,QACjClF,UAAWkJ,EAAQG,KAAKG,WAAWxJ,UACnCE,UAAWgJ,EAAQG,KAAKG,WAAWtJ,UACnCC,YAAa+I,EAAQG,KAAKG,WAAWrJ,YACrCyB,YAAasH,EAAQtH,YACrBrB,QAAS2I,EAAQG,KAAKG,WAAWjJ,QACjC2F,OAAQgD,EAAQG,KAAKG,WAAWtD,OAChCnE,SAAUmH,EAAQG,KAAKG,WAAWzH,SAClCF,UAAWqH,EAAQG,KAAKG,WAAW3H,UACnC0H,IAAKJ,IAGX,IAAK,aACH,OACE5H,EAAAjD,EAAAC,cAACkL,GAAD,CACE3J,QAASoJ,EAAQG,KAAKpE,WAAWnF,QACjCG,QAASiJ,EAAQG,KAAKpE,WAAWhF,QACjCiF,QAASgE,EAAQG,KAAKpE,WAAWC,QACjClF,UAAWkJ,EAAQG,KAAKpE,WAAWjF,UACnCE,UAAWgJ,EAAQG,KAAKpE,WAAW/E,UACnCC,YAAa+I,EAAQG,KAAKpE,WAAW9E,YACrCyB,YAAasH,EAAQtH,YACrBrB,QAAS2I,EAAQG,KAAKpE,WAAW1E,QACjCG,SAAUwI,EAAQG,KAAKpE,WAAWvE,SAClCqB,SAAUmH,EAAQG,KAAKpE,WAAWlD,SAClCF,UAAWqH,EAAQG,KAAKpE,WAAWpD,UACnCwD,aAAc6D,EAAQG,KAAKpE,WAAWI,aACtCkE,IAAKJ,IAGX,IAAK,eACH,OACE5H,EAAAjD,EAAAC,cAACmL,GAAD,CACE5J,QAASoJ,EAAQG,KAAK5B,aAAa3H,QACnCG,QAASiJ,EAAQG,KAAK5B,aAAaxH,QACnCD,UAAWkJ,EAAQG,KAAK5B,aAAazH,UACrCE,UAAWgJ,EAAQG,KAAK5B,aAAavH,UACrCC,YAAa+I,EAAQG,KAAK5B,aAAatH,YACvCyB,YAAasH,EAAQtH,YACrB8F,SAAUwB,EAAQG,KAAK5B,aAAaC,SACpC6B,IAAKJ,IAGX,IAAK,UACH,OACE5H,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAASoJ,EAAQG,KAAKC,QAAQxJ,QAC9BqF,YAAa+D,EAAQG,KAAKC,QAAQnE,YAClCD,QAASgE,EAAQG,KAAKC,QAAQpE,QAC9BlF,UAAWkJ,EAAQG,KAAKC,QAAQtJ,UAChCE,UAAWgJ,EAAQG,KAAKC,QAAQpJ,UAChCC,YAAa+I,EAAQG,KAAKC,QAAQnJ,YAClCyB,YAAasH,EAAQtH,YACrBrB,QAAS2I,EAAQG,KAAKC,QAAQ/I,QAC9BG,SAAUwI,EAAQG,KAAKC,QAAQ5I,SAC/BqB,SAAUmH,EAAQG,KAAKC,QAAQvH,SAC/BF,UAAWqH,EAAQG,KAAKC,QAAQzH,UAChCwD,aAAc6D,EAAQG,KAAKC,QAAQjE,aACnCkE,IAAKJ,SAwBnB5H,EAAAjD,EAAAC,cAAAgD,EAAAjD,EAAAiF,SAAA,KACGuF,EAAcG,IAAI,SAACC,EAASC,GAC3B,OAAQD,EAAQE,OACd,IAAK,QACH,OAAO7H,EAAAjD,EAAAC,cAACoL,EAAD,CAAaJ,IAAKJ,IAC3B,IAAK,UACH,OACE5H,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,CACEV,UAAU,eACV4K,IAAKJ,GAEL5H,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAASoJ,EAAQG,KAAKC,QAAQxJ,QAC9BG,QAASiJ,EAAQG,KAAKC,QAAQrJ,QAC9BiF,QAASgE,EAAQG,KAAKC,QAAQpE,QAC9BlF,UAAWkJ,EAAQG,KAAKC,QAAQtJ,UAChCE,UAAWgJ,EAAQG,KAAKC,QAAQpJ,UAChCC,YAAa+I,EAAQG,KAAKC,QAAQnJ,YAClCyB,YAAasH,EAAQtH,YACrBrB,QAAS2I,EAAQG,KAAKC,QAAQ/I,QAC9BG,SAAUwI,EAAQG,KAAKC,QAAQ5I,SAC/BqB,SAAUmH,EAAQG,KAAKC,QAAQvH,SAC/BF,UAAWqH,EAAQG,KAAKC,QAAQzH,aAIxC,IAAK,UACH,OACEN,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,CACEV,UAAU,eACV4K,IAAKJ,GAEL5H,EAAAjD,EAAAC,cAACmD,EAAA,EAAD,CACE5B,QAASoJ,EAAQG,KAAKC,QAAQxJ,QAC9BqF,YAAa+D,EAAQG,KAAKC,QAAQnE,YAClCD,QAASgE,EAAQG,KAAKC,QAAQpE,QAC9BlF,UAAWkJ,EAAQG,KAAKC,QAAQtJ,UAChCE,UAAWgJ,EAAQG,KAAKC,QAAQpJ,UAChCC,YAAa+I,EAAQG,KAAKC,QAAQnJ,YAClCyB,YAAasH,EAAQtH,YACrBrB,QAAS2I,EAAQG,KAAKC,QAAQ/I,QAC9BG,SAAUwI,EAAQG,KAAKC,QAAQ5I,SAC/BqB,SAAUmH,EAAQG,KAAKC,QAAQvH,SAC/BF,UAAWqH,EAAQG,KAAKC,QAAQzH,UAChCwD,aAAc6D,EAAQG,KAAKC,QAAQjE,gBAI3C,IAAK,aACH,OACE9D,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,CACEV,UAAU,eACV4K,IAAKJ,GAEL5H,EAAAjD,EAAAC,cAACkL,GAAD,CACE3J,QAASoJ,EAAQG,KAAKpE,WAAWnF,QACjCG,QAASiJ,EAAQG,KAAKpE,WAAWhF,QACjCiF,QAASgE,EAAQG,KAAKpE,WAAWC,QACjClF,UAAWkJ,EAAQG,KAAKpE,WAAWjF,UACnCE,UAAWgJ,EAAQG,KAAKpE,WAAW/E,UACnCC,YAAa+I,EAAQG,KAAKpE,WAAW9E,YACrCyB,YAAasH,EAAQtH,YACrBrB,QAAS2I,EAAQG,KAAKpE,WAAW1E,QACjCG,SAAUwI,EAAQG,KAAKpE,WAAWvE,SAClCqB,SAAUmH,EAAQG,KAAKpE,WAAWlD,SAClCF,UAAWqH,EAAQG,KAAKpE,WAAWpD,UACnCwD,aAAc6D,EAAQG,KAAKpE,WAAWI,aACtCkE,IAAKJ,KAIb,IAAK,aACH,OACE5H,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,CACEV,UAAU,eACV4K,IAAKJ,GAEL5H,EAAAjD,EAAAC,cAACiL,GAAA,EAAD,CACE1J,QAASoJ,EAAQG,KAAKG,WAAW1J,QACjCG,QAASiJ,EAAQG,KAAKG,WAAWvJ,QACjCiF,QAASgE,EAAQG,KAAKG,WAAWtE,QACjClF,UAAWkJ,EAAQG,KAAKG,WAAWxJ,UACnCE,UAAWgJ,EAAQG,KAAKG,WAAWtJ,UACnCC,YAAa+I,EAAQG,KAAKG,WAAWrJ,YACrCyB,YAAasH,EAAQtH,YACrBrB,QAAS2I,EAAQG,KAAKG,WAAWjJ,QACjC2F,OAAQgD,EAAQG,KAAKG,WAAWtD,OAChCnE,SAAUmH,EAAQG,KAAKG,WAAWzH,SAClCF,UAAWqH,EAAQG,KAAKG,WAAW3H,aAI3C,IAAK,eACH,OACEN,EAAAjD,EAAAC,cAACkD,EAAqBpC,MAAtB,CACEV,UAAU,eACV4K,IAAKJ,GAEL5H,EAAAjD,EAAAC,cAACmL,GAAD,CACE5J,QAASoJ,EAAQG,KAAK5B,aAAa3H,QACnCG,QAASiJ,EAAQG,KAAK5B,aAAaxH,QACnCD,UAAWkJ,EAAQG,KAAK5B,aAAazH,UACrCE,UAAWgJ,EAAQG,KAAK5B,aAAavH,UACrCC,YAAa+I,EAAQG,KAAK5B,aAAatH,YACvCyB,YAAasH,EAAQtH,YACrB8F,SAAUwB,EAAQG,KAAK5B,aAAaC,SACpC6B,IAAKJ,KAIb,IAAK,aACH,OACE5H,EAAAjD,EAAAC,cAACqL,GAAA,EAAD,CACE1D,OAAQgD,EAAQG,KAAKO,WAAW1D,OAChC2D,UAAWX,EAAQG,KAAKO,WAAWC,UACnCC,SAAUZ,EAAQG,KAAKO,WAAWE,SAClC9J,UAAWkJ,EAAQG,KAAKO,WAAW5J,UACnCuJ,IAAKJ,YAxPApF,IAAMC,WAyQhB+F,IANS,SAAAxM,GAAA,IAAGuL,EAAHvL,EAAGuL,cAAe3J,EAAlB5B,EAAkB4B,KAAMC,EAAxB7B,EAAwB6B,MAAxB,OACtBmC,EAAAjD,EAAAC,cAACkD,EAAD,CAAsB9C,UAAU,SAASQ,KAAMA,EAAMC,MAAOA,GAC1DmC,EAAAjD,EAAAC,cAACyL,GAAD,CAAYlB,cAAeA,wCCrU/B,IAAAmB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GA4BetE,IAlBE,SAAAxI,KACfI,KADe,IAEfF,EAFeF,EAEfE,IACAD,EAHeD,EAGfC,QACAmB,EAJepB,EAIfoB,UACAC,EALerB,EAKfqB,UACAC,EANetB,EAMfsB,eANe,OAQfsL,EAAA7L,EAAAC,cAAC+L,EAAAhM,EAAD,CACES,MAAOtB,EACPmB,UAAWA,GAAwB,QACnCC,eAAgBA,GAAkC,UAClDrB,QAASA,EACTmB,UAAWA,GAAwB,MACnC4L,QAAQ,09ECRZ,IAAM3K,EAAcrD,IAAOC,IAAVC,IAMK,SAAAQ,GAAK,OACvBA,EAAM6C,QAAU7C,EAAM6C,QAAU3C,IAAMuC,MAAMK,OAI5B5C,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAEjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAIjE,SAAA1C,GACA,GAAIA,EAAMgD,QACR,MACE,mCAEAhD,EAAMgD,QAFN,qIAyBJ,SAAAhD,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,MACE,sOAWAlD,EAAMiD,UAXN,wBAcAjD,EAAMkD,YAdN,oCAgBwBhD,IAAMC,KAAKmC,WAAWC,SAhB9C,WAiBArC,IAAMC,KAAKmC,WAAWE,QAjBtB,sBAkCO/C,IAAK0D,iBACP,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAEjDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QASlB/C,IAAK0D,iBACH1D,IAAK0D,iBAMN1D,IAAK0D,iBACP1D,IAAK0D,iBAEJ,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAChDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAQPtC,IAAMC,KAAKiD,MAAMjB,MAAMkB,GAEpBnD,IAAMuC,MAAMC,MACvBxC,IAAMuC,MAAMK,MAKV5C,IAAMuC,MAAMK,MAMb5C,IAAMuC,MAAMK,MAKX5C,IAAMuC,MAAMK,MAKrB,SAAA9C,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,mEAUVP,EAAYW,QAAUhE,IAAOC,IAA7BQ,IACeN,IAAK+D,mBAKpBb,EAAYc,SAAWnE,IAAOC,IAA9BmE,IACejE,IAAK+D,mBAMpBb,EAAYgB,KAAOrE,IAAOsE,EAA1BC,IAEWpE,IAAK0D,iBACJ1D,IAAK0D,iBACF1D,IAAKqE,SAEA5D,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAMyC,MAAQzC,EAAMyC,MAAQvC,IAAMuC,MAAMC,QAG9CC,kCChMfsK,EAAAM,EAAAC,EAAA,sBAAAC,IAoBA,IAAMC,EAAqB,SAAApN,GAA+B,IAA5BqG,EAA4BrG,EAA5BqG,SAAUhC,EAAkBrE,EAAlBqE,YACtC,OAAIA,EAEAL,EAAAjD,EAAAC,cAACsG,EAAA,KAAD,CAAMlG,UAAU,uBAAuBmG,GAAIlD,GACxCgC,GAIErC,EAAAjD,EAAAC,cAAA,QAAMI,UAAU,wBAAwBiF,IA0DtC8G,GAVEE,IA5CO,SAAA1M,GAAA,IACpB4B,EADoB5B,EACpB4B,QACAG,EAFoB/B,EAEpB+B,QACAiF,EAHoBhH,EAGpBgH,QACAlF,EAJoB9B,EAIpB8B,UACAE,EALoBhC,EAKpBgC,UACAC,EANoBjC,EAMpBiC,YACAyB,EAPoB1D,EAOpB0D,YACArB,EARoBrC,EAQpBqC,QACAG,EAToBxC,EASpBwC,SACAmB,EAVoB3D,EAUpB2D,UACAE,EAXoB7D,EAWpB6D,SACAoD,EAZoBjH,EAYpBiH,YAEAE,GAdoBnH,EAapBkH,eAboBlH,EAcpBmH,cAdoB,OAgBpB9D,EAAAjD,EAAAC,cAACkD,EAAD,CACE3B,QAASA,EACTG,QAASA,EACTD,UAAWmF,EAAchI,IAAMuC,MAAMK,MAAQC,EAC7CE,UAAWA,EACXC,YAAaA,EACbxB,UAAU,kBAETuB,GAAaC,EAAcoB,EAAAjD,EAAAC,cAAA,UAAQI,UAAU,SAAY,KAE1D4C,EAAAjD,EAAAC,cAACsM,EAAD,CAAoBjJ,YAAaA,GAC/BL,EAAAjD,EAAAC,cAACkD,EAAYlB,QAAb,CAAqB5B,UAAU,sBAC5B4B,GAEHgB,EAAAjD,EAAAC,cAACkD,EAAYf,SAAb,CAAsB/B,UAAU,mBAC7B+B,GAEHa,EAAAjD,EAAAC,cAACiG,EAAA,EAAD,CAAM7F,UAAU,YAAY+F,KAAK,QAAQhF,MAAOmC,IAChDN,EAAAjD,EAAAC,cAACkD,EAAYb,KAAb,CAAkBjC,UAAW,UAAYoD,EAAUrC,MAAOmC,IACzDwD,EAAe9D,EAAAjD,EAAAC,cAAA,QAAMgG,MAAM,WAAWc,GAAuB,MAE/DF,EACC5D,EAAAjD,EAAAC,cAACuH,EAAA,EAAD,CAAUrI,IAAK0H,EAAa3H,QAASkD,IACnC,KACHwE,EAAU3D,EAAAjD,EAAAC,cAACwH,EAAA,EAAD,CAAUtI,IAAKyH,EAAS1H,QAASkD,IAAe,OAcnB,SAAA/C,GAC1C,GAAIA,EAkCF,OAjCgBA,EAAKsL,IAAI,SAAC6B,EAAQ3B,GAChC,MAAO,CAELhK,KAAM2L,EAAOC,uBAAyBD,EAAOC,uBAAyB,EACtE3L,MAAO0L,EAAOE,sBAAwBF,EAAOE,sBAAwB,EACrElC,cAAe,CACb,CACElH,YAAakJ,EAAOG,mBACpB7B,MAAO,UACPC,KAAM,CACJC,QAAS,CACPxJ,QAASgL,EAAOI,gBAChBjL,QAAS,GACTiF,UAAS4F,EAAOK,wBAAwBC,WACpCN,EAAOK,wBAAwBC,UAAUpM,gBACtCD,MAEPwB,QAASuK,EAAOO,mBAChB3K,SAAUoK,EAAOQ,gBAAgBC,KACjCvL,UAAW8K,EAAOU,kBAClB3J,UAAWiJ,EAAOU,kBAClBzJ,SAAU+I,EAAOW,kBACjBvL,UAAW4K,EAAOY,WAAaZ,EAAOY,WAAa,GACnDvL,YAAa2K,EAAOa,aAAeb,EAAOa,aAAe,GACzD5K,SAAU,UAYtB,MADgB,uCC5GL6K,IAZE,SAACC,EAAKC,GACrB,IAAIC,EAAIC,SAASH,EAAII,MAAM,EAAG,GAAI,IAChC7D,EAAI4D,SAASH,EAAII,MAAM,EAAG,GAAI,IAC9BC,EAAIF,SAASH,EAAII,MAAM,EAAG,GAAI,IAEhC,OAAIH,EACK,QAAUC,EAAI,KAAO3D,EAAI,KAAO8D,EAAI,KAAOJ,EAAQ,IAEnD,OAASC,EAAI,KAAO3D,EAAI,KAAO8D,EAAI,8kDCK9C,IAAMC,EAAwB5P,IAAOC,IAAVC,IAWPU,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,QAGrEwM,EAAsB9M,MAAQ9C,IAAOC,IAArCQ,IAIaN,IAAK0D,kBAMlB+L,EAAsBjG,OAAS3J,IAAO4J,GAAtCxF,IAESjE,IAAK0D,iBACJ1D,IAAK0D,iBAIK1D,IAAK2J,oBAWzB8F,EAAsB7F,KAAO/J,IAAOC,IAApCsE,KAEAqL,EAAsBtC,UAAYtN,IAAO6P,EAAzC3F,IACoB/J,IAAK+D,kBACL/D,IAAK0D,kBAKzB+L,EAAsBrC,SAAWvN,IAAO6P,EAAxCC,IACe3P,IAAK+D,kBACH/D,IAAK0D,iBAUJ1D,IAAK+D,kBAEC,SAAAxD,GAAK,OACvBA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,QAIvCwM,QCxFfjC,EAAAM,EAAAC,EAAA,sBAAA6B,IA8BeC,IAhBU,SAAAhP,GAAA,IAAG2I,EAAH3I,EAAG2I,OAAQ2D,EAAXtM,EAAWsM,UAAWC,EAAtBvM,EAAsBuM,SAAU9J,EAAhCzC,EAAgCyC,UAAhC,OACvBuB,EAAAjD,EAAAC,cAACkD,EAAD,CAAuBzB,UAAWA,EAAWrB,UAAU,kBACrD4C,EAAAjD,EAAAC,cAACkD,EAAsBpC,MAAvB,KACEkC,EAAAjD,EAAAC,cAACkD,EAAsByE,OAAvB,KAA+BA,GAC/B3E,EAAAjD,EAAAC,cAACkD,EAAsB6E,KAAvB,KACE/E,EAAAjD,EAAAC,cAACkD,EAAsBoI,UAAvB,KACGA,GAEHtI,EAAAjD,EAAAC,cAACkD,EAAsBqI,SAAvB,KACGA,OATX,IA0Ba0C,EAAkC,SAAA7O,GAC7C,GAAIA,EAwBF,MAvBgB,CACd,CAEEwB,KAAM,EACNC,MAAO,EACP0J,cAAe,CACb,CACElH,YAAa,KACbwH,MAAO,aACPC,KAAM,CACJO,WAAY,CACV1D,OAAQvI,EAAK2N,gBAAgBC,KAC7B1B,UAAWlM,EAAK8O,kBAChB3C,SAAUnM,EAAK+O,iBACf1M,UAAW7C,IAAMuC,MAAMiC,eAYnC,MADgB,8/ECnDpB,IAAMgL,EAAkBpQ,IAAOC,IAAVC,IAMC,SAAAQ,GAAK,OACvBA,EAAM6C,QAAU7C,EAAM6C,QAAU3C,IAAMuC,MAAMK,OAG5B5C,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAEjB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAIjE,SAAA1C,GACA,GAAIA,EAAMgD,QACR,MACE,mCAEAhD,EAAMgD,QAFN,qIAyBJ,SAAAhD,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,MACE,sOAWAlD,EAAMiD,UAXN,wBAcAjD,EAAMkD,YAdN,oCAgBwBhD,IAAMC,KAAKmC,WAAWC,SAhB9C,WAiBArC,IAAMC,KAAKmC,WAAWE,QAjBtB,sBAkCO/C,IAAK0D,iBACP,SAAAnD,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAEjDxC,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAMjB/C,IAAK0D,iBACP1D,IAAK0D,iBAEMjD,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QAClB,SAAAxC,GAAK,OAAKA,EAAM+C,UAAY/C,EAAM+C,UAAY7C,IAAMuC,MAAMC,OAI/CxC,IAAMC,KAAKiD,MAAMjB,MAAMkB,GAEpBnD,IAAMuC,MAAMC,MACvBxC,IAAMuC,MAAMK,MAKV5C,IAAMuC,MAAMK,MAMb5C,IAAMuC,MAAMK,MAKX5C,IAAMuC,MAAMK,MAKrB,SAAA9C,GACA,GAAIA,EAAMiD,WAAajD,EAAMkD,YAC3B,sEAUVwM,EAAgBzG,OAAS3J,IAAO4J,GAAhCnJ,IAESN,IAAK0D,iBACJ1D,IAAK0D,iBAIK1D,IAAK2J,oBAUzBsG,EAAgBrG,KAAO/J,IAAOC,IAA9BmE,KAEAgM,EAAgBpM,QAAUhE,IAAOC,IAAjCsE,IACepE,IAAK+D,kBAEI/D,IAAKI,MAG7B6P,EAAgB/L,KAAOrE,IAAOsE,EAA9B4F,IAEW/J,IAAK0D,iBACJ1D,IAAK0D,iBACF1D,IAAKqE,SAEA5D,IAAMC,KAAKmC,WAAWC,SACpCrC,IAAMC,KAAKmC,WAAWE,QACjB,SAAAxC,GAAK,OAAKA,EAAMyC,MAAQzC,EAAMyC,MAAQvC,IAAMuC,MAAMC,QAG9CgN,yBC7LfzC,EAAAM,EAAAC,EAAA,sBAAAmC,IAuDepD,IAvCI,SAAAjM,GAAA,IACjBuC,EADiBvC,EACjBuC,QACAoF,EAFiB3H,EAEjB2H,QACAjF,EAHiB1C,EAGjB0C,QACAiG,EAJiB3I,EAIjB2I,OACA3F,EALiBhD,EAKjBgD,QACAP,EANiBzC,EAMjByC,UACAE,EAPiB3C,EAOjB2C,UACAC,EARiB5C,EAQjB4C,YACAyB,EATiBrE,EASjBqE,YACAG,EAViBxE,EAUjBwE,SACAF,EAXiBtE,EAWjBsE,UAXiB,OAajBN,EAAAjD,EAAAC,cAACkD,EAAD,CACE3B,QAASA,EACTG,QAASA,EACTD,UAAWA,EACXE,UAAWA,EACXC,YAAaA,EACbxB,UAAU,kBAETuB,GAAaC,EAAcoB,EAAAjD,EAAAC,cAAA,UAAQI,UAAU,SAAY,KAC1D4C,EAAAjD,EAAAC,cAACsG,EAAA,KAAD,CAAMC,GAAIlD,GACRL,EAAAjD,EAAAC,cAACkD,EAAgByE,OAAjB,KAAyBA,GACzB3E,EAAAjD,EAAAC,cAACiG,EAAA,EAAD,CAAM7F,UAAU,YAAY+F,KAAK,QAAQhF,MAAOmC,IAChDN,EAAAjD,EAAAC,cAACkD,EAAgB6E,KAAjB,KACE/E,EAAAjD,EAAAC,cAACkD,EAAgBlB,QAAjB,KAA0BA,IAE5BgB,EAAAjD,EAAAC,cAACkD,EAAgBb,KAAjB,CACEjC,UAAW,UAAYoD,EACvBrC,MAAOmC,KAGVqD,EAAU3D,EAAAjD,EAAAC,cAACwH,EAAA,EAAD,CAAUtI,IAAKyH,EAAS1H,QAAS0I,IAAa,KACxD2G,QAAQC,IAAI,YACZD,QAAQC,IAAI5H,KAnCjB,IAiDa0H,EAA4B,SAAAjP,GACvC,GAAIA,EAiCF,MAhCgB,CACd,CAEEwB,KAAMxB,EAAKoN,uBAAyBpN,EAAKoN,uBAAyB,EAClE3L,MAAOzB,EAAKqN,sBAAwBrN,EAAKqN,sBAAwB,EACjElC,cAAe,CACb,CACElH,YAAajE,EAAKsN,mBAClB7B,MAAO,aACPC,KAAM,CACJG,WAAY,CACV1J,QAASnC,EAAKuN,gBACdjL,QAAS,GACTiF,UAASvH,EAAKwN,wBAAwBC,WAClCzN,EAAKwN,wBAAwBC,UAAUpM,gBAAgBD,MAE3DwB,QAAS5C,EAAK0N,mBACdnF,OAAQvI,EAAK2N,gBAAgBC,KAC7BvL,UAAWrC,EAAK6N,kBAChB3J,UAAWlE,EAAK6N,kBAChBzJ,SAAUpE,EAAK8N,kBACfvL,UAAWvC,EAAK+N,WAAa/N,EAAK+N,WAAa,GAC/CvL,YAAaxC,EAAKgO,aAAehO,EAAKgO,aAAe,GACrD5K,SAAU,SAYtB,MADgB","file":"3-874a977088a069c2a41a.js","sourcesContent":["// SectionInnerStyle Styles:\n// These are nearly identical to the Hero base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n  padding-right: ${Root.Size};\n`;\n\nexport const SectionContentStyle = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  display: flex;\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Dynamic query variables in GraphQl queries for Gatsby-Image\n// Learn more: https://github.com/gatsbyjs/gatsby/issues/10482#issuecomment-485349612\n\nimport React, { useMemo } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Img from 'gatsby-image/withIEPolyfill';\n\nconst Image = ({ AltText, src, ...props }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { internal: { mediaType: { regex: \"images/\" } } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 650) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const match = useMemo(\n    () => data.allFile.edges.find(({ node }) => src === node.relativePath),\n    [data, src]\n  );\n\n  return (\n    <Img\n      className=\"img\"\n      objectFit=\"cover\"\n      objectPosition=\"50% 50%\"\n      alt={AltText ? AltText : null}\n      fluid={match.node.childImageSharp.fluid}\n      {...props}\n    />\n  );\n};\n\nexport default Image;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetContainerStyle = styled.div`\n  padding-top: ${Theme.Base.Size.Sm};\n  flex: ${props => (props.Flex ? props.Flex : '1')};\n  display: flex;\n  flex-direction: column;\n  width: ${props =>\n    props.Width ? 'calc(' + Root.Size + ' * ' + props.Width + ')' : '100%'};\n`;\n\nWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  z-index: 1;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n\n  /* Slick Slider Adjustments */\n\n  .slick-slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    .slick-track {\n      display: block !important;\n    }\n\n    .slick-dots {\n      bottom: ${Theme.Base.Size.Sm};\n      left: ${Theme.Base.Size.Sm};\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .slick-slider,\n  .slick-list,\n  .slick-track {\n    flex: 1;\n  }\n\n  .slick-list,\n  .slick-slider {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n  }\n\n  .slick-slide {\n    display: flex !important;\n    flex-direction: column;\n    align-items: stretch;\n    flex: 1;\n\n    &:first-child {\n      padding: 0;\n    }\n\n    div {\n      &:first-child {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n    }\n\n    .widget-content {\n      flex: 1;\n\n      div {\n        &:first-child {\n          flex: unset;\n          display: unset;\n          flex-direction: unset;\n          align-items: unset;\n        }\n      }\n    }\n  }\n`;\n\nexport default WidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Cross Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Cross Widget Content */\nconst CrossWidgetStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(\n    (100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size})) -\n      (${Theme.Base.Size.Sm} * 2)\n  );\n`;\n\nCrossWidgetStyle.Inner = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0.75fr 1fr;\n  grid-template-rows: 1fr 0.75fr 1fr;\n  grid-gap: calc(${Root.Size} / 4);\n  justify-content: stretch;\n  justify-items: stretch;\n  grid-auto-flow: row;\n  align-items: stretch;\n  width: calc(\n    (100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size})) -\n      (${Theme.Base.Size.Sm} * 2)\n  );\n  flex: 1;\n`;\n\nexport default CrossWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// CrossWidget.js:\n\n// Visual:\n// https://www.dropbox.com/s/474d6mc15w2q1vk/Screenshot%202019-04-16%2012.41.23.png?dl=0\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport CrossWidgetStyle from './styles.scss';\nimport WidgetContainerStyle from './../../Container/styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport DefaultWidget from './../Default';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst CrossWidget = ({}) => (\n  <CrossWidgetStyle>\n    <CrossWidgetStyle.Inner>\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Nightsky}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/menu\"\n          Subhead=\"\"\n          Headline=\"View Our Menu\"\n          IconColor={Theme.Color.Primary}\n          IconName=\"plus\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Speak to a Real Human\"\n          IconColor={Theme.Color.White}\n          IconName=\"comment-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.White}\n          BgImage=\"\"\n          TextColor={Theme.Color.Nightsky}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Outreach\"\n          Headline=\"How we raised $5,000 for the Children’s Leukemia Foundation.\"\n          IconColor={Theme.Color.Nightsky}\n          IconName=\"heart\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"100% Free Delivery.\"\n          IconColor={Theme.Color.White}\n          IconName=\"car\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Order by Phone.\"\n          IconColor={Theme.Color.White}\n          IconName=\"phone\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"2018\"\n          Headline=\"Voted Best Boutique Dispensary\"\n          IconColor={Theme.Color.White}\n          IconName=\"trophy\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Slate}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Delivery Available\"\n          Headline=\"Reno, NV\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"May 16th\"\n          Headline=\"Fundraiser for Ronald McDonald House\"\n          IconColor={Theme.Color.White}\n          IconName=\"calendar\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Gunmetal}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"Delivery Available\"\n          Headline=\"Carson City, NV\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n    </CrossWidgetStyle.Inner>\n  </CrossWidgetStyle>\n);\n\nexport default CrossWidget;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  min-width: 100px\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  .widget-inner-wrapper {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: relative;\n    z-index: 10;\n    width: 100%;\n    color: white;\n    /* transform: scale(1.000000001); */\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n\n      .overlay-toggle {\n        flex: 1;\n        position: relative;\n      }\n  }\n\n  .btn {\n    position: absolute !important;\n    display: block;\n    flex-direction: unset;\n    left: calc(${Root.Size} * .4);\n    bottom: calc(${Root.Size} * .4);\n    \n    .btn-inner {\n      font-size: 1rem;\n    }\n\n    .ico {\n      i {\n        font-size: 1.2rem;\n      }\n    }\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%) translateZ(0);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Widget Icon */\n\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%) translateZ(0);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3) translateZ(0);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MenuHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Extended Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframes\nimport { SlideUpKeyframes } from 'components/core/Transition/Keyframes.js';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MenuOverlayStyle = styled.div`\n  position: relative;\n  flex: 1;\n  overflow-x: hidden;\n  width: 100%;\n  overflow-y: auto;\n  background: ${Theme.Color.White};\n\n  iframe {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: ${Root.Nav.Size * 0.4};\n    top: ${Root.Nav.Size};\n    width: 100%;\n    height: calc(100% - (${Root.Nav.Size} + (${Root.Nav.Size} * 0.4)));\n  }\n\n  .overlay-bar-inner {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    height: 100%;\n  }\n\n  .overlay-top-bar,\n  .overlay-bottom-bar {\n    position: absolute;\n    z-index: 500;\n    left: 0;\n    right: 0;\n    height: ${Root.Nav.Size};\n    background: ${Theme.Color.White};\n    color: ${Theme.Color.Nightsky};\n    display: flex;\n    align-items: center;\n    padding: 0 calc(${Root.Size});\n    font-weight: bold;\n    font-size: 1.1rem;\n  }\n\n  .overlay-top-bar {\n    top: 0;\n    justify-content: center;\n\n    .overlay-close {\n      position: absolute;\n      width: calc(${Root.Size} * 1.4);\n      height: calc(${Root.Size} * 1.4);\n      left: 0;\n      top: 50%;\n      transform: translateY(-50%);\n\n      figure {\n        padding: 0;\n        margin: 0;\n        width: 100%;\n        height: 100%;\n        position: relative;\n\n        &:before,\n        &:after {\n          content: '';\n          position: absolute;\n          left: 50%;\n          top: 50%;\n          width: 100%;\n          height: 2px;\n          background-color: ${Theme.Color.Nightsky};\n        }\n\n        &:before {\n          transform: rotate(45deg) translate(-50%, -50%);\n          transform-origin: left center;\n        }\n        &:after {\n          transform: rotate(-45deg) translate(-50%, -50%);\n          transform-origin: left center;\n        }\n      }\n    }\n\n    .overlay-icon {\n      position: absolute;\n      width: calc(${Root.Size} * 1.4);\n      height: calc(${Root.Size} * 1.4);\n      right: 0;\n      top: 50%;\n      transform: translateY(-50%);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      \n      i {\n        font-size: 1.7rem;\n        line-height: 0;\n      }\n    }\n\n    .overlay-bar-inner {\n      justify-content: center;\n    }\n  }\n\n  .overlay-bottom-bar {\n    bottom: 0;\n    border-top: ${Theme.Color.Slate} 1px solid;\n    padding: 0 calc(${Root.Size} * 1.5);\n\n    .overlay-bar-inner {\n      justify-content: space-between;\n    }\n\n    a {\n      color: ${Theme.Color.Primary};\n      text-decoration: none;\n\n      &:hover {\n        color: ${Theme.Color.Primary};\n      }\n    }\n  }\n`;\n\nexport default MenuOverlayStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MenuHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Extended Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframes\nimport { SlideUpKeyframes } from 'components/core/Transition/Keyframes.js';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst OverlayContentContainerStyle = styled.div`\n  width: 100vw;\n  /* height: calc(100vh - ${Root.Nav.Size}); */\n  left: 0;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  right: 0;\n  background-color: ${Theme.Color.White};\n  z-index: 999;\n  border-radius: ${Root.Radius};\n  animation: ${SlideUpKeyframes} .5s ease;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  position: fixed !important;\n  -webkit-transform: none !important;\n`;\n\nexport default OverlayContentContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MenuHero Component:\n// This is the specialize hero for the Menu page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Device from 'components/core/DeviceQuery';\n\n// Styles\nimport MenuOverlayStyle from './styles.scss';\nimport OverlayContentContainerStyle from 'components/library/ContentOverlay/styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nclass MenuOverlayToggle extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n\n    // Initial state.\n    this.state = {\n      overlayVisible: false,\n    };\n\n    // Bind overlay state.\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n  }\n\n  // Base functions to change transition state for the Overlay.\n  toggleOverlay() {\n    // If currently hidden...\n    if (this.state.overlayVisible == false) {\n      this.setState({\n        overlayVisible: true,\n      });\n    }\n\n    // If currently visible...\n    else {\n      this.setState({\n        overlayVisible: false,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <span\n          onClick={this.toggleOverlay.bind(this)}\n          // These are eslint errors for accessibility below.\n          onKeyPress={this.toggleOverlay.bind(this)}\n          role=\"button\"\n          tabIndex=\"0\"\n          className=\"overlay-toggle\"\n        >\n          {this.props.children}\n        </span>\n        <OverlayContentContainer\n          overlayVisible={this.state.overlayVisible}\n          overlayToggle={this.toggleOverlay.bind(this)}\n        />\n      </>\n    );\n  }\n}\n\nclass OverlayContentContainer extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    const overlayVisible = this.props.overlayVisible;\n\n    // If the overlay is hidden...\n    if (overlayVisible == false) {\n      return null;\n    }\n\n    // If the overlay is visible...\n    else {\n      return ReactDOM.createPortal(\n        <OverlayContentContainerStyle>\n          <MenuOverlayStyle>\n            <div className=\"overlay-top-bar\">\n              <div className=\"overlay-bar-inner\">\n                <span\n                  onClick={this.props.overlayToggle}\n                  // These are eslint errors for accessibility below.\n                  onKeyPress={this.props.overlayToggle}\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  className=\"overlay-close\"\n                >\n                  <figure />\n                </span>\n                <span class=\"overlay-title\">Carson City, Nevada</span>\n                <span class=\"overlay-icon\">\n                  <Icon fas={true} Name=\"share-alt\" />\n                </span>\n              </div>\n            </div>\n            <iframe\n              className=\"dutchie-iframe\"\n              frameBorder=\"0\"\n              title=\"menu\"\n              src=\"https://www.dutchie.com/embedded-menu/sierra-well-reno/menu?\"\n            />\n            <div className=\"overlay-bottom-bar\">\n              <div className=\"overlay-bar-inner\">\n                <Link to=\"/\">Call</Link>\n                <Link to=\"/\">Visit</Link>\n                <Link to=\"/\">Chat</Link>\n                <Link to=\"/\">Info</Link>\n              </div>\n            </div>\n          </MenuOverlayStyle>\n        </OverlayContentContainerStyle>,\n        document.getElementById('content-overlay')\n      );\n    }\n  }\n}\n\nexport default MenuOverlayToggle;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Default Widget.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\nimport MenuOverlayToggle from 'components/library/ContentOverlay/Menu';\nimport Btn from 'components/library/Btn/';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MenuWidget = ({\n  BgColor,\n  BgImage,\n  BgQuery,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n  BgImageFile,\n  BgImageAltText,\n  CallToAction,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={BgImageFile ? Theme.Color.White : TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n    <span className=\"widget-inner-wrapper\">\n      <MenuOverlayToggle>\n        <WidgetStyle.Subhead className=\"widget-subheadline\">\n          {Subhead}\n        </WidgetStyle.Subhead>\n        <WidgetStyle.Headline className=\"widget-headline\">\n          {Headline}\n        </WidgetStyle.Headline>\n        <Btn\n          IconClass=\"expand\"\n          Label=\"View Menu\"\n          BgColor={IconColor}\n          TextColor={Theme.Color.White}\n          IconPosition=\"left\"\n          Pseudo\n          IconFas\n        />\n        <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n        <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n        {CallToAction ? <span class=\"cta-btn\">{CallToAction}</span> : null}\n      </MenuOverlayToggle>\n    </span>\n\n    {BgImageFile ? (\n      <ImgMatch src={BgImageFile} AltText={BgImageAltText} />\n    ) : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={BgImageAltText} /> : null}\n  </WidgetStyle>\n);\n\nexport default MenuWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const MenuWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = data.map((widget, index) => {\n      return {\n        // Begin WidgetContent\n        Flex: widget.widget_height_fraction ? widget.widget_height_fraction : 1,\n        Width: widget.widget_width_multiple ? widget.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: widget.widget_destination,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: widget.widget_bg_color,\n                BgImage: '',\n                BgQuery: widget.widget_background_image.localFile\n                  ? widget.widget_background_image.localFile.childImageSharp\n                      .fluid\n                  : false,\n                Subhead: widget.widget_subheadline,\n                Headline: widget.widget_headline.text,\n                TextColor: widget.widget_text_color,\n                IconColor: widget.widget_text_color,\n                IconName: widget.widget_icon_class,\n                TintColor: widget.tint_color ? widget.tint_color : '',\n                TintOpacity: widget.tint_opacity ? widget.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      };\n    });\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideForecastStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideForecastStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideForecastStyle.Body = styled.div``;\n\nSideForecastStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nSideForecastStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Button Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst ForecastStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nForecastStyle.Top = styled.div`\n  font-size: calc(${Root.ViewHeightFontSize} * 5);\n  font-family: 'Roboto', 'Helvetica', sans-serif;\n  font-weight: 100;\n  padding-right: calc(${Root.ViewWidthPadding} * 1.2);\n  margin-left: -5px;\n  position: relative;\n\n  &:before,\n  &:after {\n    position: absolute;\n    right: 0;\n  }\n\n  &:before {\n    content: '';\n    top: calc(${Root.ViewWidthPadding} / 2.2);\n    width: calc(${Root.ViewWidthPadding} / 1.4);\n    height: calc(${Root.ViewWidthPadding} / 1.4);\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 100%;\n  }\n\n  &:after {\n    content: 'F';\n    color: ${Theme.Color.White};\n    font-size: calc(${Root.ViewWidthPadding});\n    line-height: 0;\n    right: calc(${Root.ViewWidthPadding} / 5.5);\n    bottom: calc(${Root.ViewWidthPadding} / 1.1);\n  }\n`;\n\nForecastStyle.Bottom = styled.div`\n  span {\n    display: block;\n    line-height: 1.4;\n    font-size: calc(${Root.ViewWidthFontSize} / 1.25);\n  }\n`;\n\nexport default ForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Forecast Component:\n// This is the component to display a\n// Forecast from a specific location.\n\n// TODO: Fix CORS Console Error\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport axios from 'axios';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport ForecastStyle from 'components/library/Forecast/styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  state = {\n    forecast: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        'https://api.darksky.net/forecast/20fcdf5192dab046a8b9303c6f6d2667/37.8267,-122.4233'\n      )\n      .then(res => {\n        const forecast = res.data;\n        this.setState({ forecast });\n      });\n  }\n\n  render() {\n    return (\n      <ForecastStyle>\n        <ForecastStyle.Top>\n          <span>64</span>\n        </ForecastStyle.Top>\n        <ForecastStyle.Bottom>\n          <span>Overcast Clouds</span>\n          <span>45% Humidity</span>\n        </ForecastStyle.Bottom>\n      </ForecastStyle>\n    );\n  }\n}\n\n// const Forecast = ({}) => (\n//   <ForecastStyle>\n//     <ForecastStyle.Top>\n//       <span>64</span>\n//     </ForecastStyle.Top>\n//     <ForecastStyle.Bottom>\n//       <span>Overcast Clouds</span>\n//       <span>45% Humidity</span>\n//     </ForecastStyle.Bottom>\n//   </ForecastStyle>\n// );\n\nexport default Forecast;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SideForecastStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideForecastStyle from './styles.scss';\n\n// Components\nimport Forecast from '../../../Forecast';\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideForecast = ({\n  BgColor,\n  BgImage,\n  Location,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideForecastStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideForecastStyle.Header>{Location}</SideForecastStyle.Header>\n      <SideForecastStyle.Body>\n        <Forecast Location={Location} />\n      </SideForecastStyle.Body>\n    </Link>\n  </SideForecastStyle>\n);\n\nexport default SideForecast;\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport WidgetContainerStyle from './styles.scss';\n\n// Components\nimport ArticleWidget from '../Library/Article';\nimport CrossWidget from '../Library/Cross';\nimport DefaultWidget from '../Library/Default';\nimport MenuWidget from '../Library/MenuWidget';\nimport SideHeaderWidget from '../Library/SideHeader';\nimport SideForecast from '../Library/SideForecast';\nimport SideWidget from '../Library/SideWidget';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Widget Slider:\n// For WidgetContainers with multiple widgets\n// inside of them.\nclass WidgetSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: true,\n      speed: 1500,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: 1,\n      autoplay: true,\n      infinite: true,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={g => (this.slider = g)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// WidgetType\nclass WidgetType extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  // Render\n  render() {\n    const WidgetContent = this.props.WidgetContent;\n\n    // If the Widget Content is > 1, then make a Slider.\n    if (WidgetContent.length > 1) {\n      return (\n        // In this case we wrap the entire element in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // SideForecast\n        // SideWidget\n        // Default\n\n        <WidgetContainerStyle.Inner className=\"widget-inner\">\n          <WidgetSlider>\n            {WidgetContent.map((Content, index) => {\n              switch (Content.Style) {\n                case 'Article':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      CallToAction={Content.Meta.Generic.CallToAction}\n                      key={index}\n                    />\n                  );\n                case 'SideWidget':\n                  return (\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      BgQuery={Content.Meta.SideWidget.BgQuery}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                      key={index}\n                    />\n                  );\n                case 'MenuWidget':\n                  return (\n                    <MenuWidget\n                      BgColor={Content.Meta.MenuWidget.BgColor}\n                      BgImage={Content.Meta.MenuWidget.BgImage}\n                      BgQuery={Content.Meta.MenuWidget.BgQuery}\n                      TextColor={Content.Meta.MenuWidget.TextColor}\n                      TintColor={Content.Meta.MenuWidget.TintColor}\n                      TintOpacity={Content.Meta.MenuWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.MenuWidget.Subhead}\n                      Headline={Content.Meta.MenuWidget.Headline}\n                      IconName={Content.Meta.MenuWidget.IconName}\n                      IconColor={Content.Meta.MenuWidget.IconColor}\n                      CallToAction={Content.Meta.MenuWidget.CallToAction}\n                      key={index}\n                    />\n                  );\n                case 'SideForecast':\n                  return (\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  );\n                case 'Generic':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImageFile={Content.Meta.Generic.BgImageFile}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      CallToAction={Content.Meta.Generic.CallToAction}\n                      key={index}\n                    />\n                  );\n              }\n            })}\n          </WidgetSlider>\n        </WidgetContainerStyle.Inner>\n      );\n    }\n\n    // If there is only 1 Widget.\n    else {\n      return (\n        // In this case we wrap the INDIVIDUAL elements in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii\n        // if needed, allowing for more customized Widget Components.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // Cross\n        // SideHeader\n        // SideForecast\n        // SideWidget\n        // Default\n        <>\n          {WidgetContent.map((Content, index) => {\n            switch (Content.Style) {\n              case 'Cross':\n                return <CrossWidget key={index} />;\n              case 'Article':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'Generic':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImageFile={Content.Meta.Generic.BgImageFile}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      CallToAction={Content.Meta.Generic.CallToAction}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'MenuWidget':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <MenuWidget\n                      BgColor={Content.Meta.MenuWidget.BgColor}\n                      BgImage={Content.Meta.MenuWidget.BgImage}\n                      BgQuery={Content.Meta.MenuWidget.BgQuery}\n                      TextColor={Content.Meta.MenuWidget.TextColor}\n                      TintColor={Content.Meta.MenuWidget.TintColor}\n                      TintOpacity={Content.Meta.MenuWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.MenuWidget.Subhead}\n                      Headline={Content.Meta.MenuWidget.Headline}\n                      IconName={Content.Meta.MenuWidget.IconName}\n                      IconColor={Content.Meta.MenuWidget.IconColor}\n                      CallToAction={Content.Meta.MenuWidget.CallToAction}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideWidget':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      BgQuery={Content.Meta.SideWidget.BgQuery}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideForecast':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideHeader':\n                return (\n                  <SideHeaderWidget\n                    Header={Content.Meta.SideHeader.Header}\n                    IntroCopy={Content.Meta.SideHeader.IntroCopy}\n                    BodyCopy={Content.Meta.SideHeader.BodyCopy}\n                    TextColor={Content.Meta.SideHeader.TextColor}\n                    key={index}\n                  />\n                );\n            }\n          })}\n        </>\n      );\n    }\n  }\n}\n\nconst WidgetContainer = ({ WidgetContent, Flex, Width }) => (\n  <WidgetContainerStyle className=\"widget\" Flex={Flex} Width={Width}>\n    <WidgetType WidgetContent={WidgetContent} />\n  </WidgetContainerStyle>\n);\n\nexport default WidgetContainer;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  src,\n  AltText,\n  className,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={src}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    AltText={AltText}\n    className={className ? className : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  min-width: 100px\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  .widget-inner-wrapper {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: relative;\n    z-index: 10;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  .btn {\n    position: absolute;\n    flex: unset;\n    width: unset;\n    display: block;\n    flex-direction: unset;\n    left: ${Root.ViewWidthPadding};\n    bottom: ${Root.ViewWidthPadding};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%) translateZ(0);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Widget Icon */\n\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%) translateZ(0);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3) translateZ(0);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetInnerWrapper = ({ children, Destination }) => {\n  if (Destination) {\n    return (\n      <Link className=\"widget-inner-wrapper\" to={Destination}>\n        {children}\n      </Link>\n    );\n  } else {\n    return <span className=\"widget-inner-wrapper\">{children}</span>;\n  }\n};\n\nconst DefaultWidget = ({\n  BgColor,\n  BgImage,\n  BgQuery,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n  BgImageFile,\n  BgImageAltText,\n  CallToAction,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={BgImageFile ? Theme.Color.White : TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n\n    <WidgetInnerWrapper Destination={Destination}>\n      <WidgetStyle.Subhead className=\"widget-subheadline\">\n        {Subhead}\n      </WidgetStyle.Subhead>\n      <WidgetStyle.Headline className=\"widget-headline\">\n        {Headline}\n      </WidgetStyle.Headline>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n      {CallToAction ? <span class=\"cta-btn\">{CallToAction}</span> : null}\n    </WidgetInnerWrapper>\n    {BgImageFile ? (\n      <ImgMatch src={BgImageFile} AltText={Headline} />\n    ) : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={Headline} /> : null}\n  </WidgetStyle>\n);\n\nexport default DefaultWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const defaultWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = data.map((widget, index) => {\n      return {\n        // Begin WidgetContent\n        Flex: widget.widget_height_fraction ? widget.widget_height_fraction : 1,\n        Width: widget.widget_width_multiple ? widget.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: widget.widget_destination,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: widget.widget_bg_color,\n                BgImage: '',\n                BgQuery: widget.widget_background_image.localFile\n                  ? widget.widget_background_image.localFile.childImageSharp\n                      .fluid\n                  : false,\n                Subhead: widget.widget_subheadline,\n                Headline: widget.widget_headline.text,\n                TextColor: widget.widget_text_color,\n                IconColor: widget.widget_text_color,\n                IconName: widget.widget_icon_class,\n                TintColor: widget.tint_color ? widget.tint_color : '',\n                TintOpacity: widget.tint_opacity ? widget.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      };\n    });\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Convert #HEXCODES to RGBA\n// hexToRGB('#FF0000', 0.5);\n\nconst hexToRGB = (hex, alpha) => {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  } else {\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n  }\n};\n\nexport default hexToRGB;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideHeaderWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: none;\n  position: relative;\n  overflow: hidden;\n  max-width: 350px;\n  cursor: crosshair;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSideHeaderWidgetStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Root.ViewWidthPadding};\n  flex: 1;\n  width: 100%;\n  position: relative;\n`;\n\nSideHeaderWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  opacity: 0.3;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideHeaderWidgetStyle.Body = styled.div``;\n\nSideHeaderWidgetStyle.IntroCopy = styled.p`\n  font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n  padding-bottom: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: light;\n`;\n\nSideHeaderWidgetStyle.BodyCopy = styled.p`\n  font-size: ${Root.ViewWidthFontSize};\n  padding-top: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: regular;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: calc(${Root.ViewWidthFontSize} * 1.5);\n    height: 1px;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n`;\n\nexport default SideHeaderWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideHeaderWidgetStyle.js:\n\n// Core\nimport React from 'react';\n\n// Styles\nimport SideHeaderWidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideHeaderWidget = ({ Header, IntroCopy, BodyCopy, TextColor }) => (\n  <SideHeaderWidgetStyle TextColor={TextColor} className=\"widget-content\">\n    <SideHeaderWidgetStyle.Inner>\n      <SideHeaderWidgetStyle.Header>{Header}</SideHeaderWidgetStyle.Header>\n      <SideHeaderWidgetStyle.Body>\n        <SideHeaderWidgetStyle.IntroCopy>\n          {IntroCopy}\n        </SideHeaderWidgetStyle.IntroCopy>\n        <SideHeaderWidgetStyle.BodyCopy>\n          {BodyCopy}\n        </SideHeaderWidgetStyle.BodyCopy>\n      </SideHeaderWidgetStyle.Body>\n    </SideHeaderWidgetStyle.Inner>\n  </SideHeaderWidgetStyle>\n);\n\nexport default SideHeaderWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Title Widget Map inside the Columns Map.\nexport const sideHeaderWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = [\n      {\n        // Begin WidgetContent\n        Flex: 1,\n        Width: 6,\n        WidgetContent: [\n          {\n            Destination: null,\n            Style: 'SideHeader',\n            Meta: {\n              SideHeader: {\n                Header: data.widget_headline.text,\n                IntroCopy: data.widget_intro_copy,\n                BodyCopy: data.widget_body_copy,\n                TextColor: Theme.Color.Nightsky,\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      },\n    ];\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    z-index: 5;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideWidgetStyle.Body = styled.div``;\n\nSideWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: calc(${Root.Size} / 1.5);\n`;\n\nSideWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideWidgetStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideWidget = ({\n  BgColor,\n  BgQuery,\n  BgImage,\n  Header,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideWidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n    <Link to={Destination}>\n      <SideWidgetStyle.Header>{Header}</SideWidgetStyle.Header>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideWidgetStyle.Body>\n        <SideWidgetStyle.Subhead>{Subhead}</SideWidgetStyle.Subhead>\n      </SideWidgetStyle.Body>\n      <SideWidgetStyle.Icon\n        className={'fas fa-' + IconName}\n        Color={IconColor}\n      />\n    </Link>\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={Header} /> : null}\n    {console.log('BgQuery:')}\n    {console.log(BgQuery)}\n  </SideWidgetStyle>\n);\n\nexport default SideWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const sideWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = [\n      {\n        // Begin WidgetContent\n        Flex: data.widget_height_fraction ? data.widget_height_fraction : 1,\n        Width: data.widget_width_multiple ? data.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: data.widget_destination,\n            Style: 'SideWidget',\n            Meta: {\n              SideWidget: {\n                BgColor: data.widget_bg_color,\n                BgImage: '',\n                BgQuery: data.widget_background_image.localFile\n                  ? data.widget_background_image.localFile.childImageSharp.fluid\n                  : false,\n                Subhead: data.widget_subheadline,\n                Header: data.widget_headline.text,\n                TextColor: data.widget_text_color,\n                IconColor: data.widget_text_color,\n                IconName: data.widget_icon_class,\n                TintColor: data.tint_color ? data.tint_color : '',\n                TintOpacity: data.tint_opacity ? data.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      },\n    ];\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n"],"sourceRoot":""}