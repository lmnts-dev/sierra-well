{"version":3,"sources":["webpack:///./src/components/library/Section/styles.scss.js","webpack:///./src/components/core/ImgMatch/index.js","webpack:///./src/components/library/Widgets/Container/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Article/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Cross/index.js","webpack:///./src/components/library/Widgets/Library/Logo/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Logo/index.js","webpack:///./src/components/library/Widgets/Library/MenuWidget/styles.scss.js","webpack:///./src/components/library/ContentOverlay/Menu/styles.scss.js","webpack:///./src/components/library/ContentOverlay/styles.scss.js","webpack:///./src/components/library/ContentOverlay/Menu/index.js","webpack:///./src/components/library/Widgets/Library/MenuWidget/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/styles.scss.js","webpack:///./src/components/library/Forecast/styles.scss.js","webpack:///./src/components/library/Forecast/index.js","webpack:///./src/components/library/Widgets/Library/SideForecast/index.js","webpack:///./src/components/library/Widgets/Container/index.js","webpack:///./src/helpers/hexToRGB.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Widgets/Library/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Library/Default/index.js","webpack:///./src/components/library/Widgets/Library/SideHeader/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideHeader/index.js","webpack:///./src/components/library/Widgets/Library/SideWidget/styles.scss.js","webpack:///./src/components/library/Widgets/Library/SideWidget/index.js"],"names":["SectionInnerStyle","styled","div","_templateObject","Root","Grid","Gutter","Left","Size","SectionContentStyle","_templateObject2","props","FullWidth","Theme","Base","SiteWidth","Image","_ref","AltText","src","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","data","_public_static_d_346298689_json__WEBPACK_IMPORTED_MODULE_3__","match","useMemo","allFile","edges","find","_ref2","node","relativePath","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_5___default","Object","assign","className","objectFit","objectPosition","alt","fluid","childImageSharp","WidgetContainerStyle","Sm","Flex","Width","Inner","Radius","Transition","Duration","CssEase","ViewWidthPadding","Color","White","WidgetStyle","styles_scss_templateObject","BgColor","TextColor","Black","BgImage","TintColor","TintOpacity","Media","Md","Subhead","styles_scss_templateObject2","ViewWidthFontSize","Headline","_templateObject3","Icon","i","_templateObject4","IconSize","CrossWidgetStyle","Cross_styles_scss_templateObject","Nav","Footer","Cross_styles_scss_templateObject2","CrossWidget","objectDestructuringEmpty_default","react_default","Cross_styles_scss","styles_scss","Default","Nightsky","Destination","IconColor","Primary","IconName","Slate","Gunmetal","BgImageFile","Logo_styles_scss_templateObject","Logo_styles_scss_templateObject2","styles_scss_templateObject3","styles_scss_templateObject4","WidgetInnerWrapper","children","gatsby_browser_entry","to","LogoWidget","BgQuery","CallToAction","BgImageAltText","Logo_styles_scss","Logo_WidgetInnerWrapper","Brandmark","Icons","Name","class","ImgMatch","ImgQuery","MenuWidget_styles_scss_templateObject","MenuWidget_styles_scss_templateObject2","MenuWidget_styles_scss_templateObject3","MenuWidget_styles_scss_templateObject4","MenuOverlayStyle","Menu_styles_scss_templateObject","OverlayContentContainerStyle","ContentOverlay_styles_scss_templateObject","SlideUpKeyframes","MenuOverlayToggle","_this","_React$Component","call","this","state","overlayVisible","toggleOverlay","bind","assertThisInitialized_default","setState","render","Fragment","onClick","onKeyPress","role","tabIndex","Menu_OverlayContentContainer","overlayToggle","React","Component","OverlayContentContainer","_React$Component2","ReactDOM","createPortal","ContentOverlay_styles_scss","Menu_styles_scss","fas","frameBorder","title","document","getElementById","MenuWidget","MenuWidget_styles_scss","Menu","Btn","IconClass","Label","IconPosition","Pseudo","IconFas","SideForecastStyle","SideForecast_styles_scss_templateObject","Header","h1","SideForecast_styles_scss_templateObject2","ViewHeightFontSize","Body","SideForecast_styles_scss_templateObject3","SideForecast_styles_scss_templateObject4","_templateObject5","ForecastStyle","Forecast_styles_scss_templateObject","Top","Forecast_styles_scss_templateObject2","Bottom","Forecast_styles_scss_templateObject3","Forecast","forecast","componentDidMount","_this2","axios","get","then","res","Forecast_styles_scss","SideForecast","Location","SideForecast_styles_scss","library_Forecast","WidgetSlider","settings","dots","Dots","speed","arrows","autoplaySpeed","slidesToShow","autoplay","infinite","Helmet","rel","type","href","lib_default","ref","g","slider","WidgetType","WidgetContent","length","Container_WidgetSlider","map","Content","index","Style","Meta","Generic","key","SideWidget","Library_MenuWidget","Library_SideForecast","HideCarat","Logo","Cross","SideHeader","IntroCopy","BodyCopy","WidgetContainer","Container_WidgetType","hexToRGB","hex","alpha","r","parseInt","slice","b","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","fadeIn","d","__webpack_exports__","defaultWidgetDataTransformer","DefaultWidget","Default_WidgetInnerWrapper","widget","widget_height_fraction","widget_width_multiple","widget_destination","widget_bg_color","widget_background_image","localFile","widget_subheadline","widget_headline","text","widget_text_color","widget_icon_class","tint_color","tint_opacity","SideHeaderWidgetStyle","p","_templateObject6","SideHeader_sideHeaderWidgetDataTransformer","SideHeaderWidget","sideHeaderWidgetDataTransformer","widget_intro_copy","widget_body_copy","SideWidgetStyle","sideWidgetDataTransformer"],"mappings":"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","file":"3-0072cc6a31171da50798.js","sourcesContent":["// SectionInnerStyle Styles:\n// These are nearly identical to the Hero base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n  padding-right: ${Root.Size};\n`;\n\nexport const SectionContentStyle = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  display: flex;\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Dynamic query variables in GraphQl queries for Gatsby-Image\n// Learn more: https://github.com/gatsbyjs/gatsby/issues/10482#issuecomment-485349612\n\nimport React, { useMemo } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport Img from 'gatsby-image/withIEPolyfill';\n\nconst Image = ({ AltText, src, ...props }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { internal: { mediaType: { regex: \"images/\" } } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 650) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const match = useMemo(\n    () => data.allFile.edges.find(({ node }) => src === node.relativePath),\n    [data, src]\n  );\n\n  return (\n    <Img\n      className=\"img\"\n      objectFit=\"cover\"\n      objectPosition=\"50% 50%\"\n      alt={AltText ? AltText : null}\n      fluid={match.node.childImageSharp.fluid}\n      {...props}\n    />\n  );\n};\n\nexport default Image;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetContainerStyle = styled.div`\n  padding-top: ${Theme.Base.Size.Sm};\n  flex: ${props => (props.Flex ? props.Flex : '1')};\n  display: flex;\n  flex-direction: column;\n  width: ${props =>\n    props.Width ? 'calc(' + Root.Size + ' * ' + props.Width + ')' : '100%'};\n`;\n\nWidgetContainerStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  overflow: hidden;\n  z-index: 1;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n\n  /* Slick Slider Adjustments */\n\n  .slick-slider {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    .slick-track {\n      display: block !important;\n    }\n\n    .slick-dots {\n      bottom: ${Root.ViewWidthPadding};\n      left: ${Root.ViewWidthPadding};\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.White};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n\n  .slick-slider,\n  .slick-list,\n  .slick-track {\n    flex: 1;\n  }\n\n  .slick-list,\n  .slick-slider {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    margin: 0;\n  }\n\n  .slick-slide {\n    display: flex !important;\n    flex-direction: column;\n    align-items: stretch;\n    flex: 1;\n\n    &:first-child {\n      padding: 0;\n    }\n\n    div {\n      &:first-child {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n      }\n    }\n\n    .widget-content {\n      flex: 1;\n\n      div {\n        &:first-child {\n          flex: unset;\n          display: unset;\n          flex-direction: unset;\n          align-items: unset;\n        }\n      }\n    }\n  }\n`;\n\nexport default WidgetContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Cross Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Cross Widget Content */\nconst CrossWidgetStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(\n    (100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size})) -\n      (${Theme.Base.Size.Sm} * 2)\n  );\n`;\n\nCrossWidgetStyle.Inner = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 0.75fr 1fr;\n  grid-template-rows: 1fr 0.75fr 1fr;\n  grid-gap: calc(${Root.Size} / 4);\n  justify-content: stretch;\n  justify-items: stretch;\n  grid-auto-flow: row;\n  align-items: stretch;\n  width: calc(\n    (100vh - (${Root.Nav.Size} * 2 + ${Root.Footer.Size})) -\n      (${Theme.Base.Size.Sm} * 2)\n  );\n  flex: 1;\n`;\n\nexport default CrossWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// CrossWidget.js:\n\n// Visual:\n// https://www.dropbox.com/s/474d6mc15w2q1vk/Screenshot%202019-04-16%2012.41.23.png?dl=0\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport CrossWidgetStyle from './styles.scss';\nimport WidgetContainerStyle from './../../Container/styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport DefaultWidget from './../Default';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst CrossWidget = ({}) => (\n  <CrossWidgetStyle>\n    <CrossWidgetStyle.Inner>\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Nightsky}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/menu\"\n          Subhead=\"\"\n          Headline=\"View Our Menu\"\n          IconColor={Theme.Color.Primary}\n          IconName=\"plus\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/company\"\n          Subhead=\"We've reinvented Cannabis Retail.\"\n          Headline=\"Learn more.\"\n          IconColor={Theme.Color.White}\n          IconName=\"cannabis\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.White}\n          BgImage=\"\"\n          TextColor={Theme.Color.Nightsky}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/company\"\n          Subhead=\"Outreach\"\n          Headline=\"How we raised $5,000 for the Children’s Leukemia Foundation.\"\n          IconColor={Theme.Color.Nightsky}\n          IconName=\"heart\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/menu/\"\n          Subhead=\"No minimums.\"\n          Headline=\"100% Free Delivery.\"\n          IconColor={Theme.Color.White}\n          IconName=\"car\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/subpage\"\n          Subhead=\"\"\n          Headline=\"Order by Phone.\"\n          IconColor={Theme.Color.White}\n          IconName=\"phone\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/company\"\n          Subhead=\"Leafly 2018\"\n          Headline=\"Voted Best Boutique Dispensary\"\n          IconColor={Theme.Color.White}\n          IconName=\"trophy\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Slate}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/learn\"\n          Subhead=\"Questions?\"\n          Headline=\"We've got answers.\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Primary}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor=\"\"\n          TintOpacity=\"\"\n          Destination=\"/company\"\n          Subhead=\"Values\"\n          Headline=\"Discover a new type of Cannabis Store.\"\n          IconColor={Theme.Color.White}\n          IconName=\"heart\"\n        />\n      </WidgetContainerStyle.Inner>\n\n      <WidgetContainerStyle.Inner>\n        <DefaultWidget\n          BgColor={Theme.Color.Gunmetal}\n          BgImage=\"\"\n          TextColor={Theme.Color.White}\n          TintColor={Theme.Color.Black}\n          TintOpacity=\"0.6\"\n          BgImageFile=\"be14.png\"\n          Destination=\"/locations\"\n          Subhead=\"63 locations\"\n          Headline=\"View our locations\"\n          IconColor={Theme.Color.White}\n          IconName=\"map-marker-alt\"\n        />\n      </WidgetContainerStyle.Inner>\n    </CrossWidgetStyle.Inner>\n  </CrossWidgetStyle>\n);\n\nexport default CrossWidget;\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  min-width: 100px\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  .widget-inner-wrapper {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: relative;\n    z-index: 10;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  .btn {\n    position: absolute;\n    flex: unset;\n    width: unset;\n    display: block;\n    flex-direction: unset;\n    left: ${Root.ViewWidthPadding};\n    bottom: ${Root.ViewWidthPadding};\n  }\n\n  /* The Carat Icon */\n  .ico {\n    svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%) translateZ(0);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n    }\n  }\n\n  /* The Brandmark */\n\n  .brandmark {\n    width: 60%;\n    margin-bottom: calc(${Root.ViewWidthPadding} / 2);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      .ico {\n        svg {\n        transform: translateX(50%) translateZ(0);\n        fill: ${Theme.Color.White};\n        }\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3) translateZ(0);\n      }\n\n      /* The Brandmark */\n      .brandmark {\n        fill: ${Theme.Color.White};\n        transition: all ${Theme.Base.Transition.Duration}\n          ${Theme.Base.Transition.CssEase};\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: calc(${Root.ViewWidthFontSize} * 2);\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: calc(${Root.ViewWidthFontSize} * 1.2);\n  line-height: 1.5;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: calc(${Root.IconSize} * 1);\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\nimport Brandmark from 'components/core/Branding/Brandmark';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetInnerWrapper = ({ children, Destination }) => {\n  if (Destination) {\n    return (\n      <Link className=\"widget-inner-wrapper\" to={Destination}>\n        {children}\n      </Link>\n    );\n  } else {\n    return <span className=\"widget-inner-wrapper\">{children}</span>;\n  }\n};\n\nconst LogoWidget = ({\n  BgColor,\n  BgImage,\n  BgQuery,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n  BgImageFile,\n  BgImageAltText,\n  CallToAction,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={BgImageFile ? Theme.Color.White : TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n\n    <WidgetInnerWrapper Destination={Destination}>\n      <Brandmark />\n      <WidgetStyle.Subhead className=\"widget-subheadline\">\n        {Subhead}\n      </WidgetStyle.Subhead>\n      <WidgetStyle.Headline className=\"widget-headline\">\n        {Headline}\n      </WidgetStyle.Headline>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n      {CallToAction ? <span class=\"cta-btn\">{CallToAction}</span> : null}\n    </WidgetInnerWrapper>\n    {BgImageFile ? <ImgMatch src={BgImageFile} AltText={Headline} /> : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={Headline} /> : null}\n  </WidgetStyle>\n);\n\nexport default LogoWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const LogoWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = data.map((widget, index) => {\n      return {\n        // Begin WidgetContent\n        Flex: widget.widget_height_fraction ? widget.widget_height_fraction : 1,\n        Width: widget.widget_width_multiple ? widget.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: widget.widget_destination,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: widget.widget_bg_color,\n                BgImage: '',\n                BgQuery: widget.widget_background_image.localFile\n                  ? widget.widget_background_image.localFile.childImageSharp\n                      .fluid\n                  : false,\n                Subhead: widget.widget_subheadline,\n                Headline: widget.widget_headline.text,\n                TextColor: widget.widget_text_color,\n                IconColor: widget.widget_text_color,\n                IconName: widget.widget_icon_class,\n                TintColor: widget.tint_color ? widget.tint_color : '',\n                TintOpacity: widget.tint_opacity ? widget.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      };\n    });\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  min-width: 100px\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  .widget-inner-wrapper {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: relative;\n    z-index: 10;\n    width: 100%;\n    color: white;\n    /* transform: scale(1.000000001); */\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n\n      .overlay-toggle {\n        flex: 1;\n        position: relative;\n      }\n  }\n\n  .btn {\n    position: absolute !important;\n    display: block;\n    flex-direction: unset;\n    left: calc(${Root.Size} * .4);\n    bottom: calc(${Root.Size} * .4);\n    \n    .btn-inner {\n      font-size: 1rem;\n    }\n\n    .ico {\n      i {\n        font-size: 1.2rem;\n      }\n    }\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%) translateZ(0);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Widget Icon */\n\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%) translateZ(0);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3) translateZ(0);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MenuHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Extended Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframes\nimport { SlideUpKeyframes } from 'components/core/Transition/Keyframes.js';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MenuOverlayStyle = styled.div`\n  position: relative;\n  flex: 1;\n  overflow-x: hidden;\n  width: 100%;\n  overflow-y: auto;\n  background: ${Theme.Color.White};\n\n  iframe {\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: ${Root.Nav.Size * 0.4};\n    top: ${Root.Nav.Size};\n    width: 100%;\n    height: calc(100% - (${Root.Nav.Size} + (${Root.Nav.Size} * 0.4)));\n  }\n\n  .overlay-bar-inner {\n    position: relative;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    height: 100%;\n  }\n\n  .overlay-top-bar,\n  .overlay-bottom-bar {\n    position: absolute;\n    z-index: 500;\n    left: 0;\n    right: 0;\n    height: ${Root.Nav.Size};\n    background: ${Theme.Color.White};\n    color: ${Theme.Color.Nightsky};\n    display: flex;\n    align-items: center;\n    padding: 0 calc(${Root.Size});\n    font-weight: bold;\n    font-size: 1.1rem;\n  }\n\n  .overlay-top-bar {\n    top: 0;\n    justify-content: center;\n\n    .overlay-close {\n      position: absolute;\n      width: calc(${Root.Size} * 1.4);\n      height: calc(${Root.Size} * 1.4);\n      left: 0;\n      top: 50%;\n      transform: translateY(-50%);\n\n      figure {\n        padding: 0;\n        margin: 0;\n        width: 100%;\n        height: 100%;\n        position: relative;\n\n        &:before,\n        &:after {\n          content: '';\n          position: absolute;\n          left: 50%;\n          top: 50%;\n          width: 100%;\n          height: 2px;\n          background-color: ${Theme.Color.Nightsky};\n        }\n\n        &:before {\n          transform: rotate(45deg) translate(-50%, -50%);\n          transform-origin: left center;\n        }\n        &:after {\n          transform: rotate(-45deg) translate(-50%, -50%);\n          transform-origin: left center;\n        }\n      }\n    }\n\n    .overlay-icon {\n      position: absolute;\n      width: calc(${Root.Size} * 1.4);\n      height: calc(${Root.Size} * 1.4);\n      right: 0;\n      top: 50%;\n      transform: translateY(-50%);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      i {\n        font-size: 1.7rem;\n        line-height: 0;\n      }\n    }\n\n    .overlay-bar-inner {\n      justify-content: center;\n    }\n  }\n\n  .overlay-bottom-bar {\n    bottom: 0;\n    border-top: ${Theme.Color.Slate} 1px solid;\n    padding: 0 calc(${Root.Size} * 1.5);\n\n    .overlay-bar-inner {\n      justify-content: space-between;\n    }\n\n    a {\n      color: ${Theme.Color.Primary};\n      text-decoration: none;\n\n      &:hover {\n        color: ${Theme.Color.Primary};\n      }\n    }\n  }\n`;\n\nexport default MenuOverlayStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MenuHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Extended Styles\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Keyframes\nimport { SlideUpKeyframes } from 'components/core/Transition/Keyframes.js';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst OverlayContentContainerStyle = styled.div`\n  width: 100vw;\n  /* height: calc(100vh - ${Root.Nav.Size}); */\n  left: 0;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  right: 0;\n  background-color: ${Theme.Color.White};\n  z-index: 999;\n  border-radius: ${Root.Radius};\n  animation: ${SlideUpKeyframes} .5s ease;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  position: fixed !important;\n  -webkit-transform: none !important;\n`;\n\nexport default OverlayContentContainerStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MenuHero Component:\n// This is the specialize hero for the Menu page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Device from 'components/core/DeviceQuery';\n\n// Styles\nimport MenuOverlayStyle from './styles.scss';\nimport OverlayContentContainerStyle from 'components/library/ContentOverlay/styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nclass MenuOverlayToggle extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n\n    // Initial state.\n    this.state = {\n      overlayVisible: false,\n    };\n\n    // Bind overlay state.\n    this.toggleOverlay = this.toggleOverlay.bind(this);\n  }\n\n  // Base functions to change transition state for the Overlay.\n  toggleOverlay() {\n    // If currently hidden...\n    if (this.state.overlayVisible == false) {\n      this.setState({\n        overlayVisible: true,\n      });\n    }\n\n    // If currently visible...\n    else {\n      this.setState({\n        overlayVisible: false,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <span\n          onClick={this.toggleOverlay.bind(this)}\n          // These are eslint errors for accessibility below.\n          onKeyPress={this.toggleOverlay.bind(this)}\n          role=\"button\"\n          tabIndex=\"0\"\n          className=\"overlay-toggle\"\n        >\n          {this.props.children}\n        </span>\n        <OverlayContentContainer\n          overlayVisible={this.state.overlayVisible}\n          overlayToggle={this.toggleOverlay.bind(this)}\n        />\n      </>\n    );\n  }\n}\n\nclass OverlayContentContainer extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    const overlayVisible = this.props.overlayVisible;\n\n    // If the overlay is hidden...\n    if (overlayVisible == false) {\n      return null;\n    }\n\n    // If the overlay is visible...\n    else {\n      return ReactDOM.createPortal(\n        <OverlayContentContainerStyle>\n          <MenuOverlayStyle>\n            <div className=\"overlay-top-bar\">\n              <div className=\"overlay-bar-inner\">\n                <span\n                  onClick={this.props.overlayToggle}\n                  // These are eslint errors for accessibility below.\n                  onKeyPress={this.props.overlayToggle}\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  className=\"overlay-close\"\n                >\n                  <figure />\n                </span>\n                <span class=\"overlay-title\">Carson City, Nevada</span>\n                <span class=\"overlay-icon\">\n                  <Icon fas={true} Name=\"share-alt\" />\n                </span>\n              </div>\n            </div>\n            <iframe\n              className=\"dutchie-iframe\"\n              frameBorder=\"0\"\n              title=\"menu\"\n              src=\"https://www.dutchie.com/embedded-menu/sierra-well-reno/menu?\"\n            />\n            <div className=\"overlay-bottom-bar\">\n              <div className=\"overlay-bar-inner\">\n                <Link to=\"/\">Call</Link>\n                <Link to=\"/\">Visit</Link>\n                <Link to=\"/\">Chat</Link>\n                <Link to=\"/\">Info</Link>\n              </div>\n            </div>\n          </MenuOverlayStyle>\n        </OverlayContentContainerStyle>,\n        document.getElementById('content-overlay')\n      );\n    }\n  }\n}\n\nexport default MenuOverlayToggle;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Default Widget.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\nimport MenuOverlayToggle from 'components/library/ContentOverlay/Menu';\nimport Btn from 'components/library/Btn/';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MenuWidget = ({\n  BgColor,\n  BgImage,\n  BgQuery,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n  BgImageFile,\n  BgImageAltText,\n  CallToAction,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={BgImageFile ? Theme.Color.White : TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n    <span className=\"widget-inner-wrapper\">\n      <MenuOverlayToggle>\n        <WidgetStyle.Subhead className=\"widget-subheadline\">\n          {Subhead}\n        </WidgetStyle.Subhead>\n        <WidgetStyle.Headline className=\"widget-headline\">\n          {Headline}\n        </WidgetStyle.Headline>\n        <Btn\n          IconClass=\"expand\"\n          Label=\"View Menu\"\n          BgColor={IconColor}\n          TextColor={Theme.Color.White}\n          IconPosition=\"left\"\n          Pseudo\n          IconFas\n        />\n        <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n        <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n        {CallToAction ? <span class=\"cta-btn\">{CallToAction}</span> : null}\n      </MenuOverlayToggle>\n    </span>\n\n    {BgImageFile ? (\n      <ImgMatch src={BgImageFile} AltText={BgImageAltText} />\n    ) : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={BgImageAltText} /> : null}\n  </WidgetStyle>\n);\n\nexport default MenuWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const MenuWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = data.map((widget, index) => {\n      return {\n        // Begin WidgetContent\n        Flex: widget.widget_height_fraction ? widget.widget_height_fraction : 1,\n        Width: widget.widget_width_multiple ? widget.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: widget.widget_destination,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: widget.widget_bg_color,\n                BgImage: '',\n                BgQuery: widget.widget_background_image.localFile\n                  ? widget.widget_background_image.localFile.childImageSharp\n                      .fluid\n                  : false,\n                Subhead: widget.widget_subheadline,\n                Headline: widget.widget_headline.text,\n                TextColor: widget.widget_text_color,\n                IconColor: widget.widget_text_color,\n                IconName: widget.widget_icon_class,\n                TintColor: widget.tint_color ? widget.tint_color : '',\n                TintOpacity: widget.tint_opacity ? widget.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      };\n    });\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideForecastStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        &:before {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideForecastStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideForecastStyle.Body = styled.div``;\n\nSideForecastStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n`;\n\nSideForecastStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Button Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst ForecastStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nForecastStyle.Top = styled.div`\n  font-size: calc(${Root.ViewHeightFontSize} * 5);\n  font-family: 'Roboto', 'Helvetica', sans-serif;\n  font-weight: 100;\n  padding-right: calc(${Root.ViewWidthPadding} * 1.2);\n  margin-left: -5px;\n  position: relative;\n\n  &:before,\n  &:after {\n    position: absolute;\n    right: 0;\n  }\n\n  &:before {\n    content: '';\n    top: calc(${Root.ViewWidthPadding} / 2.2);\n    width: calc(${Root.ViewWidthPadding} / 1.4);\n    height: calc(${Root.ViewWidthPadding} / 1.4);\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 100%;\n  }\n\n  &:after {\n    content: 'F';\n    color: ${Theme.Color.White};\n    font-size: calc(${Root.ViewWidthPadding});\n    line-height: 0;\n    right: calc(${Root.ViewWidthPadding} / 5.5);\n    bottom: calc(${Root.ViewWidthPadding} / 1.1);\n  }\n`;\n\nForecastStyle.Bottom = styled.div`\n  span {\n    display: block;\n    line-height: 1.4;\n    font-size: calc(${Root.ViewWidthFontSize} / 1.25);\n  }\n`;\n\nexport default ForecastStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Forecast Component:\n// This is the component to display a\n// Forecast from a specific location.\n\n// TODO: Fix CORS Console Error\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport axios from 'axios';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport ForecastStyle from 'components/library/Forecast/styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nclass Forecast extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  state = {\n    forecast: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(\n        'https://api.darksky.net/forecast/20fcdf5192dab046a8b9303c6f6d2667/37.8267,-122.4233'\n      )\n      .then(res => {\n        const forecast = res.data;\n        this.setState({ forecast });\n      });\n  }\n\n  render() {\n    return (\n      <ForecastStyle>\n        <ForecastStyle.Top>\n          <span>64</span>\n        </ForecastStyle.Top>\n        <ForecastStyle.Bottom>\n          <span>Overcast Clouds</span>\n          <span>45% Humidity</span>\n        </ForecastStyle.Bottom>\n      </ForecastStyle>\n    );\n  }\n}\n\n// const Forecast = ({}) => (\n//   <ForecastStyle>\n//     <ForecastStyle.Top>\n//       <span>64</span>\n//     </ForecastStyle.Top>\n//     <ForecastStyle.Bottom>\n//       <span>Overcast Clouds</span>\n//       <span>45% Humidity</span>\n//     </ForecastStyle.Bottom>\n//   </ForecastStyle>\n// );\n\nexport default Forecast;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SideForecastStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideForecastStyle from './styles.scss';\n\n// Components\nimport Forecast from '../../../Forecast';\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideForecast = ({\n  BgColor,\n  BgImage,\n  Location,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideForecastStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    <Link to={Destination}>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideForecastStyle.Header>{Location}</SideForecastStyle.Header>\n      <SideForecastStyle.Body>\n        <Forecast Location={Location} />\n      </SideForecastStyle.Body>\n    </Link>\n  </SideForecastStyle>\n);\n\nexport default SideForecast;\n","// Widgets/Container.js\n// This is the holder / wrapper around Widget Content.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport WidgetContainerStyle from './styles.scss';\n\n// Components\nimport ArticleWidget from '../Library/Article';\nimport CrossWidget from '../Library/Cross';\nimport DefaultWidget from '../Library/Default';\nimport LogoWidget from '../Library/Logo';\nimport MenuWidget from '../Library/MenuWidget';\nimport SideHeaderWidget from '../Library/SideHeader';\nimport SideForecast from '../Library/SideForecast';\nimport SideWidget from '../Library/SideWidget';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Widget Slider:\n// For WidgetContainers with multiple widgets\n// inside of them.\nclass WidgetSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Slick Settings\n    const settings = {\n      dots: this.props.Dots ? this.props.Dots : true,\n      speed: 1500,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: 1,\n      autoplay: true,\n      infinite: true,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={g => (this.slider = g)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// WidgetType\nclass WidgetType extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  // Render\n  render() {\n    const WidgetContent = this.props.WidgetContent;\n\n    // If the Widget Content is > 1, then make a Slider.\n    if (WidgetContent.length > 1) {\n      return (\n        // In this case we wrap the entire element in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // SideForecast\n        // SideWidget\n        // Default\n\n        <WidgetContainerStyle.Inner className=\"widget-inner\">\n          <WidgetSlider Dots={this.props.Dots}>\n            {WidgetContent.map((Content, index) => {\n              switch (Content.Style) {\n                case 'Article':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      CallToAction={Content.Meta.Generic.CallToAction}\n                      key={index}\n                    />\n                  );\n                case 'SideWidget':\n                  return (\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      BgQuery={Content.Meta.SideWidget.BgQuery}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                      BgImageFile={Content.Meta.SideWidget.BgImageFile}\n                      key={index}\n                    />\n                  );\n                case 'MenuWidget':\n                  return (\n                    <MenuWidget\n                      BgColor={Content.Meta.MenuWidget.BgColor}\n                      BgImage={Content.Meta.MenuWidget.BgImage}\n                      BgQuery={Content.Meta.MenuWidget.BgQuery}\n                      TextColor={Content.Meta.MenuWidget.TextColor}\n                      TintColor={Content.Meta.MenuWidget.TintColor}\n                      TintOpacity={Content.Meta.MenuWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.MenuWidget.Subhead}\n                      Headline={Content.Meta.MenuWidget.Headline}\n                      IconName={Content.Meta.MenuWidget.IconName}\n                      IconColor={Content.Meta.MenuWidget.IconColor}\n                      CallToAction={Content.Meta.MenuWidget.CallToAction}\n                      key={index}\n                    />\n                  );\n                case 'SideForecast':\n                  return (\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  );\n                case 'Generic':\n                  return (\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImageFile={Content.Meta.Generic.BgImageFile}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      CallToAction={Content.Meta.Generic.CallToAction}\n                      HideCarat={Content.Meta.Generic.HideCarat}\n                      key={index}\n                    />\n                  );\n                case 'LogoWidget':\n                  return (\n                    <LogoWidget\n                      BgColor={Content.Meta.LogoWidget.BgColor}\n                      BgImageFile={Content.Meta.LogoWidget.BgImageFile}\n                      BgQuery={Content.Meta.LogoWidget.BgQuery}\n                      TextColor={Content.Meta.LogoWidget.TextColor}\n                      TintColor={Content.Meta.LogoWidget.TintColor}\n                      TintOpacity={Content.Meta.LogoWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.LogoWidget.Subhead}\n                      Headline={Content.Meta.LogoWidget.Headline}\n                      IconName={Content.Meta.LogoWidget.IconName}\n                      IconColor={Content.Meta.LogoWidget.IconColor}\n                      CallToAction={Content.Meta.LogoWidget.CallToAction}\n                      key={index}\n                    />\n                  );\n              }\n            })}\n          </WidgetSlider>\n        </WidgetContainerStyle.Inner>\n      );\n    }\n\n    // If there is only 1 Widget.\n    else {\n      return (\n        // In this case we wrap the INDIVIDUAL elements in the\n        // WidgetContainerStyle.Inner tag for the shadow and border-radii\n        // if needed, allowing for more customized Widget Components.\n        //\n        // We're only accepting the following Widgets for this section:\n        // Article\n        // Cross\n        // SideHeader\n        // SideForecast\n        // SideWidget\n        // Default\n        <>\n          {WidgetContent.map((Content, index) => {\n            switch (Content.Style) {\n              case 'Cross':\n                return <CrossWidget key={index} />;\n              case 'Article':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImage={Content.Meta.Generic.BgImage}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'Generic':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <DefaultWidget\n                      BgColor={Content.Meta.Generic.BgColor}\n                      BgImageFile={Content.Meta.Generic.BgImageFile}\n                      BgQuery={Content.Meta.Generic.BgQuery}\n                      TextColor={Content.Meta.Generic.TextColor}\n                      TintColor={Content.Meta.Generic.TintColor}\n                      TintOpacity={Content.Meta.Generic.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.Generic.Subhead}\n                      Headline={Content.Meta.Generic.Headline}\n                      IconName={Content.Meta.Generic.IconName}\n                      IconColor={Content.Meta.Generic.IconColor}\n                      CallToAction={Content.Meta.Generic.CallToAction}\n                      HideCarat={Content.Meta.Generic.HideCarat}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'LogoWidget':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <LogoWidget\n                      BgColor={Content.Meta.LogoWidget.BgColor}\n                      BgImageFile={Content.Meta.LogoWidget.BgImageFile}\n                      BgQuery={Content.Meta.LogoWidget.BgQuery}\n                      TextColor={Content.Meta.LogoWidget.TextColor}\n                      TintColor={Content.Meta.LogoWidget.TintColor}\n                      TintOpacity={Content.Meta.LogoWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.LogoWidget.Subhead}\n                      Headline={Content.Meta.LogoWidget.Headline}\n                      IconName={Content.Meta.LogoWidget.IconName}\n                      IconColor={Content.Meta.LogoWidget.IconColor}\n                      CallToAction={Content.Meta.LogoWidget.CallToAction}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'MenuWidget':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <MenuWidget\n                      BgColor={Content.Meta.MenuWidget.BgColor}\n                      BgImage={Content.Meta.MenuWidget.BgImage}\n                      BgQuery={Content.Meta.MenuWidget.BgQuery}\n                      TextColor={Content.Meta.MenuWidget.TextColor}\n                      TintColor={Content.Meta.MenuWidget.TintColor}\n                      TintOpacity={Content.Meta.MenuWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.MenuWidget.Subhead}\n                      Headline={Content.Meta.MenuWidget.Headline}\n                      IconName={Content.Meta.MenuWidget.IconName}\n                      IconColor={Content.Meta.MenuWidget.IconColor}\n                      CallToAction={Content.Meta.MenuWidget.CallToAction}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideWidget':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <SideWidget\n                      BgColor={Content.Meta.SideWidget.BgColor}\n                      BgImage={Content.Meta.SideWidget.BgImage}\n                      BgQuery={Content.Meta.SideWidget.BgQuery}\n                      TextColor={Content.Meta.SideWidget.TextColor}\n                      TintColor={Content.Meta.SideWidget.TintColor}\n                      TintOpacity={Content.Meta.SideWidget.TintOpacity}\n                      Destination={Content.Destination}\n                      Subhead={Content.Meta.SideWidget.Subhead}\n                      Header={Content.Meta.SideWidget.Header}\n                      IconName={Content.Meta.SideWidget.IconName}\n                      BgImageFile={Content.Meta.SideWidget.BgImageFile}\n                      IconColor={Content.Meta.SideWidget.IconColor}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideForecast':\n                return (\n                  <WidgetContainerStyle.Inner\n                    className=\"widget-inner\"\n                    key={index}\n                  >\n                    <SideForecast\n                      BgColor={Content.Meta.SideForecast.BgColor}\n                      BgImage={Content.Meta.SideForecast.BgImage}\n                      TextColor={Content.Meta.SideForecast.TextColor}\n                      TintColor={Content.Meta.SideForecast.TintColor}\n                      TintOpacity={Content.Meta.SideForecast.TintOpacity}\n                      Destination={Content.Destination}\n                      Location={Content.Meta.SideForecast.Location}\n                      key={index}\n                    />\n                  </WidgetContainerStyle.Inner>\n                );\n              case 'SideHeader':\n                return (\n                  <SideHeaderWidget\n                    Header={Content.Meta.SideHeader.Header}\n                    IntroCopy={Content.Meta.SideHeader.IntroCopy}\n                    BodyCopy={Content.Meta.SideHeader.BodyCopy}\n                    TextColor={Content.Meta.SideHeader.TextColor}\n                    key={index}\n                  />\n                );\n            }\n          })}\n        </>\n      );\n    }\n  }\n}\n\nconst WidgetContainer = ({ WidgetContent, Flex, Dots, Width }) => (\n  <WidgetContainerStyle className=\"widget\" Flex={Flex} Width={Width}>\n    <WidgetType Dots={Dots} WidgetContent={WidgetContent} />\n  </WidgetContainerStyle>\n);\n\nexport default WidgetContainer;\n","// Convert #HEXCODES to RGBA\n// hexToRGB('#FF0000', 0.5);\n\nconst hexToRGB = (hex, alpha) => {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  } else {\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n  }\n};\n\nexport default hexToRGB;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  src,\n  AltText,\n  className,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={src}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    AltText={AltText}\n    className={className ? className : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst WidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  min-width: 100px\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  .widget-inner-wrapper {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    position: relative;\n    z-index: 10;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  .btn {\n    position: absolute;\n    flex: unset;\n    width: unset;\n    display: block;\n    flex-direction: unset;\n    left: ${Root.ViewWidthPadding};\n    bottom: ${Root.ViewWidthPadding};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%) translateZ(0);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Widget Icon */\n\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%) translateZ(0);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3) translateZ(0);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Headline = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  font-weight: bold;\n  padding-right: 20px;\n`;\n\nWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default WidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport WidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetInnerWrapper = ({ children, Destination }) => {\n  if (Destination) {\n    return (\n      <Link className=\"widget-inner-wrapper\" to={Destination}>\n        {children}\n      </Link>\n    );\n  } else {\n    return <span className=\"widget-inner-wrapper\">{children}</span>;\n  }\n};\n\nconst DefaultWidget = ({\n  BgColor,\n  BgImage,\n  BgQuery,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  Subhead,\n  Headline,\n  IconColor,\n  IconName,\n  BgImageFile,\n  BgImageAltText,\n  CallToAction,\n  HideCarat,\n}) => (\n  <WidgetStyle\n    BgColor={BgColor}\n    BgImage={BgImage}\n    TextColor={BgImageFile ? Theme.Color.White : TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    HideCarat={HideCarat}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n\n    <WidgetInnerWrapper Destination={Destination}>\n      <WidgetStyle.Subhead className=\"widget-subheadline\">\n        {Subhead}\n      </WidgetStyle.Subhead>\n      <WidgetStyle.Headline className=\"widget-headline\">\n        {Headline}\n      </WidgetStyle.Headline>\n      {HideCarat ? null : (\n        <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      )}\n      <WidgetStyle.Icon className={'fas fa-' + IconName} Color={IconColor} />\n      {CallToAction ? <span class=\"cta-btn\">{CallToAction}</span> : null}\n    </WidgetInnerWrapper>\n    {BgImageFile ? <ImgMatch src={BgImageFile} AltText={Headline} /> : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={Headline} /> : null}\n  </WidgetStyle>\n);\n\nexport default DefaultWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const defaultWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = data.map((widget, index) => {\n      return {\n        // Begin WidgetContent\n        Flex: widget.widget_height_fraction ? widget.widget_height_fraction : 1,\n        Width: widget.widget_width_multiple ? widget.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: widget.widget_destination,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: widget.widget_bg_color,\n                BgImage: '',\n                BgQuery: widget.widget_background_image.localFile\n                  ? widget.widget_background_image.localFile.childImageSharp\n                      .fluid\n                  : false,\n                Subhead: widget.widget_subheadline,\n                Headline: widget.widget_headline.text,\n                TextColor: widget.widget_text_color,\n                IconColor: widget.widget_text_color,\n                IconName: widget.widget_icon_class,\n                TintColor: widget.tint_color ? widget.tint_color : '',\n                TintOpacity: widget.tint_opacity ? widget.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      };\n    });\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideHeaderWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: none;\n  position: relative;\n  overflow: hidden;\n  max-width: 350px;\n  cursor: crosshair;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSideHeaderWidgetStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Root.ViewWidthPadding};\n  flex: 1;\n  width: 100%;\n  position: relative;\n`;\n\nSideHeaderWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  opacity: 0.3;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideHeaderWidgetStyle.Body = styled.div``;\n\nSideHeaderWidgetStyle.IntroCopy = styled.p`\n  font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n  padding-bottom: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: light;\n`;\n\nSideHeaderWidgetStyle.BodyCopy = styled.p`\n  font-size: ${Root.ViewWidthFontSize};\n  padding-top: ${Root.ViewWidthPadding};\n  line-height: 1.2;\n  font-weight: regular;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: calc(${Root.ViewWidthFontSize} * 1.5);\n    height: 1px;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n`;\n\nexport default SideHeaderWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideHeaderWidgetStyle.js:\n\n// Core\nimport React from 'react';\n\n// Styles\nimport SideHeaderWidgetStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideHeaderWidget = ({ Header, IntroCopy, BodyCopy, TextColor }) => (\n  <SideHeaderWidgetStyle TextColor={TextColor} className=\"widget-content\">\n    <SideHeaderWidgetStyle.Inner>\n      <SideHeaderWidgetStyle.Header>{Header}</SideHeaderWidgetStyle.Header>\n      <SideHeaderWidgetStyle.Body>\n        <SideHeaderWidgetStyle.IntroCopy>\n          {IntroCopy}\n        </SideHeaderWidgetStyle.IntroCopy>\n        <SideHeaderWidgetStyle.BodyCopy>\n          {BodyCopy}\n        </SideHeaderWidgetStyle.BodyCopy>\n      </SideHeaderWidgetStyle.Body>\n    </SideHeaderWidgetStyle.Inner>\n  </SideHeaderWidgetStyle>\n);\n\nexport default SideHeaderWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Title Widget Map inside the Columns Map.\nexport const sideHeaderWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = [\n      {\n        // Begin WidgetContent\n        Flex: 1,\n        Width: 6,\n        WidgetContent: [\n          {\n            Destination: null,\n            Style: 'SideHeader',\n            Meta: {\n              SideHeader: {\n                Header: data.widget_headline.text,\n                IntroCopy: data.widget_intro_copy,\n                BodyCopy: data.widget_body_copy,\n                TextColor: Theme.Color.Nightsky,\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      },\n    ];\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n/* Widget Content */\nconst SideWidgetStyle = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  position: relative;\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* For when using ImgMatch.js as background image: */\n  .img {\n    &.gatsby-image-wrapper {\n      position: absolute !important;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      z-index: 2;\n      height: 100%;\n    }\n  }\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        .tint {\n          position: absolute;\n          margin: 0;\n          padding: 0;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          z-index: 5;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: opacity ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    position: relative;\n    flex: 1;\n    z-index: 5;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    padding: ${Root.ViewWidthPadding};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Root.ViewWidthPadding};\n    top: ${Root.ViewWidthPadding};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  /* Hover Styles */\n  @media (min-width: ${Theme.Base.Media.Width.Md}) {\n    &:hover {\n      background-color: ${Theme.Color.Black};\n      color: ${Theme.Color.White};\n      box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n      a {\n        text-decoration: none;\n        color: ${Theme.Color.White};\n      }\n\n      /* The Carat Icon */\n      svg {\n        transform: translateX(50%);\n        fill: ${Theme.Color.White};\n      }\n\n      /* The Widget Icon */\n      .fas {\n        color: ${Theme.Color.White};\n        transform: scale(1.3);\n      }\n\n      /* Tint */\n      ${props => {\n        if (props.TintColor || props.TintOpacity)\n          return `\n        .tint {\n          opacity: 1\n        }\n    `;\n      }};\n    }\n  }\n`;\n\nSideWidgetStyle.Header = styled.h1`\n  position: absolute;\n  top: ${Root.ViewWidthPadding};\n  left: ${Root.ViewWidthPadding};\n  transform: rotate(90deg) translateY(-100%);\n  display: flex;\n  font-weight: light;\n  font-size: calc(${Root.ViewHeightFontSize} * 4);\n  justify-content: flex-end;\n  transform-origin: top left;\n  white-space: nowrap;\n  word-break: none;\n  pointer-events: none;\n  width: auto;\n  line-height: 0.8;\n`;\n\nSideWidgetStyle.Body = styled.div``;\n\nSideWidgetStyle.Subhead = styled.div`\n  font-size: ${Root.ViewWidthFontSize};\n  line-height: 1.2;\n  padding-right: calc(${Root.Size} / 1.5);\n`;\n\nSideWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Root.ViewWidthPadding};\n  bottom: ${Root.ViewWidthPadding};\n  font-size: ${Root.IconSize};\n  transform: scale(1.000000001);\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SideWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SideWidgetStyle.js:\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SideWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgQuery from 'components/core/ImgQuery';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SideWidget = ({\n  BgColor,\n  BgQuery,\n  BgImageFile,\n  Header,\n  Subhead,\n  TextColor,\n  TintColor,\n  TintOpacity,\n  Destination,\n  IconName,\n  IconColor,\n}) => (\n  <SideWidgetStyle\n    BgColor={BgColor}\n    TextColor={TextColor}\n    TintColor={TintColor}\n    TintOpacity={TintOpacity}\n    className=\"widget-content\"\n  >\n    {TintColor || TintOpacity ? <figure className=\"tint\" /> : null}\n    <Link to={Destination}>\n      <SideWidgetStyle.Header>{Header}</SideWidgetStyle.Header>\n      <Icon className=\"svg-carat\" Name=\"carat\" Color={IconColor} />\n      <SideWidgetStyle.Body>\n        <SideWidgetStyle.Subhead>{Subhead}</SideWidgetStyle.Subhead>\n      </SideWidgetStyle.Body>\n      <SideWidgetStyle.Icon\n        className={'fas fa-' + IconName}\n        Color={IconColor}\n      />\n    </Link>\n    {BgImageFile ? <ImgMatch src={BgImageFile} AltText={Header} /> : null}\n    {BgQuery ? <ImgQuery src={BgQuery} AltText={Header} /> : null}\n  </SideWidgetStyle>\n);\n\nexport default SideWidget;\n\n// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Function to create the Default Widget Map inside the Columns Map.\nexport const sideWidgetDataTransformer = data => {\n  if (data) {\n    let widgetMap = [\n      {\n        // Begin WidgetContent\n        Flex: data.widget_height_fraction ? data.widget_height_fraction : 1,\n        Width: data.widget_width_multiple ? data.widget_width_multiple : 6,\n        WidgetContent: [\n          {\n            Destination: data.widget_destination,\n            Style: 'SideWidget',\n            Meta: {\n              SideWidget: {\n                BgColor: data.widget_bg_color,\n                BgImage: '',\n                BgQuery: data.widget_background_image.localFile\n                  ? data.widget_background_image.localFile.childImageSharp.fluid\n                  : false,\n                Subhead: data.widget_subheadline,\n                Header: data.widget_headline.text,\n                TextColor: data.widget_text_color,\n                IconColor: data.widget_text_color,\n                IconName: data.widget_icon_class,\n                TintColor: data.tint_color ? data.tint_color : '',\n                TintOpacity: data.tint_opacity ? data.tint_opacity : '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n        // End WidgetContent\n      },\n    ];\n\n    return widgetMap;\n  } else {\n    let widgetMap = [];\n    return widgetMap;\n  }\n};\n"],"sourceRoot":""}