{"version":3,"sources":["webpack:///./src/components/library/Castle/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleHero/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleHero/index.js","webpack:///./src/components/library/Castle/components/CastleFullSplitSection/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleFullSplitSection/index.js","webpack:///./src/components/library/Castle/components/CastleSimpleSection/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleSimpleSection/index.js","webpack:///./src/components/library/Castle/components/CastleSplitSection/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleSplitSection/index.js","webpack:///./src/components/library/Castle/components/CastleSplitImageHero/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleSplitImageHero/index.js","webpack:///./src/components/library/Castle/components/CastlePromotionalStrip/styles.scss.js","webpack:///./src/components/library/Castle/components/CastlePromotionalStrip/index.js","webpack:///./src/components/library/Castle/components/CastleStickyGallery/styles.scss.js","webpack:///./src/components/library/Castle/components/CastleStickyGallery/index.js","webpack:///./src/components/library/Castle/index.js","webpack:///./src/templates/Special/layout.js","webpack:///./src/templates/Special/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/HeroStrip/styles.scss.js","webpack:///./src/components/library/HeroStrip/index.js","webpack:///./src/components/library/Section/StickyScrollSection/styles.scss.js","webpack:///./src/components/library/Section/StickyScrollSection/index.js"],"names":["CastleStyle","styled","div","_templateObject","CastleHeroStyle","styles_scss_templateObject","Root","Size","CastleHero","_ref","data","location","primaryData","primary","repeatableData","items","react_default","a","createElement","CastleHero_styles_scss","SimpleHero","Padding","padding","replace","split","Background","background_color","BgQuery","background_image","localFile","childImageSharp","fluid","TextColor","text_color","Tint","tint_opacity","Block","AlignItems","Width","maxWidth","breadcrumb_url","Breadcrumb","Crumbs","Destination","Label","breadcrumb_label","itemProp","headline","text","body_text","className","cta_destination","map","item","index","Fragment","Btn","cta_label","BgColor","cta_bg_color","cta_text_color","IconPosition","cta_icon","IconClass","IconFas","social_sharing","toLowerCase","SocialStrip","Margin","Location","CastleFullSplitSection_styles_scss_templateObject","CastleSplitSection","CastleFullSplitSection_styles_scss","SplitSection","Flex","Theme","Color","White","Nightsky","Primary","Style","BgMatch","BgAlt","CastleSimpleSectionStyle","CastleSimpleSection_styles_scss_templateObject","CastleSimpleSection","CastleSimpleSection_styles_scss","SimpleSection","Black","BgTint","CastleSplitSection_styles_scss_templateObject","CastleSplitSection_styles_scss","Gutter","direction","console","log","image","alt","CastleSplitImageHero_styles_scss_templateObject","CastleSplitImageHero_styles_scss","imgRight","imgBottom","imgWidth","Tahoe","ImgMatch","src","CastlePromotionalStrip_styles_scss_templateObject","CastlePromotionalStrip_styles_scss","HeroStrip","NightSky","Items","Caption","CastleStickyGallery_styles_scss_templateObject","length","CastleStickyGallery_styles_scss","StickyScrollSection","Content","Subheadline","subheadline","Headline","Body","GalleryQueries","Query","Fluid","Alt","galleryImgQueries","Button","CastleBuilder","props","_React$Component","call","this","render","bricks","Bricks","brick","slice_type","components_CastleHero","key","CastleFullSplitSection","components_CastleSplitSection","CastleSplitImageHero","CastlePromotionalStrip","CastleStickyGallery","components_CastleSimpleSection","React","Component","Castle","styles_scss","Castle_CastleBuilder","DefaultTemplate","node","cover_image","color_background","title","color_primary","description","href","WidgetSection","Widgets","WidgetContent","Meta","Generic","BgImage","Subhead","IconColor","IconName","TintColor","TintOpacity","IconSize","Mint","SpecialArticleTemplate","_ref2","elements","Layout","PrimaryColor","SecondaryColor","color_secondary","TertiaryColor","color_tertiary","SubLevelPage","ItemProp","library_Castle","layout_DefaultTemplate","__webpack_require__","d","__webpack_exports__","Special_query","SpecialsArticlePage","allPrismicSpecial","edges","layout","query","BlockStyle","flex","css","_templateObject2","JustifyContent","Base","Grid","SiteWidth","children","AltText","ImgQuery","WrapperLock","createGlobalStyle","Media","Md","WrapperRelease","_templateObject3","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","objectFit","objectPosition","fadeIn","SimpleSectionStyle","Inner","SectionInnerStyle","Right","Left","FluidHeight","SectionContentStyle","SimpleSection_styles_scss","HeroInnerStyle","imgLeft","imgTop","HeroContentStyle","FullWidth","Slider","WidgetSection_styles_scss","Widget","Container","SidebarWidgetStyle","Sm","FadeIn","Radius","Transition","Duration","CssEase","_templateObject4","Icon","i","_templateObject5","SidebarWidget","gatsby_browser_entry","to","SidebarStyle","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","HeroInner","HeroContent","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SimpleHeroStyle","TintBorder","Hero","BreadCrumb","Link","Bread","crumb","Icons","Name","SocialStripStyle","span","target","rel","SplitSectionStyle","Site","SplitSection_styles_scss","HeroStripStyle","ViewWidthFontSize","HeroStrip_styles_scss","Item","StickyScrollSectionStyle","Slate","ReleaseOverflow","StickyScrollSection_templateObject","Gallery","StickyScrollSection_styles_scss","Img","Src"],"mappings":"sVAeA,IAIeA,EAJKC,IAAOC,IAAVC,oKCAjB,IAQeC,EARSH,IAAOC,IAAVG,IAIIC,IAAKC,MCyFfC,EA9EI,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACpBC,EAAcF,EAAKG,QACnBC,EAAiBJ,EAAKK,MAE5B,OACEC,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,QACET,EAAYU,QACRV,EAAYU,QAAQC,QAAQ,MAAO,IAAIC,MAAM,KAC7C,KAENC,WAAYb,EAAYc,iBACxBC,UACEf,EAAYgB,iBAAiBC,WACzBjB,EAAYgB,iBAAiBC,UAAUC,gBAAgBC,MAG7DC,UAAWpB,EAAYqB,WACvBC,KAAMtB,EAAYuB,cAElBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,WAAW,aAAaC,MAAO,EAAGC,SAAU,KAEhD3B,EAAY4B,eACXxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,OAAQ,CACN,CACEC,YAAa/B,EAAY4B,eACzBI,MAAOhC,EAAYiC,mBAGvBb,UAAWpB,EAAYqB,aAEvB,KAGJjB,EAAAC,EAAAC,cAAA,MAAI4B,SAAS,QACVlC,EAAYmC,SAASC,KAClBpC,EAAYmC,SAASC,KACrB,uBAELpC,EAAYqC,UACXjC,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,QAAQtC,EAAYqC,UAAjC,KACE,KAGkC,MAArCnC,EAAe,GAAGqC,gBACfrC,EAAesC,IAAI,SAACC,EAAMC,GACxB,OACEtC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEZ,MAAOS,EAAKI,UACZC,QAASL,EAAKM,aACd3B,UAAWqB,EAAKO,eAChBjB,YAAaU,EAAKF,gBAClBU,aAAcR,EAAKS,SAAW,OAAS,KACvCC,UAAWV,EAAKS,SAAWT,EAAKS,SAAW,KAC3CE,SAAO,OAKf,KAGyC,OAA5CpD,EAAYqD,eAAeC,cAC1BlD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CACEC,OAAQ,CAAC,IAAM,EAAG,EAAG,GACrBC,SAAU1D,EACVqB,UAAWpB,EAAYqB,aAEvB,yJCtFd,IAQe7B,EARSH,IAAOC,IAAVoE,IAIIhE,IAAKC,MC+CfgE,EAtCY,SAAA9D,GAAwB,IAArBC,EAAqBD,EAArBC,KAAqBD,EAAfE,SACdD,EAAKG,QACFH,EAAKK,MAE5B,OACEC,EAAAC,EAAAC,cAACsD,EAAD,KACExD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAcC,KAAK,eACjB1D,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEf,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBiB,MAAO,GACPoB,QAASiB,IAAMC,MAAMC,MACrB7C,UAAW2C,IAAMC,MAAME,UAEvB9D,EAAAC,EAAAC,cAAA,yEACAF,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,QAAb,sGAIAlC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEZ,MAAM,gBACND,YAAY,QACZe,QAASiB,IAAMC,MAAMG,QACrB/C,UAAW2C,IAAMC,MAAMC,SAI3B7D,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACE4C,MAAM,WACNtB,QAASiB,IAAMC,MAAMC,MACrBI,QAAQ,uBACRC,MAAM,sBACN5C,MAAO,qGC5CjB,IAIe6C,EAJkBlF,IAAOC,IAAVkF,KC4CfC,EAhCa,SAAA5E,GAAwB,IAArBC,EAAqBD,EAArBC,KAAqBD,EAAfE,SACfD,EAAKG,QACFH,EAAKK,MAE5B,OACEC,EAAAC,EAAAC,cAACoE,EAAD,KACEtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACE7B,QAASiB,IAAMC,MAAMY,MACrBP,QAAQ,uBACRQ,OAAQ,GACRP,MAAM,sBACNlD,UAAW2C,IAAMC,MAAMC,MACvBG,MAAM,YAENhE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAO4C,MAAM,WAAW3D,QAAS,CAAC,EAAG,EAAG,EAAG,GAAIkB,SAAU,IACvDvB,EAAAC,EAAAC,cAAA,yEACAF,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,QAAb,sGAIAlC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEZ,MAAM,gBACND,YAAY,QACZe,QAASiB,IAAMC,MAAMG,QACrB/C,UAAW2C,IAAMC,MAAMC,mJCpCnC,IAQeM,EARkBlF,IAAOC,IAAVwF,IAILpF,IAAKC,MC4DfgE,EApDY,SAAA9D,GAAwB,IAArBC,EAAqBD,EAArBC,KACtBE,GAD2CH,EAAfE,SACdD,EAAKG,SACnBC,EAAiBJ,EAAKK,MAE5B,OACEC,EAAAC,EAAAC,cAACyE,EAAD,KACE3E,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACE7B,QAAS9C,EAAYc,iBACrBM,UAAWpB,EAAYqB,WACvB2D,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBlB,KAA+B,UAAzB9D,EAAYiF,UAAwB,MAAQ,eAEnDC,QAAQC,IAAInF,EAAYiF,WACvB7E,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACE4C,MAAM,WACNtB,QAAS9C,EAAYc,iBACrBC,QAASf,EAAYoF,MAAMnE,UAAUC,gBAAgBC,MACrDmD,MAAOtE,EAAYoF,MAAMC,IACzB3D,MAAO,KAGTtB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEf,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBiB,MAAO,GACPN,UAAWpB,EAAYqB,YAEvBjB,EAAAC,EAAAC,cAAA,UAAKN,EAAYmC,SAASC,MAC1BhC,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,QAAQtC,EAAYqC,WAEK,MAArCnC,EAAe,GAAGqC,gBACfrC,EAAesC,IAAI,SAACC,EAAMC,GACxB,OACEtC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEZ,MAAOS,EAAKI,UACZC,QAASL,EAAKM,aACd3B,UAAWqB,EAAKO,eAChBjB,YAAaU,EAAKF,gBAClBU,aAAcR,EAAKS,SAAW,OAAS,KACvCC,UAAWV,EAAKS,SAAWT,EAAKS,SAAW,KAC3CE,SAAO,OAKf,sGCzDd,IAIemB,EAJkBlF,IAAOC,IAAVgG,KCuDf3B,EAzCY,SAAA9D,GAAwB,IAArBC,EAAqBD,EAArBC,KAAqBD,EAAfE,SACdD,EAAKG,QACFH,EAAKK,MAE5B,OACEC,EAAAC,EAAAC,cAACiF,EAAD,KACEnF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEgF,SAAS,IACTC,UAAU,IACVC,SAAS,MACT/F,KAAK,IACLkB,WAAYkD,IAAMC,MAAM2B,MACxBvE,UAAW2C,IAAMC,MAAMC,OAEvB7D,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,WAAW,aAAaC,MAAO,IACpCtB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,OAAQ,CACN,CACEC,YAAa,YACbC,MAAO,aAGXZ,UAAW2C,IAAMC,MAAMC,QAEzB7D,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,QAAb,wCACAlC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEZ,MAAM,gBACND,YAAY,QACZe,QAASiB,IAAMC,MAAMG,QACrB/C,UAAW2C,IAAMC,MAAMC,SAG3B7D,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOc,UAAU,YACflC,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAUC,IAAI,iBAAiBR,IAAI,wHChD7C,IAIed,EAJkBlF,IAAOC,IAAVwG,KCiDfnC,EArCY,SAAA9D,GAAwB,IAArBC,EAAqBD,EAArBC,KAAqBD,EAAfE,SACdD,EAAKG,QACFH,EAAKK,MAE5B,OACEC,EAAAC,EAAAC,cAACyF,EAAD,KACE3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CACElD,QAASiB,IAAMC,MAAMC,MACrB7C,UAAW2C,IAAMC,MAAMiC,SACvBC,MAAO,CACL,CACEC,QAAS,UACTnE,MAAO,UAET,CACEmE,QAAS,kBACTnE,MAAO,WAET,CACEmE,QAAS,WACTnE,MAAO,WAET,CACEmE,QAAS,WACTnE,MAAO,WAET,CACEmE,QAAS,eACTnE,MAAO,WACPD,YAAa,+GCzCzB,IAIewC,EAJkBlF,IAAOC,IAAV8G,KCyDf3B,EA7Ca,SAAA5E,GAAwB,IAArBC,EAAqBD,EAArBC,KACvBE,GAD4CH,EAAfE,SACfD,EAAKG,SACnBC,EAAiBJ,EAAKK,MAAMkG,OAAS,EAAIvG,EAAKK,MAAQ,EAmB5D,OACEC,EAAAC,EAAAC,cAACgG,EAAD,KACElG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACEzD,QAAS9C,EAAYc,iBACrBM,UAAWpB,EAAYqB,WACvBmF,QAAS,CACPC,YAAazG,EAAY0G,YACzBC,SAAU3G,EAAYmC,SAASC,KAC/BwE,KAAM5G,EAAYqC,WAEpByB,KAA+B,UAAzB9D,EAAYiF,UAAwB,MAAQ,cAClD4B,eA5BoB,SAAA/G,GACxB,OAAY,GAARA,EACYA,EAAK0C,IAAI,SAACsE,EAAOpE,GAC7B,MAAO,CACLqE,QAAOD,EAAMjB,IAAI5E,UAAUC,gBAAgBC,OACvC2F,EAAMjB,IAAI5E,UAAUC,gBAAgBC,MAExC6F,IAAKF,EAAMjB,IAAIR,OAMZ,EAeW4B,CAAkB/G,GAClCgH,OAAQ,CACNlF,MAAOhC,EAAY6C,UACnBC,QAAS9C,EAAY+C,aACrB3B,UAAWpB,EAAYgD,eACvBjB,YAAa/B,EAAYuC,gBACzBY,UAAWnD,EAAYkD,cCvC3BiE,cACJ,SAAAA,EAAYC,GAAO,OAEjBC,EAAAC,KAAAC,KAAMH,IAFWG,iCAMnBC,OAAA,WACE,IAAMC,EAASF,KAAKH,MAAMM,OACpB3H,EAAWwH,KAAKH,MAAM3D,SAE5B,OACErD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KACG8E,EAAOjF,IAAI,SAACmF,EAAOjF,GAClB,OAAQiF,EAAMC,YACZ,IAAK,OACH,OACExH,EAAAC,EAAAC,cAACuH,EAAD,CAAY/H,KAAM6H,EAAO5H,SAAUA,EAAU+H,IAAKpF,IAEtD,IAAK,qBACH,OACEtC,EAAAC,EAAAC,cAACyH,EAAD,CACEjI,KAAM6H,EACN5H,SAAUA,EACV+H,IAAKpF,IAGX,IAAK,gBACH,OACEtC,EAAAC,EAAAC,cAAC0H,EAAD,CACElI,KAAM6H,EACN5H,SAAUA,EACV+H,IAAKpF,IAGX,IAAK,mBACH,OACEtC,EAAAC,EAAAC,cAAC2H,EAAD,CACEnI,KAAM6H,EACN5H,SAAUA,EACV+H,IAAKpF,IAGX,IAAK,oBACH,OACEtC,EAAAC,EAAAC,cAAC4H,EAAD,CACEpI,KAAM6H,EACN5H,SAAUA,EACV+H,IAAKpF,IAGX,IAAK,iBACH,OACEtC,EAAAC,EAAAC,cAAC6H,EAAD,CACErI,KAAM6H,EACN5H,SAAUA,EACV+H,IAAKpF,IAGX,IAAK,iBACH,OACEtC,EAAAC,EAAAC,cAAC8H,EAAD,CACEtI,KAAM6H,EACN5H,SAAUA,EACV+H,IAAKpF,YAhEK2F,IAAMC,WAgFnBC,EANA,SAAA1I,GAAA,IAAG6H,EAAH7H,EAAG6H,OAAQjE,EAAX5D,EAAW4D,SAAX,OACbrD,EAAAC,EAAAC,cAACkI,EAAD,KACEpI,EAAAC,EAAAC,cAACmI,EAAD,CAAef,OAAQA,EAAQjE,SAAUA,MCvEvCiF,EAAkB,SAAA7I,GAAA,IAAG8I,EAAH9I,EAAG8I,KAAM7I,EAATD,EAASC,KAAT,OACtBM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KACEvC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,QAAS,CAAC,EAAG,EAAG,EAAG,GACnBM,UACE4H,EAAKC,YAAY3H,WACb0H,EAAKC,YAAY3H,UAAUC,gBAAgBC,MAGjDN,WACE8H,EAAKE,iBAAmBF,EAAKE,iBAAmB9E,IAAMC,MAAMnD,WAE9DyD,MAAOqE,EAAKG,MAAM1G,KAAOuG,EAAKG,MAAM1G,KAAO,aAC3ChB,UAAWuH,EAAKI,cAAgBJ,EAAKI,cAAgBhF,IAAMC,MAAMC,MACjE3C,KAAK,OAELlB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,WAAW,aAAaC,MAAO,EAAGC,SAAU,KACjDvB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,OAAQ,CAAC,CAAEC,YAAa,YAAaC,MAAO,aAC5CZ,UAAWuH,EAAKI,gBAElB3I,EAAAC,EAAAC,cAAA,UAAKqI,EAAKG,MAAM1G,MACfuG,EAAKK,YAAc5I,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,QAAQqG,EAAKK,YAA1B,KAA8C,KAClE5I,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CACEC,OAAQ,CAAC,IAAM,EAAG,EAAG,GACrBC,SAAU3D,EAAKC,SAASkJ,KACxB7H,UACEuH,EAAKI,cAAgBJ,EAAKI,cAAgBhF,IAAMC,MAAMC,UAQ9D7D,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CACEpG,QAASiB,IAAMC,MAAMC,MACrBkF,QAAS,CACP,CAEErF,KAAM,EACNsF,cAAe,CACb,CACErH,YAAa,QACbqC,MAAO,UACPiF,KAAM,CACJC,QAAS,CACPxG,QAASiB,IAAMC,MAAME,SACrBqF,QAAS,GACTC,QAAS,GACT7C,SAAU,OACVvF,UAAW2C,IAAMC,MAAMC,MACvBwF,UAAW1F,IAAMC,MAAMG,QACvBuF,SAAU,OACVC,UAAW,GACXC,YAAa,GACbC,SAAU,QAOpB,CAEE/F,KAAM,EACNsF,cAAe,CACb,CACErH,YAAa,aACbqC,MAAO,UACPiF,KAAM,CACJC,QAAS,CACPxG,QAASiB,IAAMC,MAAM2B,MACrB4D,QAAS,GACTC,QAAS,GACT7C,SAAU,YACVvF,UAAW2C,IAAMC,MAAMC,MACvBwF,UAAW1F,IAAMC,MAAMC,MACvByF,SAAU,iBACVC,UAAW,GACXC,YAAa,GACbC,SAAU,QAOpB,CAEE/F,KAAM,EACNsF,cAAe,CACb,CACErH,YAAa,SACbqC,MAAO,UACPiF,KAAM,CACJC,QAAS,CACPxG,QAASiB,IAAMC,MAAM8F,KACrBP,QAAS,GACTC,QAAS,GACT7C,SAAU,MACVvF,UAAW2C,IAAMC,MAAME,SACvBuF,UAAW1F,IAAMC,MAAME,SACvBwF,SAAU,YACVC,UAAW,GACXC,YAAa,GACbC,SAAU,QAOpB,CAEE/F,KAAM,EACNsF,cAAe,CACb,CACErH,YAAa,YACbqC,MAAO,UACPiF,KAAM,CACJC,QAAS,CACPxG,QAASiB,IAAMC,MAAMG,QACrBoF,QAAS,GACTC,QAAS,GACT7C,SAAU,WACVvF,UAAW2C,IAAMC,MAAMC,MACvBwF,UAAW1F,IAAMC,MAAMC,MACvByF,SAAU,OACVC,UAAW,GACXC,YAAa,GACbC,SAAU,aA0EbE,EA3DgB,SAAAC,GAAA,IAAGlK,EAAHkK,EAAGlK,KAAM6I,EAATqB,EAASrB,KAAMsB,EAAfD,EAAeC,SAAf,OAC7B7J,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACEpH,QACE6F,EAAKE,iBAAmBF,EAAKE,iBAAmB9E,IAAMC,MAAMnD,WAE9DsJ,aACExB,EAAKI,cAAgBJ,EAAKI,cAAgBhF,IAAMC,MAAME,SAExDkG,eACEzB,EAAK0B,gBAAkB1B,EAAK0B,gBAAkBtG,IAAMC,MAAME,SAE5DoG,cACE3B,EAAK4B,eAAiB5B,EAAK4B,eAAiBxG,IAAMC,MAAMC,OAG1D7D,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CACE1H,QACE6F,EAAKE,iBAAmBF,EAAKE,iBAAmB9E,IAAMC,MAAMnD,WAE9DsJ,aACExB,EAAKI,cAAgBJ,EAAKI,cAAgBhF,IAAMC,MAAME,SAExDkG,eACEzB,EAAK0B,gBAAkB1B,EAAK0B,gBAAkBtG,IAAMC,MAAME,SAE5DoG,cACE3B,EAAK4B,eAAiB5B,EAAK4B,eAAiBxG,IAAMC,MAAMC,OAS1D7D,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CACE1H,QAAS6F,EAAKE,iBACdzH,UAAWuH,EAAKI,cAChB0B,SAAS,eAKRR,EACC7J,EAAAC,EAAAC,cAACoK,EAAD,CAAQhD,OAAQuC,EAAUxG,SAAU3D,EAAKC,SAASkJ,OAElD7I,EAAAC,EAAAC,cAACqK,EAAD,CAAiB7K,KAAMA,EAAM6I,KAAMA,IAGpCzD,QAAQC,IAAI8E,OClOrBW,EAAAC,EAAAC,EAAA,0BAAAC,IAsCeC,UAfa,SAAA5D,GAC1B,IAAMuB,EAAOvB,EAAMtH,KAAKmL,kBAAkBC,MAAM,GAAGvC,KAEnD,OACEvI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KACEvC,EAAAC,EAAAC,cAAC6K,EAAD,CACExC,KAAMA,EAAK7I,KACXA,KAAMsH,EACN6C,SAAUtB,EAAK7I,KAAKmK,WAErB/E,QAAQC,IAAIwD,EAAK7I,QAVxB,IAmBasL,EAAK,47CC7BX,IAuGQC,EAvGWhM,IAAOC,IAAVC,IAEH,SAAA6H,GAAK,OAAKA,EAAMtD,KAAOsD,EAAMkE,KAAO,UAGpD,SAAAlE,GAAK,OAAKA,EAAMtE,QAAU,eAAiBsE,EAAMtE,QAAU,IAAM,MACjE,SAAAsE,GAAK,OAAKA,EAAMhG,UAAY,UAAYgG,EAAMhG,UAAY,IAAM,MAIhE,SAAAgG,GAAK,OACLA,EAAM3F,WAAa,gBAAkB2F,EAAM3F,WAAa,IAAM,MAG9D,SAAA2F,GAAK,MACU,YAAfA,EAAMhD,OACNmH,cADAC,MAkCE,SAAApE,GAAK,OAAKA,EAAMqE,eAAiB,eAAiB,MAClD,SAAArE,GAAK,OACLA,EAAMqE,eACF,oBAAsBrE,EAAMqE,eAAiB,IAC7C,MAgBJ,SAAArE,GAAK,OAAKA,EAAMvC,OAAS,YAAcuC,EAAMvC,OAAS,IAAM,MAQ5D,SAAAuC,GAAK,OACLA,EAAM1F,MAAQ,UAA0B,IAAd0F,EAAM1F,MAAc,KAAO,YAC5C,SAAA0F,GAAK,OAChBA,EAAMzF,SACF,QAAUoC,IAAM2H,KAAKC,KAAKC,UAAY,MAAQxE,EAAMzF,SAAW,IAC/DoC,IAAM2H,KAAKC,KAAKC,WAGpB,SAAAxE,GAAK,OACLA,EAAM3G,QACF,qBAAuBf,IAAKC,KAAO,MAAQyH,EAAM3G,QAAQ,GAAK,IAC9D,MACJ,SAAA2G,GAAK,OACLA,EAAM3G,QACF,uBAAyBf,IAAKC,KAAO,MAAQyH,EAAM3G,QAAQ,GAAK,IAChE,MACJ,SAAA2G,GAAK,OACLA,EAAM3G,QACF,wBAA0Bf,IAAKC,KAAO,MAAQyH,EAAM3G,QAAQ,GAAK,IACjE,MACJ,SAAA2G,GAAK,OACLA,EAAM3G,QACF,sBAAwBf,IAAKC,KAAO,MAAQyH,EAAM3G,QAAQ,GAAK,IAC/D,OC3COe,IArDD,SAAA3B,GAAA,IACZgM,EADYhM,EACZgM,SACAvJ,EAFYzC,EAEZyC,UACA8B,EAHYvE,EAGZuE,MACAzC,EAJY9B,EAIZ8B,SACAD,EALY7B,EAKZ6B,MACAjB,EANYZ,EAMZY,QACAgB,EAPY5B,EAOZ4B,WACA4C,EARYxE,EAQZwE,QACAtD,EATYlB,EASZkB,QACAuD,EAVYzE,EAUZyE,MACAO,EAXYhF,EAWZgF,OACA/B,EAZYjD,EAYZiD,QACA1B,EAbYvB,EAaZuB,UACAqK,EAdY5L,EAcZ4L,eACA3H,EAfYjE,EAeZiE,KAfY,OAiBZ1D,EAAAC,EAAAC,cAACkI,EAAD,CACElG,UAAWA,EAAYA,EAAY,SAAW,QAC9CZ,MAAOA,EACPC,SAAUA,EACVyC,MAAOA,EACP3D,QAASA,EACTgB,WAAYA,IAA0B,EACtCgK,eAAgBA,IAAkC,EAClD5G,OAAQA,EACR/B,QAASA,EACT1B,UAAWA,EACX0C,KAAMA,GAGL+H,EAAWzL,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,iBAAiBuJ,GAAkB,KAG7DxH,EACCjE,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,kBACblC,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,aACblC,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAUC,IAAKxB,EAASyH,QAASxH,MAGnC,KAGHvD,EACCX,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,kBACblC,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,aACblC,EAAAC,EAAAC,cAACyL,EAAA,EAAD,CAAUlG,IAAK9E,EAAS+K,QAASxH,MAGnC,mpCClDD,IAAM0H,EAAcC,4BAAH1M,IAKCmM,IAAKQ,MAAMxK,MAAMyK,GAAK,KAOtBT,IAAKQ,MAAMxK,MAAMyK,GAAK,EAAI,KAG1BT,IAAKQ,MAAMxK,MAAMyK,GAAK,MAWlCC,EAAiBH,4BAAHT,IAMFE,IAAKQ,MAAMxK,MAAMyK,GAAK,EAAI,KAK1BT,IAAKQ,MAAMxK,MAAMyK,GAAK,MAQfF,4BAAHI,IAEJX,IAAKQ,MAAMxK,MAAMyK,GAAK,EAAI,KAG1BT,IAAKQ,MAAMxK,MAAMyK,GAAK,wCClE/C,IAAAG,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA4B,EAAAF,GAAAG,EAAA7B,EAAA,KAAA8B,EAAA9B,EAAA4B,EAAAC,GA4BeV,IAlBE,SAAAlM,KACfC,KADe,IAEf+F,EAFehG,EAEfgG,IACAiG,EAHejM,EAGfiM,QACAxJ,EAJezC,EAIfyC,UACAqK,EALe9M,EAKf8M,UACAC,EANe/M,EAMf+M,eANe,OAQfL,EAAAlM,EAAAC,cAACoM,EAAArM,EAAD,CACEc,MAAO0E,EACP8G,UAAWA,GAAwB,QACnCC,eAAgBA,GAAkC,UAClDd,QAASA,EACTxJ,UAAWA,GAAwB,MACnCuK,QAAQ,uCCxBZjC,EAAA,GAAAA,EAAA,GAAAA,EAAA,ogCCoBA,IAAMkC,EAAqBzN,IAAOC,IAAVC,IAGR,SAAA6H,GAAK,OAAKA,EAAMtE,QAAUsE,EAAMtE,QAAUiB,IAAMC,MAAMG,SAC3D,SAAAiD,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMC,QAGrE6I,EAAmBC,MAAQ1N,IAAO2N,IAAP3N,CAA3BmM,IAOI,SAAApE,GAAK,OACLA,EAAMpC,OACF,qBAAuBtF,IAAKC,KAAO,MAAQyH,EAAMpC,OAAO,GAAK,IAC7D,gBAAkBtF,IAAKC,MAC3B,SAAAyH,GAAK,OACLA,EAAMpC,OACF,uBACAtF,IAAKiM,KAAK3G,OAAOiI,MACjB,MACA7F,EAAMpC,OAAO,GACb,IACA,MACJ,SAAAoC,GAAK,OACLA,EAAMpC,OACF,wBAA0BtF,IAAKC,KAAO,MAAQyH,EAAMpC,OAAO,GAAK,IAChE,mBAAqBtF,IAAKC,MAC9B,SAAAyH,GAAK,OACLA,EAAMpC,OACF,sBACAtF,IAAKiM,KAAK3G,OAAOkI,KACjB,MACA9F,EAAMpC,OAAO,GACb,IACA,MAIQ,SAAAoC,GAAK,OAAKA,EAAM+F,YAAc,WAAa,YAC9C,SAAA/F,GAAK,OAAKA,EAAM+F,YAAc,OAAS,QAM9C,SAAA/F,GAAK,OAAKA,EAAMvC,OAAS,YAAcuC,EAAMvC,OAAS,IAAM,OAOlEiI,EAAmBtG,QAAUnH,IAAO+N,IAAP/N,CAA7BgN,IAIoB,SAAAjF,GAAK,OAAKA,EAAMtD,KAAOsD,EAAMtD,KAAO,OAK3C,SAAAsD,GAAK,OAAKA,EAAM+F,YAAc,OAAS,SAGrCL,QC9BAnI,IAlCO,SAAA9E,GAAA,IACpBiD,EADoBjD,EACpBiD,QACAsB,EAFoBvE,EAEpBuE,MACAhD,EAHoBvB,EAGpBuB,UACAiD,EAJoBxE,EAIpBwE,QACAC,EALoBzE,EAKpByE,MACAO,EANoBhF,EAMpBgF,OACAsI,EAPoBtN,EAOpBsN,YACAnI,EARoBnF,EAQpBmF,OACAlB,EAToBjE,EASpBiE,KACA+H,EAVoBhM,EAUpBgM,SAVoB,OAYpBzL,EAAAC,EAAAC,cAAC+M,EAAD,CAAoBjJ,MAAOA,EAAOtB,QAASA,EAAS1B,UAAWA,GAC7DhB,EAAAC,EAAAC,cAAC+M,EAAmBN,MAApB,CACElI,OAAQA,EACRsI,YAAaA,EACbnI,OAAQA,GAER5E,EAAAC,EAAAC,cAAC+M,EAAmB7G,QAApB,CACE2G,YAAaA,EACbrJ,KAAMA,EACNxB,UAAU,kBAETuJ,GAEFxH,EACCjE,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,eACblC,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAUC,IAAKxB,EAASyH,QAASxH,KAEjC,usBCrCH,IAAMgJ,EAAiBjO,IAAOC,IAAVC,IAOvB,SAAA6H,GAAK,OACLA,EAAM3G,QACF,qBAAuBf,IAAKC,KAAO,MAAQyH,EAAM3G,QAAQ,GAAK,IAC9D,qBAAuBf,IAAKC,KAAO,SACvC,SAAAyH,GAAK,OACLA,EAAM3G,QACF,uBAAyBf,IAAKC,KAAO,MAAQyH,EAAM3G,QAAQ,GAAK,IAChE,kBAAoBf,IAAKC,MAC7B,SAAAyH,GAAK,OACLA,EAAM3G,QACF,wBAA0Bf,IAAKC,KAAO,MAAQyH,EAAM3G,QAAQ,GAAK,IACjE,wBAA0Bf,IAAKC,KAAO,SAC1C,SAAAyH,GAAK,OACLA,EAAM3G,QACF,sBACAf,IAAKiM,KAAK3G,OAAOkI,KACjB,MACAxN,IAAKC,KACL,MACAyH,EAAM3G,QAAQ,GACd,IACA,sBACAf,IAAKiM,KAAK3G,OAAOkI,KACjB,MACAxN,IAAKC,KACL,KAIF,SAAAyH,GAAK,OACLA,EAAM5B,UAAY4B,EAAMmG,SAAWnG,EAAMoG,QAAUpG,EAAM3B,UACrD,qBACA,MACJ,SAAA2B,GAAK,OAAKA,EAAM5B,SAAW,UAAY4B,EAAM5B,SAAW,MACxD,SAAA4B,GAAK,OAAKA,EAAMmG,QAAU,SAAWnG,EAAMmG,QAAU,MACrD,SAAAnG,GAAK,OAAKA,EAAM3B,UAAY,WAAa2B,EAAM3B,UAAY,MAC3D,SAAA2B,GAAK,OAAKA,EAAMoG,OAAS,QAAUpG,EAAMoG,OAAS,MAClD,SAAApG,GAAK,OAAKA,EAAM1B,SAAW,UAAY0B,EAAM1B,SAAW,MAItChG,IAAKC,MAIhB8N,EAAmBpO,IAAOC,IAAVkM,IAIT,SAAApE,GAAK,OAAKA,EAAMtD,KAAOsD,EAAMtD,KAAO,OACzC,SAAAsD,GAAK,OAAKA,EAAMsG,UAAY,OAAS3J,IAAM2H,KAAKC,KAAKC,oiCCpDpE,IAAM1C,EAAgB7J,IAAOC,IAAVC,IAGH,SAAA6H,GAAK,OAAKA,EAAMtE,QAAUsE,EAAMtE,QAAUiB,IAAMC,MAAMG,SAC3D,SAAAiD,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMC,QAGrEiF,EAAc6D,MAAQ1N,IAAO2N,IAAP3N,CAAtBmM,IAOI,SAAApE,GAAK,OACLA,EAAMpC,OACF,qBAAuBtF,IAAKC,KAAO,MAAQyH,EAAMpC,OAAO,GAAK,IAC7D,gBAAkBtF,IAAKC,MAC3B,SAAAyH,GAAK,OACLA,EAAMpC,OACF,uBAAyBtF,IAAKC,KAAO,MAAQyH,EAAMpC,OAAO,GAAK,IAC/D,MACJ,SAAAoC,GAAK,OACLA,EAAMpC,OACF,wBAA0BtF,IAAKC,KAAO,MAAQyH,EAAMpC,OAAO,GAAK,IAChE,mBAAqBtF,IAAKC,MAC9B,SAAAyH,GAAK,OACLA,EAAMpC,OACF,sBACAtF,IAAKiM,KAAK3G,OAAOkI,KACjB,OACAxN,IAAKC,KACL,MACAyH,EAAMpC,OAAO,GACb,KACA,OAGRkE,EAAc1C,QAAUnH,IAAO+N,IAAP/N,CAAxBgN,IAQoB3M,IAAKC,KAQKoE,IAAM2H,KAAKQ,MAAMxK,MAAMyK,IAatCjD,QC5CAA,IApBO,SAAArJ,GAAA,IAAGiD,EAAHjD,EAAGiD,QAASqG,EAAZtJ,EAAYsJ,QAAiBnE,GAA7BnF,EAAqB8N,OAArB9N,EAA6BmF,QAA7B,OACpB5E,EAAAC,EAAAC,cAACsN,EAAD,CAAoB9K,QAASA,GAC3B1C,EAAAC,EAAAC,cAACsN,EAAmBb,MAApB,CAA0B/H,OAAQA,GAChC5E,EAAAC,EAAAC,cAACsN,EAAmBpH,QAApB,CAA4BlE,UAAU,kBAEnC6G,EAAQ3G,IAAI,SAACqL,EAAQnL,GAEpB,OACEtC,EAAAC,EAAAC,cAACwN,EAAA,EAAD,CACEhG,IAAKpF,EACL0G,cAAeyE,EAAOzE,cACtBtF,KAAM+J,EAAO/J,KAAO+J,EAAO/J,KAAO,4uECjBhD,IAAMiK,EAAqB1O,IAAOC,IAAVC,IAORwE,IAAM2H,KAAK/L,KAAKqO,GAE5BC,KAGJF,EAAmBhB,MAAQ1N,IAAOC,IAAlCkM,IAUsB,SAAApE,GAAK,OACvBA,EAAMtE,QAAUsE,EAAMtE,QAAUiB,IAAMC,MAAMC,OAC7BvE,IAAKwO,OAGJnK,IAAM2H,KAAKyC,WAAWC,SACpCrK,IAAM2H,KAAKyC,WAAWE,QAEjB,SAAAjH,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAIjE,SAAAwC,GACA,GAAIA,EAAMmC,QACR,MACE,mCAEAnC,EAAMmC,QAFN,qIAaJ,SAAAnC,GACA,GAAIA,EAAMuC,WAAavC,EAAMwC,YAC3B,MACE,6LASAxC,EAAMuC,UATN,wBAYAvC,EAAMwC,YAZN,gCAcoB7F,IAAM2H,KAAKyC,WAAWC,SAd1C,WAeArK,IAAM2H,KAAKyC,WAAWE,QAftB,sBA+BOtK,IAAM2H,KAAK/L,KAAKqO,GAClB,SAAA5G,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAEjDb,IAAM2H,KAAKyC,WAAWC,SACpCrK,IAAM2H,KAAKyC,WAAWE,QAMjBtK,IAAM2H,KAAK/L,KAAKqO,GAClBjK,IAAM2H,KAAK/L,KAAKqO,GACf,SAAA5G,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAEhDb,IAAM2H,KAAKyC,WAAWC,SACpCrK,IAAM2H,KAAKyC,WAAWE,QAKNtK,IAAMC,MAAMY,MACvBb,IAAMC,MAAMC,MAKVF,IAAMC,MAAMC,MAMbF,IAAMC,MAAMC,MAOXF,IAAMC,MAAMC,MAIrB,SAAAmD,GACA,GAAIA,EAAMuC,WAAavC,EAAMwC,YAC3B,sEASRmE,EAAmBvE,QAAUnK,IAAOC,IAApC+M,KAKA0B,EAAmBpH,SAAWtH,IAAOC,IAArCgP,KAMAP,EAAmBQ,KAAOlP,IAAOmP,EAAjCC,IAEW1K,IAAM2H,KAAK/L,KAAKqO,GAClBjK,IAAM2H,KAAK/L,KAAKqO,GAILjK,IAAM2H,KAAKyC,WAAWC,SACpCrK,IAAM2H,KAAKyC,WAAWE,QACjB,SAAAjH,GAAK,OAAKA,EAAMpD,MAAQoD,EAAMpD,MAAQD,IAAMC,MAAMY,QAG9CmJ,QC5HAW,SAjCO,SAAA7O,GAAA,IACpBiD,EADoBjD,EACpBiD,QACAyG,EAFoB1J,EAEpB0J,QACA5C,EAHoB9G,EAGpB8G,SACAvF,EAJoBvB,EAIpBuB,UACAsI,EALoB7J,EAKpB6J,SACAD,EANoB5J,EAMpB4J,UACA1H,EAPoBlC,EAOpBkC,YACA4H,EARoB9J,EAQpB8J,UACAC,EAToB/J,EASpB+J,YAToB,OAWpBxJ,EAAAC,EAAAC,cAACkI,EAAD,CAAoBlG,UAAU,UAC5BlC,EAAAC,EAAAC,cAACkI,EAAmBuE,MAApB,CACEjK,QAASA,EACTyG,QAASA,EACTnI,UAAWA,EACXuI,UAAWA,EACXC,YAAaA,GAEbxJ,EAAAC,EAAAC,cAACqO,EAAA,KAAD,CAAMC,GAAI7M,GACR3B,EAAAC,EAAAC,cAACkI,EAAmB7B,SAApB,KAA8BA,GAI9BvG,EAAAC,EAAAC,cAACkI,EAAmB+F,KAApB,CACEjM,UAAW,UAAYoH,EACvB1F,MAAOyF,mXC7BjB,IAAMoF,EAAexP,IAAOC,IAAVG,IAETC,IAAKoP,IAAInP,KAEOD,IAAKoP,IAAInP,MAKlCkP,EAAa9B,MAAQ1N,IAAOC,IAA5ByP,IAKahL,IAAM2H,KAAK/L,KAAKqO,GAClBtO,IAAKiM,KAAK3G,OAAOkI,MAGb2B,QCyCAG,EA1DC,SAAAnP,KACdgM,SADchM,EAEdiD,QAFcjD,EAGdsK,aAHc,IAIdC,EAJcvK,EAIduK,eACAE,EALczK,EAKdyK,cALc,OAOdlK,EAAAC,EAAAC,cAAC2O,EAAD,KACE7O,EAAAC,EAAAC,cAAC2O,EAAalC,MAAd,KACE3M,EAAAC,EAAAC,cAAC4O,EAAD,CACEpM,QAASiB,IAAMC,MAAMG,QACrBoF,QAAQ,OACR5C,SAAS,qBACTvF,UAAW2C,IAAMC,MAAMC,MACvBwF,UAAW1F,IAAMC,MAAMC,MACvByF,SAAS,MACT3H,YAAY,gCAEd3B,EAAAC,EAAAC,cAAC4O,EAAD,CACEpM,QAASsH,EACTb,QAAQ,OACR5C,SAAS,eACTvF,UAAWkJ,EACXb,UAAWa,EACXZ,SAAS,QACT3H,YAAY,+BAEd3B,EAAAC,EAAAC,cAAC4O,EAAD,CACEpM,QAASsH,EACTb,QAAQ,OACR5C,SAAS,QACTvF,UAAWkJ,EACXb,UAAWa,EACXZ,SAAS,iBACT3H,YAAY,MAEd3B,EAAAC,EAAAC,cAAC4O,EAAD,CACEpM,QAASsH,EACTb,QAAQ,OACR5C,SAAS,OACTvF,UAAWkJ,EACXb,UAAWa,EACXZ,SAAS,cACT3H,YAAY,aAEd3B,EAAAC,EAAAC,cAAC4O,EAAD,CACEpM,QAASsH,EACTb,QAAQ,OACR5C,SAAS,QACTvF,UAAWkJ,EACXb,UAAWa,EACXZ,SAAS,QACT3H,YAAY,kdCvDpB,IAAMoN,EAAoB9P,IAAOC,IAAV8P,IAKZrL,IAAMC,MAAMnD,WACHkD,IAAM2H,KAAKyC,WAAWC,SACpCrK,IAAM2H,KAAKyC,WAAWE,SAG5Bc,EAAkBpC,MAAQ1N,IAAOC,IAAjC+P,KAOAF,EAAkB3I,QAAUnH,IAAOC,IAAnCgQ,IAGgB,SAAAlI,GAAK,OAAKA,EAAMtE,QAAUsE,EAAMtE,QAAU,QAC/C,SAAAsE,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY,YAG1C+N,QCxCfvE,EAAAC,EAAAC,EAAA,sBAAAyE,IAAA3E,EAAAC,EAAAC,EAAA,sBAAA0E,IAyBO,IAAMhF,EAAe,SAAA3K,GAAA,IAC1BgM,EAD0BhM,EAC1BgM,SACA/I,EAF0BjD,EAE1BiD,QACAqH,EAH0BtK,EAG1BsK,aACAC,EAJ0BvK,EAI1BuK,eACAE,EAL0BzK,EAK1ByK,cAL0B,OAO1BlK,EAAAC,EAAAC,cAACmP,EAAD,CAAmBnN,UAAU,OAC3BlC,EAAAC,EAAAC,cAACoP,EAAA,EAAD,MACAtP,EAAAC,EAAAC,cAACqP,EAAD,CACE7M,QAASA,EACTqH,aAAcA,EACdC,eAAgBA,EAChBE,cAAeA,IAEjBlK,EAAAC,EAAAC,cAACmP,EAAkB1C,MAAnB,CAAyBzK,UAAU,kBAChCuJ,KAMM+D,EAAsB,SAAA5F,GAAA,IACjClH,EADiCkH,EACjClH,QACA1B,EAFiC4I,EAEjC5I,UACAqJ,EAHiCT,EAGjCS,SACAoB,EAJiC7B,EAIjC6B,SAJiC,OAMjCzL,EAAAC,EAAAC,cAACmP,EAAkBjJ,QAAnB,CACEpF,UAAWA,EACX0B,QAASA,EACTZ,SAAUuI,GAEToB,sCC1DLjB,EAAAC,EAAAC,EAAA,sBAAA+E,IAAAjF,EAAAC,EAAAC,EAAA,sBAAAgF,IAAA,IAAAxD,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA4B,EAAAF,GAAAyD,GAAAnF,EAAA,GAAAA,EAAA,MAiBaiF,EAAY,SAAAhQ,GAAA,IACvB2F,EADuB3F,EACvB2F,SACA+H,EAFuB1N,EAEvB0N,QACA9H,EAHuB5F,EAGvB4F,UACA+H,EAJuB3N,EAIvB2N,OACA9H,EALuB7F,EAKvB6F,SACA/F,EANuBE,EAMvBF,KACAmE,EAPuBjE,EAOvBiE,KACArD,EARuBZ,EAQvBY,QACAoL,EATuBhM,EASvBgM,SATuB,OAWvBU,EAAAlM,EAAAC,cAACyP,EAAA,EAAD,CACEpQ,KAAMA,IAAc,EACpBc,QAASA,IAAoB,EAC7B+E,SAAUA,IAAsB,EAChC+H,QAASA,IAAoB,EAC7B9H,UAAWA,IAAwB,EACnC+H,OAAQA,IAAkB,EAC1B9H,SAAUA,IAAsB,GAEhC6G,EAAAlM,EAAAC,cAACyP,EAAA,EAAD,CAAkBjM,KAAMA,GAAO+H,KAItBiE,EAAc,SAAA9F,GAAA,IAAG6B,EAAH7B,EAAG6B,SAAU/H,EAAbkG,EAAalG,KAAb,OACzByI,EAAAlM,EAAAC,cAACyP,EAAA,EAAD,CAAkBjM,KAAMA,EAAMxB,UAAU,gBACrCuJ,mhCC7BL,IAoFemE,EApFS3Q,IAAOC,IAAVC,IAKGG,IAAKoP,IAAInP,KACjB,SAAAyH,GAAK,OAAKA,EAAMvG,WAAauG,EAAMvG,WAAa,QAGrD,SAAAuG,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY,WAKrD,SAAAgG,GAAK,OACLA,EAAM9F,KACF,qLAUA8F,EAAM9F,KAVN,+DAkBA,MAGJ,SAAA8F,GAAK,OACLA,EAAM6I,WAAN,uNAaI,MAKoBvQ,IAAKC,KAGND,IAAKC,KAMhB,SAAAyH,GAAK,OAAKA,EAAM+F,YAAc,WAAa,YAC9C,SAAA/F,GAAK,OAAKA,EAAM+F,YAAc,OAAS,QAQ9C,SAAA/F,GAAK,OAAKA,EAAMvC,OAAS,YAAcuC,EAAMvC,OAAS,IAAM,yBCTnDrE,IAnDI,SAAAX,GAAA,IACjBgB,EADiBhB,EACjBgB,WACA2E,EAFiB3F,EAEjB2F,SACA+H,EAHiB1N,EAGjB0N,QACA9H,EAJiB5F,EAIjB4F,UACA+H,EALiB3N,EAKjB2N,OACA9H,EANiB7F,EAMjB6F,SACAtE,EAPiBvB,EAOjBuB,UACAE,EARiBzB,EAQjByB,KACAb,EATiBZ,EASjBY,QACAd,EAViBE,EAUjBF,KACA0E,EAXiBxE,EAWjBwE,QACAtD,EAZiBlB,EAYjBkB,QACAuD,EAbiBzE,EAajByE,MACAR,EAdiBjE,EAcjBiE,KACAmM,EAfiBpQ,EAejBoQ,WACApE,EAhBiBhM,EAgBjBgM,SAhBiB,OAkBjBzL,EAAAC,EAAAC,cAACkI,EAAD,CACE3H,WAAYA,EACZO,UAAWA,EACXE,KAAMA,EACN2O,WAAYA,EACZ3N,UAAWhB,EAAO,OAAS,MAE3BlB,EAAAC,EAAAC,cAAC4P,EAAA,EAAD,CACEvQ,KAAMA,IAAc,EACpBc,QAASA,EACT+E,SAAUA,IAAsB,EAChC+H,QAASA,IAAoB,EAC7B9H,UAAWA,IAAwB,EACnC+H,OAAQA,IAAkB,EAC1B9H,SAAUA,IAAsB,EAChCpD,UAAU,QACVwB,KAAMA,GAEL+H,GAEFxH,EACCjE,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,eACblC,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAUC,IAAKxB,EAASyH,QAASxH,EAAOhC,UAAU,cAElD,KACHvB,EACCX,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,eACblC,EAAAC,EAAAC,cAACyL,EAAA,EAAD,CAAUlG,IAAK9E,EAAS+K,QAAQ,WAAWxJ,UAAU,cAErD,+tCC5DD,IAAM6N,EAAa9Q,IAAOC,IAAVC,KASvB4Q,EAAWnO,MAAQ3C,IAAO+Q,OAAP/Q,CAAnBmM,IACW,SAAApE,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAI/Cb,IAAM2H,KAAK/L,KAAKqO,GAQpBjK,IAAM2H,KAAK/L,KAAKqO,GAKV,SAAA5G,GAAK,OACvBA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAiB1C,SAAAwC,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAE1D,SAAAwC,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAIzD,SAAAwC,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,QAQxDuL,QCnCAE,IArBD,SAAAxQ,GAAA,IAAGiC,EAAHjC,EAAGiC,OAAQV,EAAXvB,EAAWuB,UAAX,OACZhB,EAAAC,EAAAC,cAACkI,EAAD,KACG1G,EAAOU,IAAI,SAAC8N,EAAO5N,GAClB,OACEtC,EAAAC,EAAAC,cAACkI,EAAgBxG,MAAjB,CACE4M,GAAI0B,EAAMvO,YACV+F,IAAKpF,EACLtB,UAAWA,GAGD,GAATsB,EACCtC,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAMjO,UAAU,YAAYkO,KAAK,QAAQpP,UAAWA,IAClD,KAEHkP,EAAMtO,gzCCjBV,IAAMyO,EAAmBpR,IAAOC,IAAVC,IAKlB,SAAA6H,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAGjE,SAAAwC,GAAK,OACLA,EAAM5D,OACF,oBAAsB9D,IAAKC,KAAO,MAAQyH,EAAM5D,OAAO,GAAK,IAC5D,MACJ,SAAA4D,GAAK,OACLA,EAAM5D,OACF,sBAAwB9D,IAAKC,KAAO,MAAQyH,EAAM5D,OAAO,GAAK,IAC9D,MACJ,SAAA4D,GAAK,OACLA,EAAM5D,OACF,uBAAyB9D,IAAKC,KAAO,MAAQyH,EAAM5D,OAAO,GAAK,IAC/D,MACJ,SAAA4D,GAAK,OACLA,EAAM5D,OACF,qBAAuB9D,IAAKC,KAAO,MAAQyH,EAAM5D,OAAO,GAAK,IAC7D,MAGK,SAAA4D,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAE9Cb,IAAM2H,KAAK/L,KAAKwM,GAEnBzM,IAAKC,KACTD,IAAKC,KACJD,IAAKC,KAKAD,IAAKC,KAEHD,IAAKC,KAKhB,SAAAyH,GAAK,OACZA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAMpC,SAAAwC,GAAK,OACjBA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,QAmBxD6L,EAAiBzO,MAAQ3C,IAAOqR,KAAhClF,IACW,SAAApE,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAKzD,SAAAwC,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,QAIvD6L,QC5CAlN,IAlCK,SAAA1D,GAAA,IAAGuB,EAAHvB,EAAGuB,UAAWqC,EAAd5D,EAAc4D,SAAUD,EAAxB3D,EAAwB2D,OAAxB,OAClBpD,EAAAC,EAAAC,cAACkI,EAAD,CAAkBhF,OAAQA,EAAQpC,UAAWA,GAC3ChB,EAAAC,EAAAC,cAAA,KACE2I,KAAM,yCAA2CxF,EACjDkN,OAAO,SACPC,IAAI,gCAEJxQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAMC,KAAK,WAAWxM,MAAO5C,KAE/BhB,EAAAC,EAAAC,cAAA,KACE2I,KACE,wCACAxF,EACA,oCAEFkN,OAAO,SACPC,IAAI,gCAEJxQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAMC,KAAK,UAAUxM,MAAO5C,KAE9BhB,EAAAC,EAAAC,cAAA,KACE2I,KACE,uDACAxF,EACA,uCAEFkN,OAAO,SACPC,IAAI,gCAEJxQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAMC,KAAK,WAAWxM,MAAO5C,gwCC3BnC,IAAMyP,EAAoBxR,IAAOC,IAAVC,KAKvBsR,EAAkB9D,MAAQ1N,IAAOC,IAAjCkM,IAEoB,SAAApE,GAAK,OAAKA,EAAMtD,KAAOsD,EAAMtD,KAAO,OAWzC,SAAAsD,GAAK,OACZA,EAAMtD,KACF,eAAiBpE,IAAKiM,KAAK3G,OAAOkI,KAAO,QACzC,eAAiBxN,IAAKiM,KAAK3G,OAAOkI,KAAO,SAI7C,SAAA9F,GAAK,OACLA,EAAMtD,KACF,KACA,sBACApE,IAAKiM,KAAK3G,OAAOkI,KACjB,MACAxN,IAAKC,KACL,KAMG,SAAAyH,GAAK,OACZA,EAAMtD,KACF,eAAiBpE,IAAKiM,KAAK3G,OAAOkI,KAAO,QACzC,eAAiBxN,IAAKiM,KAAK3G,OAAOkI,KAAO,SAI7BxN,IAAKoR,KAAKpP,OAsBnBmP,QC7DAhN,IANM,SAAAhE,GAAA,IAAGgM,EAAHhM,EAAGgM,SAAU/H,EAAbjE,EAAaiE,KAAb,OACnB1D,EAAAC,EAAAC,cAACyQ,EAAD,KACE3Q,EAAAC,EAAAC,cAACyQ,EAAkBhE,MAAnB,CAAyBjJ,KAAMA,GAAO+H,29CCJnC,IAAMmF,EAAiB3R,IAAOC,IAAVC,IACLG,IAAKC,KACFD,IAAKC,KACPD,IAAKiM,KAAK3G,OAAOkI,KACxB,SAAA9F,GAAK,OAAKA,EAAMtE,QAAUsE,EAAMtE,QAAUiB,IAAMC,MAAMC,OAC3D,SAAAmD,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OAGxD,SAAAwC,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,QAIvEoM,EAAejE,MAAQ1N,IAAO+N,IAAP/N,CAAvBmM,IAYoB9L,IAAKC,KAAaD,IAAKC,KAOjBD,IAAKuR,kBAILvR,IAAKuR,kBAYX,SAAA7J,GAAK,OACjBA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMY,OASlClF,IAAKC,KAcNoE,IAAMC,MAAMG,SAQlB6M,QCjDAhL,IA5BG,SAAAnG,GAAA,IAAGqG,EAAHrG,EAAGqG,MAAOpD,EAAVjD,EAAUiD,QAAS1B,EAAnBvB,EAAmBuB,UAAnB,OAChBhB,EAAAC,EAAAC,cAAC4Q,EAAD,CAAgBpO,QAASA,EAAS1B,UAAWA,GAC3ChB,EAAAC,EAAAC,cAAC4Q,EAAenE,MAAhB,KACG7G,EAAM1D,IAAI,SAAC2O,EAAMzO,GAChB,OAAIyO,EAAKpP,YAEL3B,EAAAC,EAAAC,cAAA,OAAKwH,IAAKpF,EAAOJ,UAAU,yBACzBlC,EAAAC,EAAAC,cAACqO,EAAA,KAAD,CAAMC,GAAIuC,EAAKpP,aACb3B,EAAAC,EAAAC,cAAA,YAAO6Q,EAAKhL,SACZ/F,EAAAC,EAAAC,cAAA,YAAO6Q,EAAKnP,SAMhB5B,EAAAC,EAAAC,cAAA,OAAKwH,IAAKpF,EAAOJ,UAAU,mBACzBlC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YAAO6Q,EAAKhL,SACZ/F,EAAAC,EAAAC,cAAA,YAAO6Q,EAAKnP,g6CClB5B,IAAMoP,EAA2B/R,IAAOC,IAAVC,IAGd,SAAA6H,GAAK,OAAKA,EAAMtE,QAAUsE,EAAMtE,QAAUiB,IAAMC,MAAMG,SAC3D,SAAAiD,GAAK,OAAKA,EAAMhG,UAAYgG,EAAMhG,UAAY2C,IAAMC,MAAMC,QAGrEmN,EAAyBrE,MAAQ1N,IAAO2N,IAAP3N,CAAjCmM,IAOI,SAAApE,GAAK,OACLA,EAAMpC,OACF,qBAAuBtF,IAAKC,KAAO,MAAQyH,EAAMpC,OAAO,GAAK,IAC7D,gBAAkBtF,IAAKC,MAC3B,SAAAyH,GAAK,OACLA,EAAMpC,OACF,uBACAtF,IAAKiM,KAAK3G,OAAOiI,MACjB,MACA7F,EAAMpC,OAAO,GACb,IACA,MACJ,SAAAoC,GAAK,OACLA,EAAMpC,OACF,wBAA0BtF,IAAKC,KAAO,MAAQyH,EAAMpC,OAAO,GAAK,IAChE,mBAAqBtF,IAAKC,MAC9B,SAAAyH,GAAK,OACLA,EAAMpC,OACF,sBACAtF,IAAKiM,KAAK3G,OAAOkI,KACjB,MACA9F,EAAMpC,OAAO,GACb,IACA,MAIQ,SAAAoC,GAAK,OAAKA,EAAM+F,YAAc,WAAa,YAC9C,SAAA/F,GAAK,OAAKA,EAAM+F,YAAc,OAAS,QAM9C,SAAA/F,GAAK,OAAKA,EAAMvC,OAAS,YAAcuC,EAAMvC,OAAS,IAAM,OAOlEuM,EAAyB5K,QAAUnH,IAAO+N,IAAP/N,CAAnCgN,IAEoB,SAAAjF,GAAK,OAAKA,EAAMtD,KAAOsD,EAAMtD,KAAO,OAO3C,SAAAsD,GAAK,OAAKA,EAAM+F,YAAc,OAAS,QAI1BzN,IAAKC,KAMXD,IAAKoP,IAAInP,KAAUD,IAAKC,KAClBD,IAAKC,KAQlBoE,IAAMC,MAAMqN,MAECtN,IAAM2H,KAAK/L,KAAKqO,IAI3BoD,iKChFR,IAAME,EAAkBrF,4BAAHsF,KAyEbhL,IA9Da,SAAA1G,GAAA,IAC1BiD,EAD0BjD,EAC1BiD,QACAsB,EAF0BvE,EAE1BuE,MACAhD,EAH0BvB,EAG1BuB,UACAoF,EAJ0B3G,EAI1B2G,QACAgL,EAL0B3R,EAK1B2R,QACA3K,EAN0BhH,EAM1BgH,eACA7B,EAP0BnF,EAO1BmF,OACAlB,EAR0BjE,EAQ1BiE,KACAoD,EAT0BrH,EAS1BqH,OAT0B,OAW1B9G,EAAAC,EAAAC,cAACmR,EAAD,CACErN,MAAOA,EACPtB,QAASA,EACT1B,UAAWA,GAEXhB,EAAAC,EAAAC,cAACgR,EAAD,MACAlR,EAAAC,EAAAC,cAACmR,EAAyB1E,MAA1B,CAAgC/H,OAAQA,GACtC5E,EAAAC,EAAAC,cAACmR,EAAyBjL,QAA1B,CAAkC1C,KAAMA,EAAMxB,UAAU,kBACtDlC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOf,QAAS,CAAC,EAAG,EAAG,EAAG,GAAI6B,UAAU,gBACtClC,EAAAC,EAAAC,cAAA,QAAMgC,UAAU,eAAekE,EAAQC,aACvCrG,EAAAC,EAAAC,cAAA,UAAKkG,EAAQG,UACbvG,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,QAAQkE,EAAQI,MAG5BM,EACC9G,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEZ,MAAOkF,EAAOlF,MACdc,QAASoE,EAAOpE,QAChB1B,UAAW8F,EAAO9F,UAClBW,YAAamF,EAAOnF,YACpBkB,aAAa,OACbE,UAAW+D,EAAO/D,UAAY+D,EAAO/D,UAAY,KACjDC,SAAO,IAEP,MAENhD,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOf,QAAS,CAAC,EAAG,EAAG,EAAG,IACvB+Q,EACGA,EAAQhP,IAAI,SAACkP,EAAKhP,GAChB,OACEtC,EAAAC,EAAAC,cAAA,OAAKwH,IAAI,QAAQxF,UAAU,eACzBlC,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAUC,IAAK6L,EAAIC,IAAK7F,QAAS4F,EAAI1K,SAI3C,KACHH,EACGA,EAAerE,IAAI,SAAC4I,EAAO1I,GACzB,OACEtC,EAAAC,EAAAC,cAAA,OAAKwH,IAAI,QAAQxF,UAAU,eACzBlC,EAAAC,EAAAC,cAACyL,EAAA,EAAD,CAAUlG,IAAKuF,EAAMrE,MAAO+E,QAASV,EAAMpE,SAIjD","file":"component---src-templates-special-index-js-ed78ff2a38671a134ca0.js","sourcesContent":["// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleHeroStyle = styled.div`\n  appearance: none;\n\n  .btn {\n    margin-right: calc(${Root.Size} / 4);\n  }\n`;\n\nexport default CastleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Simple Hero component:\n// slice_type: hero\n// example: https://www.dropbox.com/s/vp50dnga8ix2n8t/Screenshot%202019-05-07%2018.37.41.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport SocialStrip from 'components/library/SocialStrip';\nimport Bread from 'components/library/Breadcrumb';\nimport Btn from 'components/library/Btn/';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleHeroStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleHero Component\nconst CastleHero = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleHeroStyle>\n      <SimpleHero\n        Padding={\n          primaryData.padding\n            ? primaryData.padding.replace(/\\s/g, '').split(',')\n            : null\n        }\n        Background={primaryData.background_color}\n        BgQuery={\n          primaryData.background_image.localFile\n            ? primaryData.background_image.localFile.childImageSharp.fluid\n            : false\n        }\n        TextColor={primaryData.text_color}\n        Tint={primaryData.tint_opacity}\n      >\n        <Block AlignItems=\"flex-start\" Width={1} maxWidth={0.75}>\n          {/* Check for Breadcrumbs */}\n          {primaryData.breadcrumb_url ? (\n            <Bread\n              Crumbs={[\n                {\n                  Destination: primaryData.breadcrumb_url,\n                  Label: primaryData.breadcrumb_label,\n                },\n              ]}\n              TextColor={primaryData.text_color}\n            />\n          ) : null}\n\n          {/* Check for Headline */}\n          <h1 itemProp=\"name\">\n            {primaryData.headline.text\n              ? primaryData.headline.text\n              : 'Enter a headline...'}\n          </h1>\n          {primaryData.body_text ? (\n            <p className=\"p-lg\">{primaryData.body_text} </p>\n          ) : null}\n\n          {/* Check for CTA */}\n          {repeatableData[0].cta_destination != null\n            ? repeatableData.map((item, index) => {\n                return (\n                  <>\n                    <Btn\n                      Label={item.cta_label}\n                      BgColor={item.cta_bg_color}\n                      TextColor={item.cta_text_color}\n                      Destination={item.cta_destination}\n                      IconPosition={item.cta_icon ? 'left' : null}\n                      IconClass={item.cta_icon ? item.cta_icon : null}\n                      IconFas\n                    />\n                  </>\n                );\n              })\n            : null}\n\n          {/* Check if Social Sharing is enabled */}\n          {primaryData.social_sharing.toLowerCase() == 'yes' ? (\n            <SocialStrip\n              Margin={[0.35, 0, 0, 0]}\n              Location={location}\n              TextColor={primaryData.text_color}\n            />\n          ) : null}\n        </Block>\n      </SimpleHero>\n    </CastleHeroStyle>\n  );\n};\n\nexport default CastleHero;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n//\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n//\n// ///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsHeroData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsHero {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            text_alignment\n            background_color\n            text_color\n            tint_color\n            tint_opacity\n            padding\n            social_sharing\n            breadcrumb_url\n            breadcrumb_label\n            background_image {\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicQuestionElementsHeroData on PrismicQuestion {\n    data {\n      elements {\n        ... on PrismicQuestionElementsHero {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            text_alignment\n            background_color\n            text_color\n            tint_color\n            tint_opacity\n            padding\n            social_sharing\n            breadcrumb_url\n            breadcrumb_label\n            background_image {\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicGenericPageElementsHeroData on PrismicGenericPage {\n    data {\n      elements {\n        ... on PrismicGenericPageElementsHero {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            text_alignment\n            background_color\n            text_color\n            tint_color\n            tint_opacity\n            padding\n            social_sharing\n            breadcrumb_url\n            breadcrumb_label\n            background_image {\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsHeroData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsHero {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            text_alignment\n            background_color\n            text_color\n            tint_color\n            tint_opacity\n            padding\n            social_sharing\n            breadcrumb_url\n            breadcrumb_label\n            background_image {\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleHeroStyle = styled.div`\n  appearance: none;\n\n  .btn {\n    margin-right: calc(${Root.Size} / 4);\n  }\n`;\n\nexport default CastleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Full Split Section component:\n// slice_type: full_split_section\n// example: https://www.dropbox.com/s/3s19gold67oyspe/Screenshot%202019-05-08%2017.00.10.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport SplitSection from 'components/library/Section/SplitSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleSplitSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSplitSection Component\nconst CastleSplitSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleSplitSectionStyle>\n      <SplitSection Flex=\"row-reverse\">\n        <Block\n          Padding={[1, 1, 1, 1]}\n          Width={0.5}\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          <h2>Discretion is our first priority — so why not make it free?</h2>\n          <p className=\"p-md\">\n            Free delivery available within 15 miles of our Reno and Carson City\n            stores, Nevada addresses only.\n          </p>\n          <Btn\n            Label=\"View Our Menu\"\n            Destination=\"/menu\"\n            BgColor={Theme.Color.Primary}\n            TextColor={Theme.Color.White}\n          />\n        </Block>\n\n        <Block\n          Style=\"centered\"\n          BgColor={Theme.Color.White}\n          BgMatch=\"placeholder_bg_4.jpg\"\n          BgAlt=\"Our Awesome Alt Tag\"\n          Width={0.5}\n        />\n      </SplitSection>\n    </CastleSplitSectionStyle>\n  );\n};\n\nexport default CastleSplitSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n//\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n//\n// ///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsFullSplitSectionData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsFullSplitSection {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicQuestionElementsFullSplitSectionData on PrismicQuestion {\n    data {\n      elements {\n        ... on PrismicQuestionElementsFullSplitSection {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicGenericPageElementsFullSplitSectionData on PrismicGenericPage {\n    data {\n      elements {\n        ... on PrismicGenericPageElementsFullSplitSection {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsFullSplitSectionData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsFullSplitSection {\n          slice_type\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection component:\n// slice_type: simple_section\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport SimpleSection from 'components/library/Section/SimpleSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleSimpleSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSimpleSection Component\nconst CastleSimpleSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleSimpleSectionStyle>\n      <SimpleSection\n        BgColor={Theme.Color.Black}\n        BgMatch=\"placeholder_bg_4.jpg\"\n        BgTint={0.3}\n        BgAlt=\"Our Awesome Alt Tag\"\n        TextColor={Theme.Color.White}\n        Style=\"centered\"\n      >\n        <Block Style=\"centered\" Padding={[1, 0, 1, 0]} maxWidth={0.5}>\n          <h2>Discretion is our first priority — so why not make it free?</h2>\n          <p className=\"p-md\">\n            Free delivery available within 15 miles of our Reno and Carson City\n            stores, Nevada addresses only.\n          </p>\n          <Btn\n            Label=\"View Our Menu\"\n            Destination=\"/menu\"\n            BgColor={Theme.Color.Primary}\n            TextColor={Theme.Color.White}\n          />\n        </Block>\n      </SimpleSection>\n    </CastleSimpleSectionStyle>\n  );\n};\n\nexport default CastleSimpleSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n//\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n//\n// ///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsSimpleSectionData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsSimpleSection {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicQuestionElementsSimpleSectionData on PrismicQuestion {\n    data {\n      elements {\n        ... on PrismicQuestionElementsSimpleSection {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicGenericPageElementsSimpleSectionData on PrismicGenericPage {\n    data {\n      elements {\n        ... on PrismicGenericPageElementsSimpleSection {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsSimpleSectionData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsSimpleSection {\n          slice_type\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n\n  .btn {\n    margin-right: calc(${Root.Size} / 4);\n  }\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection component:\n// slice_type: simple_section\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport SimpleSection from 'components/library/Section/SimpleSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleSplitSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSplitSection Component\nconst CastleSplitSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleSplitSectionStyle>\n      <SimpleSection\n        BgColor={primaryData.background_color}\n        TextColor={primaryData.text_color}\n        Gutter={[1, 0, 1, 1]}\n        Flex={primaryData.direction == 'normal' ? 'row' : 'row-reverse'}\n      >\n      {console.log(primaryData.direction)}\n        <Block\n          Style=\"centered\"\n          BgColor={primaryData.background_color}\n          BgQuery={primaryData.image.localFile.childImageSharp.fluid}\n          BgAlt={primaryData.image.alt}\n          Width={0.5}\n        />\n\n        <Block\n          Padding={[3, 1, 3, 1]}\n          Width={0.5}\n          TextColor={primaryData.text_color}\n        >\n          <h2>{primaryData.headline.text}</h2>\n          <p className=\"p-md\">{primaryData.body_text}</p>\n          {/* Check for CTA */}\n          {repeatableData[0].cta_destination != null\n            ? repeatableData.map((item, index) => {\n                return (\n                  <>\n                    <Btn\n                      Label={item.cta_label}\n                      BgColor={item.cta_bg_color}\n                      TextColor={item.cta_text_color}\n                      Destination={item.cta_destination}\n                      IconPosition={item.cta_icon ? 'left' : null}\n                      IconClass={item.cta_icon ? item.cta_icon : null}\n                      IconFas\n                    />\n                  </>\n                );\n              })\n            : null}\n        </Block>\n      </SimpleSection>\n    </CastleSplitSectionStyle>\n  );\n};\n\nexport default CastleSplitSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n\n///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsSplitSectionData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsSplitSection {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            body_text\n            background_color\n            text_color\n            direction\n            image {\n              alt\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n          items {\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitImageHero component:\n// slice_type: split_image_hero\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport Bread from 'components/library/Breadcrumb/';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleSplitSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSplitSection Component\nconst CastleSplitSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleSplitSectionStyle>\n      <SimpleHero\n        imgRight=\"0\"\n        imgBottom=\"0\"\n        imgWidth=\"50%\"\n        Size=\"2\"\n        Background={Theme.Color.Tahoe}\n        TextColor={Theme.Color.White}\n      >\n        <Block AlignItems=\"flex-start\" Width={0.5}>\n          <Bread\n            Crumbs={[\n              {\n                Destination: '/specials',\n                Label: 'Specials',\n              },\n            ]}\n            TextColor={Theme.Color.White}\n          />\n          <h1>100% Free Delivery</h1>\n          <p className=\"p-md\">Any size order, no minimum required.</p>\n          <Btn\n            Label=\"View Our Menu\"\n            Destination=\"/menu\"\n            BgColor={Theme.Color.Primary}\n            TextColor={Theme.Color.White}\n          />\n        </Block>\n        <Block className=\"hero-img\">\n          <ImgMatch src=\"hero-phone.png\" alt=\"100% Free Delivery\" />\n        </Block>\n      </SimpleHero>\n    </CastleSplitSectionStyle>\n  );\n};\n\nexport default CastleSplitSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n\n///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsSplitImageHeroData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsSplitImageHero {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicQuestionElementsSplitImageHeroData on PrismicQuestion {\n    data {\n      elements {\n        ... on PrismicQuestionElementsSplitImageHero {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicGenericPageElementsSplitImageHeroData on PrismicGenericPage {\n    data {\n      elements {\n        ... on PrismicGenericPageElementsSplitImageHero {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsSplitImageHeroData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsSplitImageHero {\n          slice_type\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// PromotionalStrip component:\n// slice_type: simple_section\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport HeroStrip from 'components/library/HeroStrip';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleSplitSectionStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSplitSection Component\nconst CastleSplitSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items;\n\n  return (\n    <CastleSplitSectionStyle>\n      <HeroStrip\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.NightSky}\n        Items={[\n          {\n            Caption: 'Seniors',\n            Label: '5% off',\n          },\n          {\n            Caption: 'Senior Veterans',\n            Label: '15% off',\n          },\n          {\n            Caption: 'Veterans',\n            Label: '10% off',\n          },\n          {\n            Caption: 'Industry',\n            Label: '15% off',\n          },\n          {\n            Caption: 'More details',\n            Label: 'View all',\n            Destination: '/specials',\n          },\n        ]}\n      />\n    </CastleSplitSectionStyle>\n  );\n};\n\nexport default CastleSplitSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n\n///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsPromotionalStripData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsPromotionalStrip {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicQuestionElementsPromotionalStripData on PrismicQuestion {\n    data {\n      elements {\n        ... on PrismicQuestionElementsPromotionalStrip {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicGenericPageElementsPromotionalStripData on PrismicGenericPage {\n    data {\n      elements {\n        ... on PrismicGenericPageElementsPromotionalStrip {\n          slice_type\n        }\n      }\n    }\n  }\n\n  fragment PrismicLocationElementsPromotionalStripData on PrismicLocation {\n    data {\n      elements {\n        ... on PrismicLocationElementsPromotionalStrip {\n          slice_type\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle Builder Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst CastleSimpleSectionStyle = styled.div`\n  appearance: none;\n`;\n\nexport default CastleSimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// StickyGallery component:\n// slice_type: sticky_gallery\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Components\nimport Btn from 'components/library/Btn/';\nimport StickyScrollSection from 'components/library/Section/StickyScrollSection';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Style Overrides\nimport CastleStickyGalleryStyle from './styles.scss';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The CastleSimpleSection Component\nconst CastleSimpleSection = ({ data, location }) => {\n  const primaryData = data.primary;\n  const repeatableData = data.items.length > 0 ? data.items : 0;\n\n  const galleryImgQueries = data => {\n    if (data != 0) {\n      let queries = data.map((Query, index) => {\n        return {\n          Fluid: Query.src.localFile.childImageSharp.fluid\n            ? Query.src.localFile.childImageSharp.fluid\n            : false,\n          Alt: Query.src.alt,\n        };\n      });\n\n      return queries;\n    } else {\n      return 0;\n    }\n  };\n\n  return (\n    <CastleStickyGalleryStyle>\n      <StickyScrollSection\n        BgColor={primaryData.background_color}\n        TextColor={primaryData.text_color}\n        Content={{\n          Subheadline: primaryData.subheadline,\n          Headline: primaryData.headline.text,\n          Body: primaryData.body_text,\n        }}\n        Flex={primaryData.direction == 'normal' ? 'row' : 'row-reverse'}\n        GalleryQueries={galleryImgQueries(repeatableData)}\n        Button={{\n          Label: primaryData.cta_label,\n          BgColor: primaryData.cta_bg_color,\n          TextColor: primaryData.cta_text_color,\n          Destination: primaryData.cta_destination,\n          IconClass: primaryData.cta_icon,\n        }}\n      />\n    </CastleStickyGalleryStyle>\n  );\n};\n\nexport default CastleSimpleSection;\n\n// GraphQL Queries:\n// This is where you specify what data you need. It's fragment is\n// used in the templated page query and passed into the Castle component.\n// Example from the Special.js Template: https://www.dropbox.com/s/7d8hlm7yuqrlyi9/Screenshot%202019-05-08%2019.25.50.png?dl=0\n//\n// Basic Process:s\n// 1. We run createPage() in gatsby-node.js\n// 2. Query the needed data and pass it to a specified template.js. In the case\n// above, it's Special/index.js. That template holds the GraphQL Query to pass said\n// data and our fragment we make below down into the <Castle /> level component\n// to identify the elements needed to build out the page content.\n// 3. Rejoice.\n//\n// ///////////////////////////////////////////////////////////////////\n\nexport const query = graphql`\n  fragment PrismicSpecialElementsStickyGalleryData on PrismicSpecial {\n    data {\n      elements {\n        ... on PrismicSpecialElementsStickyGallery {\n          slice_type\n          primary {\n            headline {\n              text\n            }\n            subheadline\n            direction\n            body_text\n            background_color\n            text_color\n            cta_label\n            cta_destination\n            cta_bg_color\n            cta_text_color\n            cta_icon\n          }\n          items {\n            src {\n              alt\n              copyright\n              url\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Castle.js\n// This is the page builder for Elements.\n// Future regex for matching {{ variables }} https://regex101.com/r/xgOodL/1\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\n\n// Styles\nimport CastleStyle from './styles.scss';\n\n// Components\nimport CastleHero from './components/CastleHero';\nimport CastleFullSplitSection from './components/CastleFullSplitSection';\nimport CastleSimpleSection from './components/CastleSimpleSection';\nimport CastleSplitSection from './components/CastleSplitSection';\nimport CastleSplitImageHero from './components/CastleSplitImageHero';\nimport CastlePromotionalStrip from './components/CastlePromotionalStrip';\nimport CastleStickyGallery from './components/CastleStickyGallery';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Castle\nclass CastleBuilder extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  // Render\n  render() {\n    const bricks = this.props.Bricks;\n    const location = this.props.Location;\n\n    return (\n      <>\n        {bricks.map((brick, index) => {\n          switch (brick.slice_type) {\n            case 'hero':\n              return (\n                <CastleHero data={brick} location={location} key={index} />\n              );\n            case 'full_split_section':\n              return (\n                <CastleFullSplitSection\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'split_section':\n              return (\n                <CastleSplitSection\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'split_image_hero':\n              return (\n                <CastleSplitImageHero\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'promotional_strip':\n              return (\n                <CastlePromotionalStrip\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'sticky_gallery':\n              return (\n                <CastleStickyGallery\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n            case 'simple_section':\n              return (\n                <CastleSimpleSection\n                  data={brick}\n                  location={location}\n                  key={index}\n                />\n              );\n          }\n        })}\n      </>\n    );\n  }\n}\n\nconst Castle = ({ Bricks, Location }) => (\n  <CastleStyle>\n    <CastleBuilder Bricks={Bricks} Location={Location} />\n  </CastleStyle>\n);\n\nexport default Castle;\n","// templates/Question.js:\n// This is the Question template of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/core/Layout';\n\n// Components\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport SocialStrip from 'components/library/SocialStrip';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport Bread from 'components/library/Breadcrumb';\nimport Btn from 'components/library/Btn/';\n\n// Castle.js by L&M\nimport Castle from 'components/library/Castle';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst DefaultTemplate = ({ node, data }) => (\n  <>\n    <SimpleHero\n      Padding={[4, 0, 4, 0]}\n      BgQuery={\n        node.cover_image.localFile\n          ? node.cover_image.localFile.childImageSharp.fluid\n          : false\n      }\n      Background={\n        node.color_background ? node.color_background : Theme.Color.Background\n      }\n      BgAlt={node.title.text ? node.title.text : 'Hero Image'}\n      TextColor={node.color_primary ? node.color_primary : Theme.Color.White}\n      Tint=\"0.5\"\n    >\n      <Block AlignItems=\"flex-start\" Width={1} maxWidth={0.75}>\n        <Bread\n          Crumbs={[{ Destination: '/specials', Label: 'Specials' }]}\n          TextColor={node.color_primary}\n        />\n        <h1>{node.title.text}</h1>\n        {node.description ? <p className=\"p-lg\">{node.description} </p> : null}\n        <SocialStrip\n          Margin={[0.45, 0, 0, 0]}\n          Location={data.location.href}\n          TextColor={\n            node.color_primary ? node.color_primary : Theme.Color.White\n          }\n        />\n      </Block>\n    </SimpleHero>\n\n    {/* ///////////// */}\n\n    <WidgetSection\n      BgColor={Theme.Color.White}\n      Widgets={[\n        {\n          // Begin WidgetContent\n          Flex: 1,\n          WidgetContent: [\n            {\n              Destination: '/menu',\n              Style: 'Generic',\n              Meta: {\n                Generic: {\n                  BgColor: Theme.Color.Nightsky,\n                  BgImage: '',\n                  Subhead: '',\n                  Headline: 'Menu',\n                  TextColor: Theme.Color.White,\n                  IconColor: Theme.Color.Primary,\n                  IconName: 'plus', // FontAwesome Icon Name\n                  TintColor: '',\n                  TintOpacity: '',\n                  IconSize: '',\n                },\n              },\n            },\n          ],\n          // End WidgetContent\n        },\n        {\n          // Begin WidgetContent\n          Flex: 1,\n          WidgetContent: [\n            {\n              Destination: '/locations',\n              Style: 'Generic',\n              Meta: {\n                Generic: {\n                  BgColor: Theme.Color.Tahoe,\n                  BgImage: '',\n                  Subhead: '',\n                  Headline: 'Locations',\n                  TextColor: Theme.Color.White,\n                  IconColor: Theme.Color.White,\n                  IconName: 'map-marker-alt', // FontAwesome Icon Name\n                  TintColor: '',\n                  TintOpacity: '',\n                  IconSize: '',\n                },\n              },\n            },\n          ],\n          // End WidgetContent\n        },\n        {\n          // Begin WidgetContent\n          Flex: 1,\n          WidgetContent: [\n            {\n              Destination: '/learn',\n              Style: 'Generic',\n              Meta: {\n                Generic: {\n                  BgColor: Theme.Color.Mint,\n                  BgImage: '',\n                  Subhead: '',\n                  Headline: 'Q&A',\n                  TextColor: Theme.Color.Nightsky,\n                  IconColor: Theme.Color.Nightsky,\n                  IconName: 'book-open', // FontAwesome Icon Name\n                  TintColor: '',\n                  TintOpacity: '',\n                  IconSize: '',\n                },\n              },\n            },\n          ],\n          // End WidgetContent\n        },\n        {\n          // Begin WidgetContent\n          Flex: 1,\n          WidgetContent: [\n            {\n              Destination: '/specials',\n              Style: 'Generic',\n              Meta: {\n                Generic: {\n                  BgColor: Theme.Color.Primary,\n                  BgImage: '',\n                  Subhead: '',\n                  Headline: 'Specials',\n                  TextColor: Theme.Color.White,\n                  IconColor: Theme.Color.White,\n                  IconName: 'star', // FontAwesome Icon Name\n                  TintColor: '',\n                  TintOpacity: '',\n                  IconSize: '',\n                },\n              },\n            },\n          ],\n          // End WidgetContent\n        },\n      ]}\n    />\n\n    {/* ///////////// */}\n  </>\n);\n\n// The Question Template\nconst SpecialArticleTemplate = ({ data, node, elements }) => (\n  <Layout\n    BgColor={\n      node.color_background ? node.color_background : Theme.Color.Background\n    }\n    PrimaryColor={\n      node.color_primary ? node.color_primary : Theme.Color.Nightsky\n    }\n    SecondaryColor={\n      node.color_secondary ? node.color_secondary : Theme.Color.Nightsky\n    }\n    TertiaryColor={\n      node.color_tertiary ? node.color_tertiary : Theme.Color.White\n    }\n  >\n    <SubLevelPage\n      BgColor={\n        node.color_background ? node.color_background : Theme.Color.Background\n      }\n      PrimaryColor={\n        node.color_primary ? node.color_primary : Theme.Color.Nightsky\n      }\n      SecondaryColor={\n        node.color_secondary ? node.color_secondary : Theme.Color.Nightsky\n      }\n      TertiaryColor={\n        node.color_tertiary ? node.color_tertiary : Theme.Color.White\n      }\n    >\n      {/* Schema.org BlogPosting */}\n      {/* Read more: https://schema.org/BlogPosting */}\n\n      {/* ///////////// */}\n      {/* Begin page content. */}\n      {/* ///////////// */}\n      <SubLevelPageContent\n        BgColor={node.color_background}\n        TextColor={node.color_primary}\n        ItemProp=\"articleBody\"\n      >\n        {/* ///////////// */}\n\n        {/* Check if elements exist. If so, run Castle. If not, display the default layout. */}\n        {elements ? (\n          <Castle Bricks={elements} Location={data.location.href} />\n        ) : (\n          <DefaultTemplate data={data} node={node} />\n        )}\n\n        {console.log(elements)}\n\n        {/* ///////////// */}\n      </SubLevelPageContent>\n      {/* End page content. */}\n      {/* ///////////// */}\n    </SubLevelPage>\n  </Layout>\n);\n\nexport default SpecialArticleTemplate;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Index.js:\n// This is the home page of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\n// Templates\nimport SpecialArticleTemplate from './layout';\n\n// Load Castle Fragments\nimport 'components/library/Castle';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Question Template\nconst SpecialsArticlePage = props => {\n  const node = props.data.allPrismicSpecial.edges[0].node;\n\n  return (\n    <>\n      <SpecialArticleTemplate\n        node={node.data}\n        data={props}\n        elements={node.data.elements}\n      />\n      {console.log(node.data)}\n    </>\n  );\n};\n\nexport default SpecialsArticlePage;\n\n// GraphQL Queries\n// ///////////////////////////////////////////////////////////////////\nexport const query = graphql`\n  query($Id: String!) {\n    allPrismicSpecial(filter: { id: { eq: $Id } }) {\n      edges {\n        node {\n          id\n\n          # Load our Castle Component data.\n          ...PrismicSpecialElementsHeroData\n          ...PrismicSpecialElementsFullSplitSectionData\n          ...PrismicSpecialElementsSimpleSectionData\n          ...PrismicSpecialElementsSplitSectionData\n          ...PrismicSpecialElementsStickyGalleryData\n          ...PrismicSpecialElementsSplitImageHeroData\n          ...PrismicSpecialElementsPromotionalStripData\n\n          # Load additional page data.\n          data {\n            title {\n              text\n            }\n            description\n            tags\n            color_background\n            color_primary\n            color_secondary\n            color_tertiary\n            cover_image {\n              dimensions {\n                width\n                height\n              }\n              url\n              localFile {\n                id\n                childImageSharp {\n                  fluid(maxWidth: 1200) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// ////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  src,\n  AltText,\n  className,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={src}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    AltText={AltText}\n    className={className ? className : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle Flex={Flex}>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: space-between;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// HeroStrip Component:\n// The HeroStrip component, typically used in Hero components.\n// Example: https://www.dropbox.com/s/fkq5n663abznqpt/Screenshot%202019-04-19%2018.20.13.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\n\n// Styles\nimport HeroStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst HeroStrip = ({ Items, BgColor, TextColor }) => (\n  <HeroStripStyle BgColor={BgColor} TextColor={TextColor}>\n    <HeroStripStyle.Inner>\n      {Items.map((Item, index) => {\n        if (Item.Destination) {\n          return (\n            <div key={index} className=\"hero-strip-item focus\">\n              <Link to={Item.Destination}>\n                <span>{Item.Caption}</span>\n                <span>{Item.Label}</span>\n              </Link>\n            </div>\n          );\n        } else {\n          return (\n            <div key={index} className=\"hero-strip-item\">\n              <div>\n                <span>{Item.Caption}</span>\n                <span>{Item.Label}</span>\n              </div>\n            </div>\n          );\n        }\n      })}\n    </HeroStripStyle.Inner>\n  </HeroStripStyle>\n);\n\nexport default HeroStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// StickyScrollSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst StickyScrollSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nStickyScrollSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nStickyScrollSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n\n  .block {\n    .gallery-img {\n      padding: 0 0 calc(${Root.Size} / 2) 0;\n    }\n\n    &.sticky-block {\n      .block-content {\n        position: sticky;\n        top: calc(${Root.Nav.Size} + ${Root.Size});\n        padding-bottom: ${Root.Size};\n      }\n    }\n  }\n\n  .txt-caption {\n    font-size: 1.4rem;\n    font-weight: bold;\n    color: ${Theme.Color.Slate};\n    display: block;\n    margin-bottom: calc(${Theme.Base.Size.Sm});\n  }\n`;\n\nexport default StickyScrollSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// StickyScrollSection Component:\n// Desired outcome: https://www.dropbox.com/s/brll80qg306ywmk/Screenshot%202019-05-06%2015.01.12.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\nimport Block from 'components/library/Block';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport StickyScrollSectionStyle from './styles.scss';\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Enable Overflows\nexport const ReleaseOverflow = createGlobalStyle`\n  html, body {\n    overflow: visible;\n  }\n\n  .wrapper {\n    overflow: visible;\n  }\n`;\n\n// Render Element\nconst StickyScrollSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  Content,\n  Gallery,\n  GalleryQueries,\n  Gutter,\n  Flex,\n  Button,\n}) => (\n  <StickyScrollSectionStyle\n    Style={Style}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    <ReleaseOverflow />\n    <StickyScrollSectionStyle.Inner Gutter={Gutter}>\n      <StickyScrollSectionStyle.Content Flex={Flex} className=\"sticky-section\">\n        <Block Padding={[0, 1, 0, 1]} className=\"sticky-block\">\n          <span className=\"txt-caption\">{Content.Subheadline}</span>\n          <h2>{Content.Headline}</h2>\n          <p className=\"p-md\">{Content.Body}</p>\n\n          {/* Check if a Btn exists, display if so. */}\n          {Button ? (\n            <Btn\n              Label={Button.Label}\n              BgColor={Button.BgColor}\n              TextColor={Button.TextColor}\n              Destination={Button.Destination}\n              IconPosition=\"left\"\n              IconClass={Button.IconClass ? Button.IconClass : null}\n              IconFas\n            />\n          ) : null}\n        </Block>\n        <Block Padding={[0, 1, 0, 1]}>\n          {Gallery\n            ? Gallery.map((Img, index) => {\n                return (\n                  <div key=\"index\" className=\"gallery-img\">\n                    <ImgMatch src={Img.Src} AltText={Img.Alt} />\n                  </div>\n                );\n              })\n            : null}\n          {GalleryQueries\n            ? GalleryQueries.map((query, index) => {\n                return (\n                  <div key=\"index\" className=\"gallery-img\">\n                    <ImgQuery src={query.Fluid} AltText={query.Alt} />\n                  </div>\n                );\n              })\n            : null}\n        </Block>\n      </StickyScrollSectionStyle.Content>\n    </StickyScrollSectionStyle.Inner>\n  </StickyScrollSectionStyle>\n);\n\nexport default StickyScrollSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}