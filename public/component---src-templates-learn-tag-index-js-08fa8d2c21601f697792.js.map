{"version":3,"sources":["webpack:///./src/templates/Learn/Tag/layout.js","webpack:///./src/templates/Learn/Tag/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/templates/Learn/Transformer/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./src/templates/Question/Transformer/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js"],"names":["SlideSectionWithData","props","_React$Component","call","this","render","BaseUrl","BgColor","Data","PageTheme","Color","Background","TextColor","Secondary","Tags","CategorySlug","Slug","Widgets","map","Tag","index","Flex","WidgetContent","Destination","Style","Meta","Generic","BgImage","Subhead","Headline","Name","IconColor","IconName","Icon","TintColor","TintOpacity","IconSize","Theme","Nightsky","White","react_default","a","createElement","SlideSection","SectionSize","Header","Black","SliderSettings","slidesToShow","slidesToScroll","autoplay","arrows","React","Component","LearnSection","_ref","Category","Block","maxWidth","Padding","layout_SlideSectionWithData","PageWrapper","_ref2","children","TagSlug","TagData","CategoryTheme","Location","Layout","PrimaryColor","Primary","SecondaryColor","TertiaryColor","Tertiary","SubLevelPage","SimpleHero","Breadcrumb","Crumbs","Label","className","Btn","IconClass","IconPosition","SocialStrip","Margin","QuestionFooter","TemplateLayout","_ref3","CategoryData","CategoryName","layout_PageWrapper","QuestionListings","TagFilter","CategoryFilter","Gutter","Snow","layout_LearnSection","LearnTagTemplate","_ref4","layout_TemplateLayout","LearnTagPage","pageContext","PageContextTagSlug","PageContextTagName","TagName","TransformedCategories","categoryDataTransformer","data","allPrismicQuestionCategory","edges","Fragment","node","tag","includes","key","i","layout","location","href","tagQuery","BlockStyle","styled","div","_templateObject","flex","AlignItems","css","_templateObject2","JustifyContent","BgTint","Width","Base","Grid","SiteWidth","Root","Size","BgMatch","BgQuery","BgAlt","styles_scss","ImgMatch","src","AltText","ImgQuery","SlideSectionStyle","Media","Md","Inner","SectionInnerStyle","Left","Right","Content","SectionContentStyle","_templateObject3","SectionHeader","_templateObject4","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","PrevArrow","SectionSlider","_settings","_this","ArrowColor","useTransform","infinite","settings","dots","speed","autoplaySpeed","draggable","nextArrow","prevArrow","responsive","breakpoint","Helmet","rel","type","lib_default","ref","h","slider","ViewAll","SlideSection_styles_scss","IconclassName","SlideSection_SectionSlider","TextColr","Widget","Container","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","match","e","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","WrapperLock","createGlobalStyle","WrapperRelease","WidgetSection","Slider","WidgetSection_styles_scss","d","__webpack_exports__","HeroInner","HeroContent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SidebarWidgetStyle","FadeIn","Radius","SidebarWidget","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","SimpleSectionStyle","FluidHeight","SimpleSection","SimpleSection_styles_scss","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","categories","category","id","name","text","icon","headline","uid","color_background","color_primary","color_secondary","color_tertiary","tags","tag_name","tag_icon","tag_slug","SimpleHeroStyle","Tint","TintBorder","Hero","BreadCrumb","Link","Bread","crumb","QuestionListingsStyles","QuestionCards","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","length","query","categoryMap","questionsMap","questionDataTransformer","allPrismicQuestion","Question","QuestionCategory","filteredCategory","slug","title","coverImage","BgImageAltText","toLowerCase","Whitee","_3828252607","QuestionListings_styles_scss","QuestionListings_QuestionCards","SocialStripStyle","span","target","question","Array","isArray","questionPost","date","author","document","cover_image","localFile","childImageSharp","fluid","shortAnswer","short_answer","longAnswer","long_answer","HeroStripStyle","ViewWidthFontSize","BrowseCategories","categoryWidgets","widgetArray","viewAll","unshift","Slate","_1344697354","HideCategories","QuestionFooter_BrowseCategories"],"mappings":"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","file":"component---src-templates-learn-tag-index-js-08fa8d2c21601f697792.js","sourcesContent":["// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// This component is to transform the\n// QuestionCategories.js  data into usable stuff for our\n// Widget components and SlideSections.\nclass SlideSectionWithData extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // Get Root Directory Name\n    const BaseUrl = this.props.BaseUrl;\n\n    // Get our Category's themeing.\n    const BgColor = this.props.Data.PageTheme.Color.Background;\n    const TextColor = this.props.Data.PageTheme.Color.Secondary;\n\n    // Isolate Our Tags\n    const Tags = this.props.Data.Tags;\n\n    // Get our Category's Slug\n    const CategorySlug = this.props.Data.Slug;\n\n    // Create empty Widgets array for us to loop through\n    // later on.\n    const Widgets = [];\n    let WidgetCount = 0; // This is to add an 'All' Widget.\n\n    // Map our tags and create a new Widget object for\n    // each tag for us to loop and display a Widget for in\n    // the data structure that WidgetContainer likes.\n    Tags.map((Tag, index) => {\n      Widgets[index + 1] = {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: BaseUrl + '/' + CategorySlug + '/' + Tag.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: BgColor,\n                BgImage: '',\n                Subhead: '',\n                Headline: Tag.Name,\n                TextColor: TextColor,\n                IconColor: TextColor,\n                IconName: Tag.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    Widgets[0] = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: BaseUrl + '/' + CategorySlug + '/',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All ' + this.props.Data.Name + ' Questions',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: this.props.Data.Icon, // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    return (\n      <SlideSection\n        Widgets={Widgets}\n        SectionSize={3}\n        Header={'More from ' + this.props.Data.Name}\n        Theme={{\n          TextColor: Theme.Color.Black,\n          BgColor: 'none',\n        }}\n        SliderSettings={{\n          slidesToShow: 4,\n          slidesToScroll: 2,\n          autoplay: false,\n          arrows: true,\n        }}\n      />\n    );\n  }\n}\n\n// This component is to differentiate page content / SlideSections\n// depending on what 'Filter' is supplied.\nconst LearnSection = ({ BaseUrl, Category }) => {\n  return (\n    <Block maxWidth=\"100%\" Padding={[0, 0, 2, 0]}>\n      <SlideSectionWithData BaseUrl={BaseUrl} Data={Category} />\n    </Block>\n  );\n};\n\n// PageWrapper component for page theming.\nconst PageWrapper = ({\n  children,\n  TagSlug,\n  TagData,\n  CategorySlug,\n  Category,\n  CategoryTheme,\n  Location,\n}) => {\n  return (\n    <Layout\n      BgColor={CategoryTheme.Color.Background}\n      PrimaryColor={CategoryTheme.Color.Primary}\n      SecondaryColor={CategoryTheme.Color.Secondary}\n      TertiaryColor={CategoryTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={CategoryTheme.Color.Background}\n        PrimaryColor={CategoryTheme.Color.Primary}\n        SecondaryColor={CategoryTheme.Color.Secondary}\n        TertiaryColor={CategoryTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        <SimpleHero TextColor={CategoryTheme.Color.Secondary}>\n          <Block maxWidth={0.75}>\n            <Bread\n              Crumbs={[\n                {\n                  Destination: 'learn/' + CategorySlug,\n                  Label: Category.Name + ' Cannabis Questions',\n                },\n                {\n                  Destination: 'learn/' + CategorySlug + '/' + TagSlug,\n                  Label: TagData.Name,\n                },\n              ]}\n              TextColor={CategoryTheme.Color.Secondary}\n            />\n            <h1 className=\"h2\">\n              Learn about Cannabis, {Category.Name}, & {TagData.Name}.{' '}\n            </h1>\n            <Btn\n              IconClass=\"intercom\"\n              Label=\"Ask a question\"\n              BgColor={CategoryTheme.Color.Tertiary}\n              TextColor={CategoryTheme.Color.Primary}\n              Destination=\"/learn/all\"\n              IconPosition=\"left\"\n            />\n            <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={CategoryTheme.Color.Secondary}\n            />\n          </Block>\n        </SimpleHero>\n        {/* Begin page content. */}\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.White}\n        >\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n\n        {/* The Question / Category / Tag footer. */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.White}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          <QuestionFooter />\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* ///////////// */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({\n  TagSlug,\n  TagData,\n  CategorySlug,\n  CategoryData,\n  Location,\n  CategoryName,\n}) => {\n  return (\n    <PageWrapper\n      CategoryTheme={CategoryData.PageTheme}\n      Category={CategoryData}\n      CategorySlug={CategorySlug}\n      TagSlug={TagSlug}\n      TagData={TagData}\n      Location={Location}\n    >\n      <QuestionListings\n        CategorySlug={CategorySlug}\n        TagSlug={TagData.Slug}\n        TagFilter={TagData.Name}\n        CategoryFilter={CategoryName}\n        Gutter={[1, 1, 1, 1]}\n        BgColor={Theme.Color.Snow}\n      />\n      <LearnSection BaseUrl=\"/learn\" Category={CategoryData} />\n    </PageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LearnTagTemplate = ({\n  TagSlug,\n  TagData,\n  CategorySlug,\n  CategoryData,\n  CategoryName,\n  Location,\n}) => {\n  return (\n    <TemplateLayout\n      TagSlug={TagSlug}\n      TagData={TagData}\n      CategoryName={CategoryName}\n      CategorySlug={CategorySlug}\n      CategoryData={CategoryData}\n      Location={Location}\n    />\n  );\n};\n\nexport default LearnTagTemplate;\n","// learn/all.js:\n// This is the overview of all Learn items.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LearnTagTemplate from './layout';\n\n// Transformers\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LearnTagPage = props => {\n  let CategorySlug = props.pageContext.CategorySlug;\n  let PageContextTagSlug = props.pageContext.TagSlug\n    ? props.pageContext.TagSlug\n    : 'more';\n  let PageContextTagName = props.pageContext.TagName\n    ? props.pageContext.TagName\n    : 'More';\n  let TransformedCategories = categoryDataTransformer(\n    props.data.allPrismicQuestionCategory.edges\n  );\n\n  return (\n    <>\n      {TransformedCategories.map((Category, index) => {\n        // If Category's slug matches this page's context CategorySlug that\n        // we specified in gatsby-node.js:\n        if (Category.node.Slug == CategorySlug) {\n          // Define our correct Data Category Object\n          let CategoryData = Category.node;\n          let CategoryName = Category.node.Name;\n          let CategoryTagList = Category.node.Tags.map((tag, index) => {\n            return tag.Slug;\n          });\n\n          // Let's first see if the list of Category's Featured tags actually\n          // contains the PageContextTagSlug passed from gatsby-node.js\n          if (CategoryTagList.includes(PageContextTagSlug)) {\n            // Then let's map and match that Category's tag information to\n            // assign the right naming and icon for the tag.\n            return (\n              <div key={index}>\n                {Category.node.Tags.map((Tag, i) => {\n                  // If the tag slug matches this page's context PageContextTagSlug\n                  // that we specified in gatsby-node.js.\n                  if (Tag.Slug == PageContextTagSlug) {\n                    // Define our correct Data Tag Object\n                    let TagData = Tag;\n\n                    return (\n                      <LearnTagTemplate\n                        key={i}\n                        TagSlug={Tag.Slug}\n                        TagData={TagData}\n                        CategoryName={CategoryName}\n                        CategorySlug={CategorySlug}\n                        CategoryData={CategoryData}\n                        Location={props.location.href}\n                      />\n                    );\n                  }\n                })}\n              </div>\n            );\n          }\n          // If it isn't in the featured tags, let's make a Tag array based off\n          // the data we've got.\n          else {\n            let TagData = {\n              Name: PageContextTagName,\n              Icon: CategoryData.Icon,\n              Slug: PageContextTagSlug,\n            };\n\n            return (\n              <LearnTagTemplate\n                TagSlug={PageContextTagSlug}\n                TagData={TagData}\n                CategoryName={CategoryName}\n                CategorySlug={CategorySlug}\n                CategoryData={CategoryData}\n                Location={props.location.href}\n              />\n            );\n          }\n        }\n      })}\n    </>\n  );\n};\n\nexport default LearnTagPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const tagQuery = graphql`\n  query {\n    allPrismicQuestionCategory {\n      edges {\n        node {\n          id\n          uid\n          data {\n            name {\n              text\n            }\n            icon\n            headline\n            color_background\n            color_primary\n            color_secondary\n            color_tertiary\n            tags {\n              tag_name\n              tag_slug\n              tag_icon\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: calc(${Root.Size} / 2);\n    margin-bottom: calc(${Root.Size} / 2);\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n        top: calc((${Root.Size} * 1.8) * -1);\n        width: calc(${Root.Size} * 1.5);\n        height: calc(${Root.Size} * 1.5);\n      }\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n\n        @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n          right: calc((${Root.Size} * 1.5) + (${Root.Size} * 0.25));\n        }\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n        bottom: calc((${Root.Size} * .3) * -1);\n      }\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      padding: calc(${Root.Size} / 3) calc(${Root.Size} / 4);\n      height: ${props =>\n        props.SectionSize\n          ? 'calc((' + Root.Size + '* 3) * ' + props.SectionSize + ')'\n          : 'calc((' + Root.Size + '* 3) * 3)'};\n    }\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Nightsky)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: calc(${Root.Size} / 2);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const useTransform = this.props.SliderSettings.useTransform\n      ? this.props.SliderSettings.useTransform\n      : true;\n    const infinite = this.props.SliderSettings.infinite\n      ? this.props.SliderSettings.infinite\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: infinite,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n      useTransform: useTransform,\n      responsive: [\n        {\n          breakpoint: Base.Media.Width.Md + 'px',\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle className=\"slide-section\">\n    <SlideSectionStyle.Inner Gutter={Gutter} className=\"slide-section-inner\">\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            {Header ? <h2>{Header}</h2> : null}\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-left: calc(${Root.Grid.Gutter.Left} + ${Root.Size});\n    padding-right: calc(${Root.Grid.Gutter.Right} + ${Root.Size});\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: ${props =>\n    props.JustifyContent ? props.JustifyContent : 'flex-start'};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible !important; \n      overflow: visible;\n      \n      .wrapper {\n        overflow-y: hidden;\n      }\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden; \n      overflow-y: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: hidden;\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      min-height: 150px;\n\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n  JustifyContent,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n    className=\"hero-inner\"\n  >\n    <HeroContentStyle\n      className=\"hero-content\"\n      JustifyContent={JustifyContent}\n      Flex={Flex}\n    >\n      {children}\n    </HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: calc(${Root.Size} / 5);\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: calc(${Root.Size} / 5);\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: calc(${Root.Size} / 5);\n    top: calc(${Root.Size} / 5);\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: calc(${Root.Size} / 5);\n  top: calc(${Root.Size} / 5);\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Root.Grid.Gutter.Right};\n  width: ${Root.Grid.Gutter.Left};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    display: none;\n  }\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      {/* <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      /> */}\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n\n  .post-details {\n    opacity: 0.4;\n    display: block;\n    margin-bottom: calc(${Root.Size} / 4);\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    padding-bottom: calc(${Root.Nav.Size} + ${Root.Size});\n  }\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n    .img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n\n  @media (max-width: calc(${Theme.Base.Media.Width.Md})) {\n    padding-left: ${Root.Grid.Gutter.Left};\n    padding-right: ${Root.Grid.Gutter.Right};\n  }\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  /* -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000; */\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  /* column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    column-width: 100%;\n    column-count: 1;\n  } */\n\n\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    flex: 30%;\n    margin: calc(${Root.Size} / 5);\n    width: 30%;\n    display: flex;\n    color: ${Theme.Color.White};\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n\n    a, i {\n      color: ${Theme.Color.White};\n    }\n    \n    svg {\n      fill: ${Theme.Color.White};\n    }\n  }\n\n  @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n    .widget-content {\n      flex: auto;\n      margin: calc(${Root.Size} / 5) 0;\n      width: 100%;\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { node } from 'prop-types';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Categories Map\nexport const tagDataTransformer = tags => {\n  if (tags) {\n    let tagsMap = tags.map((tag, index) => {\n      return {\n        Name: tag.tag_name,\n        Icon: tag.tag_icon,\n        Slug: tag.tag_slug,\n      };\n    });\n\n    return tagsMap;\n  } else {\n    return null;\n  }\n};\n\n// Function to create our Categories Map\nexport const categoryDataTransformer = categories => {\n  if (categories) {\n    let categoriesMap = categories.map((category, index) => {\n      return {\n        node: {\n          id: category.node.id,\n          Name: category.node.data.name ? category.node.data.name.text : '',\n          Icon: category.node.data.icon,\n          Headline: category.node.data.headline,\n          Slug: category.node.uid,\n          Breadcrumb: {\n            Destination: '/learn/all/',\n            Label: 'All Questions',\n          },\n          PageTheme: {\n            Color: {\n              Background: category.node.data.color_background,\n              Primary: category.node.data.color_primary,\n              Secondary: category.node.data.color_secondary,\n              Tertiary: category.node.data.color_tertiary,\n            },\n          },\n          Tags: tagDataTransformer(category.node.data.tags),\n        },\n      };\n    });\n\n    return categoriesMap;\n  } else {\n    return 'null';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  JustifyContent,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'simple-hero tint' : 'simple-hero'}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      JustifyContent={JustifyContent}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: calc((${Root.Size} / 4) * -1);\n      transform: translateY(-50%);\n      width: 2px;\n      height: 2px;\n      border-radius: 50%;\n      background-color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    svg {\n      transform: rotate(180deg) translateX(0%);\n      transform-origin: center center;\n      width: 1rem;\n      height: 1rem;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n      transition: all 0.25s ease;\n      fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    }\n\n    &:hover {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      text-decoration: none;\n      svg {\n        transform: rotate(180deg) translateX(50%);\n      }\n    }\n  }\n`;\n\nBreadCrumb.Label = styled(Link)`\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc((${Root.Size} / 4) * 1.75);\n  position: relative;\n  text-transform: capitalize;\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle TextColor={TextColor}>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label to={crumb.Destination} key={index}>\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SpecialsListings> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const QuestionListingsStyles = styled.div`\n  appearance: none;\n`;\n\nQuestionListingsStyles.Header = styled.div`\n  padding-left: ${Root.Grid.Gutter.Left};\n  padding-right: ${Root.Grid.Gutter.Right};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Nightsky)};\n`;\n\nexport default QuestionListingsStyles;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Transformers\nimport { questionDataTransformer } from 'templates/Question/Transformer';\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Styles\nimport QuestionListingsStyles from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Slug === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory.length > 0) {\n      return matchedCategory[0].node;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          ## Prismic Sourcing\n\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n\n          allPrismicQuestion {\n            edges {\n              node {\n                id\n                uid\n                tags\n                data {\n                  title {\n                    text\n                  }\n                  short_answer\n                  long_answer\n                  date\n                  author {\n                    id\n                    document {\n                      id\n                      ... on PrismicPerson {\n                        data {\n                          name {\n                            html\n                            text\n                          }\n                        }\n                      }\n                    }\n                  }\n                  category {\n                    uid\n                  }\n                  cover_image {\n                    alt\n                    localFile {\n                      id\n                      childImageSharp {\n                        fluid(maxWidth: 1200) {\n                          ...GatsbyImageSharpFluid\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        const questionsMap = questionDataTransformer(\n          data.allPrismicQuestion.edges\n        );\n\n        // console.log('categoryMap');\n        // console.log(categoryMap);\n\n        // console.log('questionsMap');\n        // console.log(questionsMap);\n\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        return (\n          <>\n            {questionsMap.map((Question, index) => {\n              let QuestionCategory = Question.node.category\n                ? Question.node.category\n                : 'none';\n\n              // console.log('QuestionCategory');\n              // console.log(QuestionCategory);\n\n              // return <h1>Masonry</h1>;\n              // If the Question's Category is the same as the Filter supplied:\n              if (QuestionCategory == CategoryFilter) {\n                // If there isn't a TagFilter applied:\n                if (TagFilter == 'all') {\n                  // Use our helper function above to find the right Category's Data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    CategoryFilter\n                  );\n\n                  return (\n                    <DefaultWidget\n                      BgColor={filteredCategory.PageTheme.Color.Background}\n                      TextColor={filteredCategory.PageTheme.Color.Primary}\n                      Destination={\n                        '/learn' + QuestionSlugString + '/' + Question.node.slug\n                      }\n                      Subhead={filteredCategory.Name}\n                      Headline={Question.node.title}\n                      IconName={filteredCategory.Icon}\n                      IconColor={filteredCategory.PageTheme.Color.Primary}\n                      BgQuery={\n                        Question.node.coverImage\n                          ? Question.node.coverImage\n                          : false\n                      }\n                      BgImageAltText={\n                        QuestionCategory +\n                        ' & Cannabis | ' +\n                        Question.node.title\n                      }\n                      TintColor={Theme.Color.Black}\n                      TintOpacity={0.6}\n                      key={index}\n                    />\n                  );\n                } else {\n                  // If there is a TagFilter applied, check the Tags Array\n                  // to see if it includes our filter:\n                  if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                    // Use our helper function above to find the right Category's Data.\n                    let filteredCategory = categoryMatch(\n                      categoryMap,\n                      CategoryFilter\n                    );\n\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn' +\n                          QuestionSlugString +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    // If it doesn't match anything, return false. And cry.\n                    return null;\n                  }\n                }\n              } else {\n                // If we want to display all the Questions, let's make their\n                // slug their root category.\n                if (CategoryFilter == 'all') {\n                  // Use our helper function to match the Category data.\n                  let filteredCategory = categoryMatch(\n                    categoryMap,\n                    QuestionCategory\n                  );\n\n                  // console.log('all filteredCategory');\n                  // console.log(filteredCategory);\n                  // console.log('Question');\n                  // console.log(Question);\n\n                  if (filteredCategory) {\n                    return (\n                      <DefaultWidget\n                        BgColor={filteredCategory.PageTheme.Color.Background}\n                        TextColor={filteredCategory.PageTheme.Color.Primary}\n                        Destination={\n                          '/learn/' +\n                          filteredCategory.Slug +\n                          '/' +\n                          Question.node.slug\n                        }\n                        Subhead={filteredCategory.Name}\n                        Headline={Question.node.title}\n                        IconName={filteredCategory.Icon}\n                        IconColor={filteredCategory.PageTheme.Color.Primary}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={\n                          QuestionCategory +\n                          ' & Cannabis | ' +\n                          Question.node.title\n                        }\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  } else {\n                    return (\n                      <DefaultWidget\n                        BgColor={Theme.Color.Black}\n                        TextColor={Theme.Color.Whitee}\n                        Destination={'/learn/' + Question.node.slug}\n                        Subhead=\"Cannabis Questions\"\n                        Headline={Question.node.title}\n                        IconName=\"question\"\n                        IconColor={Theme.Color.White}\n                        BgQuery={\n                          Question.node.coverImage\n                            ? Question.node.coverImage\n                            : false\n                        }\n                        BgImageAltText={'Cannabis Q&A | ' + Question.node.title}\n                        TintColor={Theme.Color.Black}\n                        TintOpacity={0.6}\n                        key={index}\n                      />\n                    );\n                  }\n                } else {\n                  // If nothing is supplied, don't return anything. Also, cry.\n                  return null;\n                }\n              }\n            })}\n          </>\n        );\n      }}\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  TextColor,\n  CategoryFilter,\n  TagFilter,\n  Header,\n}) => (\n  <QuestionListingsStyles>\n    {Header ? (\n      <QuestionListingsStyles.Header TextColor={TextColor}>\n        <h2>{Header}</h2>\n      </QuestionListingsStyles.Header>\n    ) : null}\n\n    <MasonrySection\n      Columns={3}\n      ColumnGap={0.25}\n      BgColor={BgColor ? BgColor : Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n    >\n      {/* If the CategoryFilter is supplied */}\n      {/* {console.log('CategoryFilter Passed:')}\n    {console.log(CategoryFilter)} */}\n\n      {CategoryFilter ? (\n        <QuestionCards\n          CategorySlug={CategorySlug}\n          TagSlug={TagSlug ? TagSlug : null}\n          CategoryFilter={CategoryFilter}\n          TagFilter={TagFilter ? TagFilter : 'all'}\n          AllCategories={AllCategories}\n        />\n      ) : (\n        // If it isn't, revert to 'all'\n        <QuestionCards\n          CategorySlug={CategorySlug}\n          TagSlug={TagSlug ? TagSlug : null}\n          CategoryFilter=\"all\"\n          TagFilter={TagFilter}\n          AllCategories={AllCategories}\n        />\n      )}\n    </MasonrySection>\n  </QuestionListingsStyles>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Transformer:\n// This is for taking Prismic data and transforming it into something that\n// this component would like to handle. The Transformer is typically used\n// in /template/ pages where a GraphQL query from Prismic (or any data) source\n// is involved.\n//////////////////////////////////////////////////////////////////////\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Function to create our Columns Map\nexport const questionDataTransformer = question => {\n  // Check if it's empty first:\n  if (question) {\n    // If the question data is an array:\n    if (Array.isArray(question) == true) {\n      let questionMap = question.map((questionPost, index) => {\n        return {\n          node: {\n            id: questionPost.node.id ? questionPost.node.id : '',\n            slug: questionPost.node.uid ? questionPost.node.uid : '',\n            date: questionPost.node.data.date\n              ? questionPost.node.data.date\n              : '',\n            author: questionPost.node.data.author\n              ? questionPost.node.data.author.document[0].data.name.text\n              : 'Sierra Well',\n            coverImage: questionPost.node.data.cover_image.localFile\n              ? questionPost.node.data.cover_image.localFile.childImageSharp\n                  .fluid\n              : false,\n            title: questionPost.node.data.title.text\n              ? questionPost.node.data.title.text\n              : '',\n            category: questionPost.node.data.category\n              ? questionPost.node.data.category.uid\n              : '',\n            tags: questionPost.node.tags ? questionPost.node.tags : '',\n            shortAnswer: questionPost.node.data.short_answer\n              ? questionPost.node.data.short_answer\n              : '',\n            longAnswer: questionPost.node.data.long_answer\n              ? questionPost.node.data.long_answer\n              : '',\n          },\n        };\n        // return console.log(questionPost)\n      });\n\n      return questionMap;\n    }\n\n    // If it's not an array:\n    else {\n      let questionMap = {\n        id: question.id ? question.id : '',\n        slug: question.uid ? question.uid : '',\n        date: question.data.date ? question.data.date : '',\n        author: question.data.author\n          ? question.data.author.document[0].data.name.text\n          : 'Sierra Well',\n        coverImage: question.data.cover_image.localFile\n          ? question.data.cover_image.localFile.childImageSharp.fluid\n          : false,\n        title: question.data.title.text ? question.data.title.text : '',\n        category: question.data.category ? question.data.category.uid : '',\n        tags: question.tags ? question.tags : '',\n        shortAnswer: question.data.short_answer\n          ? question.data.short_answer\n          : '',\n        longAnswer: question.data.long_answer ? question.data.long_answer : '',\n      };\n\n      return questionMap;\n    }\n  }\n\n  // If the question data doesn't exist\n  else {\n    return 'No data supplied.';\n  }\n};\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Transformers\nimport { categoryDataTransformer } from 'templates/Learn/Transformer';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allPrismicQuestionCategory {\n            edges {\n              node {\n                id\n                uid\n                data {\n                  name {\n                    text\n                  }\n                  icon\n                  headline\n                  color_background\n                  color_primary\n                  color_secondary\n                  color_tertiary\n                  tags {\n                    tag_name\n                    tag_slug\n                    tag_icon\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const categoryMap = categoryDataTransformer(\n          data.allPrismicQuestionCategory.edges\n        );\n\n        return (\n          <SlideSection\n            Widgets={categoryWidgets(categoryMap)}\n            SectionSize={6}\n            Header=\"Browse Categories\"\n            Gutter={[0, 1, 1, 1]}\n            Theme={{\n              TextColor: Theme.Color.Slate,\n              BgColor: 'none',\n            }}\n            SliderSettings={{\n              slidesToShow: 4,\n              slidesToScroll: 1,\n              autoplay: false,\n              arrows: true,\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}