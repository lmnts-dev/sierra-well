{"version":3,"sources":["webpack:///./src/templates/Location/Landing/layout.js","webpack:///./src/templates/Location/Landing/index.js","webpack:///./src/components/library/Block/styles.scss.js","webpack:///./src/components/library/Block/index.js","webpack:///./src/components/library/Section/SlideSection/styles.scss.js","webpack:///./src/components/library/Section/SlideSection/index.js","webpack:///./src/components/core/WrapperControl/index.js","webpack:///./src/components/core/ImgQuery/index.js","webpack:///./src/components/library/Section/SimpleSection/styles.scss.js","webpack:///./src/components/library/Section/SimpleSection/index.js","webpack:///./src/components/library/Hero/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/styles.scss.js","webpack:///./src/components/library/Section/WidgetSection/index.js","webpack:///./src/components/library/Widgets/Sidebar/Default/styles.scss.js","webpack:///./src/components/library/Widgets/Sidebar/Default/index.js","webpack:///./src/components/Library/Sidebar/styles.scss.js","webpack:///./src/components/Library/Sidebar/index.js","webpack:///./src/templates/SubLevelPage/styles.scss.js","webpack:///./src/templates/SubLevelPage/index.js","webpack:///./src/components/library/Hero/index.js","webpack:///./src/components/library/Hero/SimpleHero/styles.scss.js","webpack:///./src/components/library/Hero/SimpleHero/index.js","webpack:///./src/components/library/Breadcrumb/styles.scss.js","webpack:///./src/components/library/Breadcrumb/index.js","webpack:///./src/components/library/Section/MasonrySection/styles.scss.js","webpack:///./src/components/library/Section/MasonrySection/index.js","webpack:///./src/components/library/QuestionListings/styles.scss.js","webpack:///./src/components/library/QuestionListings/index.js","webpack:///./src/components/library/Section/index.js","webpack:///./src/components/library/QuestionFooter/styles.scss.js","webpack:///./src/components/library/QuestionFooter/index.js","webpack:///./src/components/library/SocialStrip/styles.scss.js","webpack:///./src/components/library/SocialStrip/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/helpers/hexToRGB.js","webpack:///./src/components/library/SimpleList/styles.scss.js","webpack:///./src/components/library/SimpleList/index.js","webpack:///./src/components/library/SuggestionList/styles.scss.js","webpack:///./src/components/library/SuggestionList/index.js","webpack:///./src/components/library/AwardBadge/styles.scss.js","webpack:///./src/components/library/AwardBadge/index.js","webpack:///./src/components/library/AwardHours/styles.scss.js","webpack:///./src/components/library/AwardHours/index.js","webpack:///./src/components/library/Section/SplitSection/styles.scss.js","webpack:///./src/components/library/Section/SplitSection/index.js","webpack:///./src/components/library/PageTabs/styles.scss.js","webpack:///./src/components/library/PageTabs/index.js","webpack:///./src/templates/Location/Components/LocationPageWrapper/index.js","webpack:///./src/components/library/Section/StickyScrollSection/styles.scss.js","webpack:///./src/components/library/Section/StickyScrollSection/index.js"],"names":["TemplateLayout","_ref","LocationData","Location","Headline","SummaryHeadlineString","name","SummaryHeadline","about","summary","headline","react_default","a","createElement","LocationPageWrapper","SimpleSection","BgColor","Theme","Color","Snow","BgMatch","BgAlt","FluidHeight","Gutter","StickyScrollSection","White","TextColor","Nightsky","Content","Subheadline","Body","body","Gallery","gallery","SplitSection","Flex","Block","Padding","Width","Btn","Label","Destination","Primary","Style","WidgetSection","Widgets","WidgetContent","Meta","Generic","BgImage","Subhead","IconColor","IconName","TintColor","TintOpacity","IconSize","Tahoe","Mint","LocationLandingTemplate","_ref2","layout_TemplateLayout","__webpack_require__","d","__webpack_exports__","query","LocationLandingPage","props","layout","data","allLocationsJson","edges","node","location","BlockStyle","styled","div","_templateObject","flex","AlignItems","css","_templateObject2","JustifyContent","BgTint","maxWidth","Base","Grid","SiteWidth","Root","Size","children","className","BgQuery","styles_scss","ImgMatch","src","AltText","ImgQuery","SlideSectionStyle","Sm","Black","Inner","SectionInnerStyle","Left","SectionContentStyle","_templateObject3","SectionSize","SectionHeader","_templateObject4","_templateObject5","Transition","Duration","CssEase","CallToAction","_templateObject6","NextArrow","style","onClick","Object","assign","onKeyPress","role","tabIndex","Icons","Name","PrevArrow","SectionSlider","_React$Component","call","this","render","_settings","_this","slidesToShow","ArrowColor","SliderSettings","slidesToScroll","autoplay","arrows","settings","dots","speed","autoplaySpeed","infinite","draggable","nextArrow","prevArrow","Fragment","Helmet","rel","type","href","lib_default","ref","h","slider","React","Component","SlideSection","Header","Icon","ViewAll","SlideSection_styles_scss","IconclassName","SlideSection_SectionSlider","TextColr","map","Widget","index","Container","key","WrapperLock","createGlobalStyle","Media","Md","WrapperRelease","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1__","gatsby_image_withIEPolyfill__WEBPACK_IMPORTED_MODULE_1___default","objectFit","objectPosition","fluid","fadeIn","SimpleSectionStyle","Right","SimpleSection_styles_scss","HeroInnerStyle","imgRight","imgLeft","imgTop","imgBottom","imgWidth","HeroContentStyle","FullWidth","Slider","WidgetSection_styles_scss","SidebarWidgetStyle","FadeIn","Radius","i","SidebarWidget","gatsby_browser_entry","to","SidebarStyle","styles_scss_templateObject","Nav","styles_scss_templateObject2","Sidebar","PrimaryColor","SecondaryColor","TertiaryColor","Sidebar_styles_scss","Default","SubLevelPageStyle","SubLevelPage_styles_scss_templateObject","Background","SubLevelPage_styles_scss_templateObject2","styles_scss_templateObject3","SubLevelPage_SubLevelPage","SubLevelPage_SubLevelPageContent","SubLevelPage","SubLevelPage_styles_scss","WrapperControl","Library_Sidebar","SubLevelPageContent","ItemProp","itemProp","HeroInner","HeroContent","_styles_scss__WEBPACK_IMPORTED_MODULE_2__","SimpleHeroStyle","Tint","TintBorder","SimpleHero","Hero","BreadCrumb","Link","Bread","Crumbs","crumb","MasonrySectionStyle","Columns","ColumnGap","MasonrySection","PaddingY","MasonrySection_styles_scss","HeroStripStyle","ViewWidthFontSize","QuestionCards","CategoryFilter","TagFilter","CategorySlug","TagSlug","AllCategories","QuestionSlugString","categoryMatch","categoryData","categoryFilter","matchedCategory","filter","category","allQuestionsJson","Question","filteredCategory","allQuestionCategoriesJson","PageTheme","slug","title","BgImageFile","coverImage","BgImageAltText","tags","includes","toLowerCase","Slug","_234893462","QuestionListings","QuestionListings_QuestionCards","BrowseCategories","categoryWidgets","widgetArray","viewAll","unshift","Slate","_4273665236","QuestionFooter","HideCategories","IconClass","IconPosition","QuestionFooter_BrowseCategories","SocialStripStyle","Margin","span","SocialStrip","target","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","hexToRGB","hex","alpha","r","parseInt","slice","g","b","SimpleListStyle","List","ul","Item","li","SimpleList","item","Data","SuggestionListStyle","GradientColor","Button","SuggestionList","BaseUrl","Affix","AwardBadgeStyle","AwardHours","Text","AwardHoursStyle","Hours","AwardHours_styles_scss","AwardBadge","Logo","SplitSectionStyle","Site","SplitSection_styles_scss","PageTabsStyle","PageTabs","destination","currentLocation","DestinationPath","LocationPathWithSlash","pathname","AddClass","components_core_Layout__WEBPACK_IMPORTED_MODULE_1__","templates_SubLevelPage__WEBPACK_IMPORTED_MODULE_2__","components_library_Hero_SimpleHero__WEBPACK_IMPORTED_MODULE_3__","components_library_AwardHours__WEBPACK_IMPORTED_MODULE_4__","components_library_Btn___WEBPACK_IMPORTED_MODULE_12__","components_library_SuggestionList__WEBPACK_IMPORTED_MODULE_13__","components_library_PageTabs__WEBPACK_IMPORTED_MODULE_14__","components_library_Block__WEBPACK_IMPORTED_MODULE_16__","constants_Theme__WEBPACK_IMPORTED_MODULE_17__","LocationTheme","Secondary","Tertiary","geography","state","IconFas","contactDetails","address","meta","maps","External","nearby","StickyScrollSectionStyle","ReleaseOverflow","StickyScrollSection_templateObject","GalleryQueries","StickyScrollSection_styles_scss","Img","Src","Alt","Fluid"],"mappings":"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","file":"component---src-templates-location-landing-index-js-89689e81c93ef228ebda.js","sourcesContent":["// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SplitSection from 'components/library/Section/SplitSection';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport StickyScrollSection from 'components/library/Section/StickyScrollSection';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Block from 'components/library/Block';\nimport Btn from 'components/library/Btn';\n\n// Template Specific Components\nimport LocationPageWrapper from '../Components/LocationPageWrapper';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// TemplateLayout Component to pass data where it needs to go for\n// the theming of the hero as well as the LearnSection and what\n// to display in those cards.\nconst TemplateLayout = ({ LocationData, Location, Headline }) => {\n  // Build our automatic summary headline.\n  let SummaryHeadlineString =\n    LocationData.name +\n    // eslint-disable-next-line\n    \"'s leading cannabis dispensary — where humans come first.\";\n\n  // Check if a headline exists. If it does, display it. If it doesn't, use SummaryHeadlineString.\n  let SummaryHeadline =\n    LocationData.about.summary.headline != ''\n      ? LocationData.about.summary.headline\n      : SummaryHeadlineString;\n\n  return (\n    <LocationPageWrapper\n      Headline={Headline}\n      LocationData={LocationData}\n      Location={Location}\n    >\n      {/* ///////////// */}\n\n      <SimpleSection\n        BgColor={Theme.Color.Snow}\n        BgMatch=\"placeholder_bg_4.jpg\"\n        BgAlt=\"Our Awesome Alt Tag\"\n        FluidHeight={true}\n        Gutter={[0, 0, 0, 0]}\n      />\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n\n      <StickyScrollSection\n        BgColor={Theme.Color.White}\n        TextColor={Theme.Color.Nightsky}\n        Content={{\n          Subheadline: 'Sierra Well ' + LocationData.name,\n          Headline: SummaryHeadline,\n          Body: LocationData.about.summary.body,\n        }}\n        Gallery={LocationData.about.summary.gallery}\n      />\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n\n      <SplitSection Flex=\"row-reverse\">\n        <Block\n          Padding={[1, 1, 1, 1]}\n          Width={0.5}\n          BgColor={Theme.Color.Nightsky}\n          TextColor={Theme.Color.White}\n        >\n          <h2>From Seed to Soul.</h2>\n          <Btn\n            Label=\"Our Values\"\n            Destination=\"/company\"\n            BgColor={Theme.Color.Primary}\n            TextColor={Theme.Color.White}\n          />\n        </Block>\n\n        <Block\n          Style=\"centered\"\n          BgColor={Theme.Color.White}\n          BgMatch=\"placeholder_bg_4.jpg\"\n          BgAlt=\"Our Awesome Alt Tag\"\n          Width={0.5}\n        />\n      </SplitSection>\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n\n      <WidgetSection\n        BgColor={Theme.Color.White}\n        Widgets={[\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/menu',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Nightsky,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Menu',\n                    TextColor: Theme.Color.White,\n                    IconColor: Theme.Color.Primary,\n                    IconName: 'plus', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/locations',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Tahoe,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Locations',\n                    TextColor: Theme.Color.White,\n                    IconColor: Theme.Color.White,\n                    IconName: 'map-marker-alt', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/learn',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Mint,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Q&A',\n                    TextColor: Theme.Color.Nightsky,\n                    IconColor: Theme.Color.Nightsky,\n                    IconName: 'book-open', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n          {\n            // Begin WidgetContent\n            Flex: 1,\n            WidgetContent: [\n              {\n                Destination: '/specials',\n                Style: 'Generic',\n                Meta: {\n                  Generic: {\n                    BgColor: Theme.Color.Primary,\n                    BgImage: '',\n                    Subhead: '',\n                    Headline: 'Specials',\n                    TextColor: Theme.Color.White,\n                    IconColor: Theme.Color.White,\n                    IconName: 'star', // FontAwesome Icon Name\n                    TintColor: '',\n                    TintOpacity: '',\n                    IconSize: '',\n                  },\n                },\n              },\n            ],\n            // End WidgetContent\n          },\n        ]}\n      />\n\n      {/* ///////////// */}\n\n      {/* ///////////// */}\n    </LocationPageWrapper>\n  );\n};\n\n// The Template itself. Where it all begins.\nconst LocationLandingTemplate = ({ LocationData, Location }) => {\n  return <TemplateLayout LocationData={LocationData} Location={Location} />;\n};\n\nexport default LocationLandingTemplate;\n","// templates/Location/Landing/index.js:\n// This is the Location Landing page.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Templates\nimport LocationLandingTemplate from './layout';\n\n// Data\nimport { graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst LocationLandingPage = props => {\n  return (\n    <LocationLandingTemplate\n      LocationData={props.data.allLocationsJson.edges[0].node}\n      Location={props.location}\n      Headline={props.data.allLocationsJson.edges[0].node.about.headline}\n    />\n  );\n};\n\nexport default LocationLandingPage;\n\n// GraphQL Queries\n/////////////////////////////////////////////////////////////////////\n\n// The post template's GraphQL query. Notice the slug\n// variable which is passed in. We set this on the page\n// context in gatsby-node.js.\n//\n// All GraphQL queries in Gatsby are run at build-time and\n// loaded as plain JSON files so have minimal client cost.\nexport const query = graphql`\n  query($Slug: String!) {\n    allLocationsJson(filter: { slug: { eq: $Slug } }) {\n      edges {\n        node {\n          id\n          slug\n          name\n          geography {\n            city\n            state\n            country\n          }\n          status {\n            delivery\n            store\n          }\n          meta {\n            reserveSpot\n            menu\n            maps\n          }\n          contactDetails {\n            phone\n            location {\n              address\n              state\n            }\n            hours {\n              days\n              startTime\n              endTime\n            }\n          }\n          nearby {\n            name\n            slug\n          }\n          about {\n            headline\n            PageTheme {\n              Color {\n                Background\n                Primary\n                Secondary\n                Tertiary\n              }\n            }\n            summary {\n              headline\n              body\n              gallery {\n                Src\n                Alt\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Block> Styles:\n// This is the primary column component.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\nexport const BlockStyle = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.flex : 'column')};\n  position: relative;\n  flex-shrink: 1;\n  ${props => (props.BgColor ? 'background: ' + props.BgColor + ';' : null)}\n  ${props => (props.TextColor ? 'color: ' + props.TextColor + ';' : null)}\n  \n  /* Item Alignment. We are aligning items */\n  /* 'stretch' by default. */\n  ${props =>\n    props.AlignItems ? 'align-items: ' + props.AlignItems + ';' : null}\n\n  /* Centered Style */\n  ${props =>\n    props.Style == 'centered' &&\n    css`\n      align-items: center;\n      justify-content: center;\n      margin: 0 auto;\n\n      p,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        text-align: center;\n        width: 100%;\n      }\n\n      .btn {\n        margin: 0 auto;\n      }\n\n      .block-content {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n      }\n    `}\n\n  /* The block content. */\n  .block-content {\n    z-index: 2;\n    margin: 0 auto;\n    width: 100%;\n    ${props => (props.JustifyContent ? 'display:flex' : null)};\n    ${props =>\n      props.JustifyContent\n        ? 'justify-content: ' + props.JustifyContent + ';'\n        : null}\n\n    p {\n      max-width: 80%;\n    }\n  }\n\n  /* Background images with Gatsby-Img */\n  .block-img {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n\n    .img {\n      flex: 1;\n    }\n  }\n\n  /* Width Multiple */\n    ${props =>\n      props.Width ? 'width: ' + props.Width * 100 + '%;' : 'flex: 1;'}\n  max-width: ${props =>\n    props.maxWidth\n      ? 'calc(' + Theme.Base.Grid.SiteWidth + ' * ' + props.maxWidth + ')'\n      : Theme.Base.Grid.SiteWidth};\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n`;\n\nexport default BlockStyle;\n//////////////////////////////////////////////////////////////////////\n","// <Block> Component:\n// This is the sitewide block style of the website.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Styles\nimport BlockStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Block = ({\n  children,\n  className,\n  Style,\n  maxWidth,\n  Width,\n  Padding,\n  AlignItems,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  BgTint,\n  BgColor,\n  TextColor,\n  JustifyContent,\n  Flex,\n}) => (\n  <BlockStyle\n    className={className ? className + ' block' : 'block'}\n    Width={Width}\n    maxWidth={maxWidth}\n    Style={Style}\n    Padding={Padding}\n    AlignItems={AlignItems ? AlignItems : false}\n    JustifyContent={JustifyContent ? JustifyContent : false}\n    BgTint={BgTint}\n    BgColor={BgColor}\n    TextColor={TextColor}\n    Flex={Flex}\n  >\n    {/* Block Content */}\n    {children ? <div className=\"block-content\">{children}</div> : null}\n\n    {/* For Background Images */}\n    {BgMatch ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n\n    {/* For Background Images with ImgQuery */}\n    {BgQuery ? (\n      <div className=\"block-img-wrap\">\n        <div className=\"block-img\">\n          <ImgQuery src={BgQuery} AltText={BgAlt} />\n        </div>\n      </div>\n    ) : null}\n  </BlockStyle>\n);\n\nexport default Block;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SlideSectionStyle = styled.div`\n  width: 100%;\n  overflow: hidden;\n\n  /* Slick styles */\n  .slick-slider {\n    padding-bottom: ${Theme.Base.Size.Sm};\n    margin-bottom: ${Theme.Base.Size.Sm};\n\n    .slick-slide {\n      &:first-child {\n        .widget {\n          padding-left: 0;\n        }\n      }\n    }\n    .slick-list {\n      overflow: visible;\n    }\n\n    /* Arrows */\n    .slick-arrow {\n      top: calc((${Root.Size}) * -1);\n      transform: none;\n      right: 0;\n      left: unset;\n      width: calc(${Root.Size} * 0.75);\n      height: calc(${Root.Size} * 0.75);\n      border-radius: 50%;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      z-index: 400;\n      background: rgba(0, 0, 0, 0);\n\n      &.slick-prev {\n        transform: rotate(180deg);\n        right: calc((${Root.Size} * 0.75) + (${Root.Size} * 0.25));\n      }\n\n      &.slick-next {\n        right: 0;\n      }\n\n      &.slick-disabled {\n        opacity: 0.4;\n        .ico {\n          opacity: 0.5;\n        }\n        &:hover {\n          background: rgba(0, 0, 0, 0);\n          border: 1px solid rgba(0, 0, 0, 0.1);\n        }\n      }\n\n      &:hover {\n        background: rgba(0, 0, 0, 0.03);\n        border: 1px solid rgba(0, 0, 0, 0.03);\n      }\n\n      .ico {\n        position: absolute;\n        left: 54%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:before {\n        content: '';\n      }\n    }\n\n    .slick-dots {\n      bottom: 0;\n      left: 50%;\n      transform: translateX(-50%);\n      width: auto;\n      padding: 0;\n      margin: 0;\n\n      li {\n        margin: 0;\n        padding: 0;\n        width: 10px;\n        height: 10px;\n        margin-right: 5px;\n\n        button {\n          margin: 0;\n          padding: 0;\n          position: relative;\n          width: 10px;\n          height: 10px;\n          margin-right: 5px;\n\n          &:before {\n            content: '';\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            width: 7px;\n            height: 7px;\n            border: 1px solid ${Theme.Color.Black};\n            border-radius: 50%;\n          }\n        }\n      }\n    }\n  }\n`;\n\nSlideSectionStyle.Inner = styled(SectionInnerStyle)`\n  width: 100%;\n  padding-bottom: 0;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: 0'};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n`;\n\nSlideSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: column;\n\n  .widget {\n    padding: calc(${Root.Size} / 6);\n    height: ${props =>\n      props.SectionSize\n        ? 'calc(' + Root.Size + '*' + props.SectionSize + ')'\n        : 'calc(' + Root.Size + '* 3)'};\n  }\n`;\n\nSlideSectionStyle.SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: calc(${Root.Size} / 6);\n`;\n\nSlideSectionStyle.Headline = styled.div`\n  display: flex;\n  font-weight: 800;\n  font-size: 1.5rem;\n  color: ${props => (props.TextColor ? props.TextColor : null)}\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  i {\n    margin-right: ${Theme.Base.Size.Sm};\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n`;\n\nSlideSectionStyle.CallToAction = styled.div`\n  display: flex;\n\n  .btn {\n    background-color: rgba(0, 0, 0, 0);\n    color: ${Theme.Color.Black};\n\n    svg {\n      fill: ${Theme.Color.Black};\n      border: ${Theme.Color.Black};\n    }\n\n    i {\n      color: ${Theme.Color.Black};\n    }\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`;\n\nexport default SlideSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SlideSection.js:\n//\n// Usage:\n// <SlideSection\n// Widgets={Widgets}\n// SectionSize=\"Large\"\n// SlidesToShow={4}\n// Header=\"Headline\"\n// ViewAll={['/', 'View All']}\n// />\n\n// Core\nimport React from 'react';\nimport Slider from 'react-slick'; // For Slick Slider\nimport { Helmet } from 'react-helmet'; // For Slick Styles\nimport { Link } from 'gatsby';\n\n// Components\nimport WidgetContainer from 'components/library/Widgets/Container/';\nimport Btn from 'components/library/Btn';\nimport Icon from 'elements/Icons';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport SlideSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The Section Slider:\n// For displaying widgets within a SlideSection.\n\n// The Slider Arrows\nfunction NextArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\nfunction PrevArrow(props) {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style }}\n      onClick={onClick}\n      // These are eslint errors for accessibility below.\n      onKeyPress={onClick}\n      role=\"button\"\n      tabIndex=\"0\"\n    >\n      <Icon className=\"svg-carat\" Name=\"carat\" />\n    </div>\n  );\n}\n\n// The Slider itself.\nclass SectionSlider extends React.Component {\n  constructor(props) {\n    // Make our props accessible through this.props\n    super(props);\n  }\n\n  render() {\n    // React-Slick Settings\n    // Read more: https://react-slick.neostack.com/\n\n    // Get any theming.\n    const ArrowColor = this.props.ArrowColor;\n\n    // Get any custom Slider Settings we want to pass.\n    const slidesToShow = this.props.SliderSettings.slidesToShow\n      ? this.props.SliderSettings.slidesToShow\n      : 1;\n    const slidesToScroll = this.props.SliderSettings.slidesToScroll\n      ? this.props.SliderSettings.slidesToScroll\n      : 1;\n    const autoplay = this.props.SliderSettings.autoplay\n      ? this.props.SliderSettings.autoplay\n      : false;\n    const arrows = this.props.SliderSettings.arrows\n      ? this.props.SliderSettings.arrows\n      : false;\n\n    // Pass into Slick Settings.\n    const settings = {\n      dots: true,\n      speed: 550,\n      arrows: false,\n      autoplaySpeed: 4000,\n      slidesToShow: slidesToShow,\n      slidesToScroll: slidesToScroll,\n      autoplay: autoplay,\n      infinite: false,\n      draggable: true,\n      arrows: arrows,\n      nextArrow: <NextArrow />,\n      prevArrow: <PrevArrow />,\n    };\n\n    return (\n      <>\n        <Helmet>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/vendor/slick.min.css\" />\n          <link\n            rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"/vendor/slick-theme.min.css\"\n          />\n        </Helmet>\n        <Slider ref={h => (this.slider = h)} {...settings}>\n          {this.props.children}\n        </Slider>\n      </>\n    );\n  }\n}\n\n// The SubLevel Page Itself\nconst SlideSection = ({\n  Widgets,\n  SectionSize,\n  SliderSettings,\n  Header,\n  Icon,\n  ViewAll,\n  Theme,\n  Gutter,\n}) => (\n  <SlideSectionStyle>\n    <SlideSectionStyle.Inner Gutter={Gutter}>\n      <SlideSectionStyle.Content SectionSize={SectionSize}>\n        <SlideSectionStyle.SectionHeader>\n          <SlideSectionStyle.Headline TextColor={Theme.TextColor}>\n            {Icon ? <i className={'fas fa-' + Icon} /> : null}\n            <h2>{Header}</h2>\n          </SlideSectionStyle.Headline>\n          {ViewAll ? (\n            <SlideSectionStyle.CallToAction>\n              <Btn\n                Destination={ViewAll[0]}\n                BgColor=\"inherit\"\n                Label={ViewAll[1]}\n                IconclassName=\"carat\"\n              />\n            </SlideSectionStyle.CallToAction>\n          ) : null}\n        </SlideSectionStyle.SectionHeader>\n\n        <SectionSlider\n          SliderSettings={SliderSettings}\n          ArrowColor={Theme.TextColr}\n        >\n          {/* Map our Widgets data. */}\n          {Widgets.map((Widget, index) => {\n            // Pass our Widgets data to our WidgetContainers\n            return (\n              <WidgetContainer\n                key={index}\n                WidgetContent={Widget.WidgetContent}\n                Flex={Widget.Flex ? Widget.Flex : null}\n              />\n            );\n          })}\n        </SectionSlider>\n      </SlideSectionStyle.Content>\n    </SlideSectionStyle.Inner>\n  </SlideSectionStyle>\n);\n\nexport default SlideSection;\n","// WrapperControl.js:\n// For controlling our `.wrapper` class app-wide.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Base } from 'constants/styles/Base';\n\n// Styles\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Lock Wrapper Scroll\nexport const WrapperLock = createGlobalStyle`\n\n  html, body {\n    overflow: hidden;\n\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: auto; \n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow: hidden;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow: hidden;\n    }\n  }\n\n  .slick-slider {\n    touch-action: none !important;\n  }\n`;\n\n// Release Wrapper Scroll\nexport const WrapperRelease = createGlobalStyle`\n  html, body {\n      overflow: auto;\n  }\n\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      overflow-y: visible;\n      height: auto;\n      position: absolute;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      overflow-y: visible; /* has to be scroll, not auto */\n      position: absolute;\n    }\n  }\n`;\n\n// Wrapper Flex Reseet\nexport const WrapperFlexStart = createGlobalStyle`\n  .wrapper {\n    @media (min-width: ${Base.Media.Width.Md + 1 + 'px'}) {\n      justify-content: flex-start;\n    }\n    @media (max-width: ${Base.Media.Width.Md + 'px'}) {\n      justify-content: space-between;\n    }\n  }\n`;\n","// ImgQuery.js:\n// For blazin' fast and optimized images.\n\n// Core\nimport React from 'react';\nimport Img from 'gatsby-image/withIEPolyfill';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst ImgQuery = ({\n  data,\n  src,\n  AltText,\n  className,\n  objectFit,\n  objectPosition,\n}) => (\n  <Img\n    fluid={src}\n    objectFit={objectFit ? objectFit : 'cover'}\n    objectPosition={objectPosition ? objectPosition : '50% 50%'}\n    AltText={AltText}\n    className={className ? className : 'img'}\n    fadeIn={true}\n  />\n);\n\nexport default ImgQuery;\n\n// Our fragment for consistent querying of the right\n// sized images.\n","// SimpleSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nSimpleSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n    .img {\n      height: 100%;\n    }\n  }\n`;\n\nSimpleSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n`;\n\nexport default SimpleSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleSection Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SimpleSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  FluidHeight,\n  Gutter,\n  Flex,\n  children,\n}) => (\n  <SimpleSectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <SimpleSectionStyle.Inner\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <SimpleSectionStyle.Content\n        FluidHeight={FluidHeight}\n        Flex={Flex}\n        className=\"simple-section\"\n      >\n        {children}\n      </SimpleSectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </SimpleSectionStyle.Inner>\n  </SimpleSectionStyle>\n);\n\nexport default SimpleSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MenuHero Styles:\n// These are nearly identical to the Section base styles.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInnerStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : 'padding-top: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : 'padding-right: ' + Root.Size};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : 'padding-bottom: calc(' + Root.Size + ' * ' + '2)'};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ' * ' +\n        props.Padding[3] +\n        ')'\n      : 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + ' +\n        Root.Size +\n        ')'};\n\n  .hero-img {\n    pointer-events: none;\n    ${props =>\n      props.imgRight || props.imgLeft || props.imgTop || props.imgBottom\n        ? 'position: absolute'\n        : null};\n    ${props => (props.imgRight ? 'right: ' + props.imgRight : null)};\n    ${props => (props.imgLeft ? 'left: ' + props.imgLeft : null)};\n    ${props => (props.imgBottom ? 'bottom: ' + props.imgBottom : null)};\n    ${props => (props.imgTop ? 'top: ' + props.imgTop : null)};\n    ${props => (props.imgWidth ? 'width: ' + props.imgWidth : null)};\n  }\n\n  .btn-secondary {\n    margin-left: calc(${Root.Size} / 4);\n  }\n`;\n\nexport const HeroContentStyle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  max-width: ${props => (props.FullWidth ? '100%' : Theme.Base.Grid.SiteWidth)};\n`;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nWidgetSection.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  height: 400px;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nWidgetSection.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  .widget {\n    width: 25%;\n    padding: calc(${Root.Size} / 6);\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n\n    @media (max-width: calc(${Theme.Base.Media.Width.Md} * 1.5)) {\n      width: 50%;\n      flex: unset;\n      &:nth-child(odd) {\n        padding-left: 0;\n      }\n      &:nth-child(even) {\n        padding-right: 0;\n      }\n    }\n  }\n`;\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// WidgetSection Component:\n// For displaying inline Widgets on Subpages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Widgets Container\nimport WidgetContainer from 'components/library/Widgets/Container/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport WidgetSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst WidgetSection = ({ BgColor, Widgets, Slider, Gutter }) => (\n  <WidgetSectionStyle BgColor={BgColor}>\n    <WidgetSectionStyle.Inner Gutter={Gutter}>\n      <WidgetSectionStyle.Content className=\"widget-section\">\n        {/* Map our Widgets data. */}\n        {Widgets.map((Widget, index) => {\n          // Pass our Widgets data to our WidgetContainers\n          return (\n            <WidgetContainer\n              key={index}\n              WidgetContent={Widget.WidgetContent}\n              Flex={Widget.Flex ? Widget.Flex : null}\n            />\n          );\n        })}\n      </WidgetSectionStyle.Content>\n    </WidgetSectionStyle.Inner>\n  </WidgetSectionStyle>\n);\n\nexport default WidgetSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Widget Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Keyframes\nimport { FadeIn } from 'components/core/Transition/Keyframes';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidgetStyle = styled.div`\n  width: 100%;\n  padding-bottom: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  opacity: 0;\n  margin-top: ${Theme.Base.Size.Sm};\n  animation-fill-mode: forwards;\n  ${FadeIn};\n`;\n\nSidebarWidgetStyle.Inner = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props =>\n    props.BgColor ? props.BgColor : Theme.Color.White};\n  border-radius: ${Root.Radius};\n  box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n  overflow: hidden;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  cursor: pointer;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Background Images */\n\n  ${props => {\n    if (props.BgImage)\n      return (\n        `\n        background-image: url(` +\n        props.BgImage +\n        `);\n        background-size: cover;\n        background-position: center center;\n        background-repeat: no-repeat;\n        `\n      );\n  }};\n\n  /* Tint */\n\n  ${props => {\n    if (props.TintColor || props.TintOpacity)\n      return (\n        `\n        &:before {\n          content: '';\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          background-color:` +\n        props.TintColor +\n        `;\n          opacity:` +\n        props.TintOpacity +\n        `;\n          transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n        }\n    `\n      );\n  }};\n\n  /* Links */\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    flex: 1;\n    width: 100%;\n    color: white;\n    transform: scale(1.000000001);\n    position: relative;\n    padding: ${Theme.Base.Size.Sm};\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* The Carat Icon */\n  svg {\n    position: absolute;\n    right: ${Theme.Base.Size.Sm};\n    top: ${Theme.Base.Size.Sm};\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transform: translateX(0%);\n    transition: all ${Theme.Base.Transition.Duration}\n      ${Theme.Base.Transition.CssEase};\n  }\n\n  /* Hover Styles */\n  &:hover {\n    background-color: ${Theme.Color.Black};\n    color: ${Theme.Color.White};\n    box-shadow: 0 20px 30px 0 rgba(6, 10, 92, 0.21);\n\n    a {\n      text-decoration: none;\n      color: ${Theme.Color.White};\n    }\n\n    /* The Carat Icon */\n    svg {\n      transform: translateX(50%);\n      fill: ${Theme.Color.White};\n      height: 1.2rem;\n      width: 1.2rem;\n    }\n\n    /* The Widget Icon */\n    .fas {\n      color: ${Theme.Color.White};\n    }\n\n    /* Tint */\n    ${props => {\n      if (props.TintColor || props.TintOpacity)\n        return `\n        &:before {\n          opacity: 1\n        }\n    `;\n    }};\n  }\n`;\n\nSidebarWidgetStyle.Subhead = styled.div`\n  font-size: 1rem;\n  line-height: 1.2;\n`;\n\nSidebarWidgetStyle.Headline = styled.div`\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-weight: bold;\n`;\n\nSidebarWidgetStyle.Icon = styled.i`\n  position: absolute;\n  right: ${Theme.Base.Size.Sm};\n  top: ${Theme.Base.Size.Sm};\n  font-size: 1.2rem;\n  transform: scale(1.4);\n  transform-origin: top right;\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n  color: ${props => (props.Color ? props.Color : Theme.Color.Black)};\n`;\n\nexport default SidebarWidgetStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Default Widget.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport SidebarWidgetStyle from './styles.scss';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SidebarWidget = ({\n  BgColor,\n  BgImage,\n  Headline,\n  TextColor,\n  IconName,\n  IconColor,\n  Destination,\n  TintColor,\n  TintOpacity,\n}) => (\n  <SidebarWidgetStyle className=\"widget\">\n    <SidebarWidgetStyle.Inner\n      BgColor={BgColor}\n      BgImage={BgImage}\n      TextColor={TextColor}\n      TintColor={TintColor}\n      TintOpacity={TintOpacity}\n    >\n      <Link to={Destination}>\n        <SidebarWidgetStyle.Headline>{Headline}</SidebarWidgetStyle.Headline>\n\n        {/* Pass Icon value using FontAwesome */}\n        {/* Read more: https://fontawesome.com/how-to-use/on-the-web/setup/getting-started */}\n        <SidebarWidgetStyle.Icon\n          className={'fas fa-' + IconName}\n          Color={IconColor}\n        />\n      </Link>\n    </SidebarWidgetStyle.Inner>\n  </SidebarWidgetStyle>\n);\n\nexport default SidebarWidget;\n","// Sidebar Component Styles\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Blocks\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SidebarStyle = styled.div`\n  position: fixed;\n  top: ${Root.Nav.Size};\n  bottom: 0;\n  height: calc(100vh - ${Root.Nav.Size});\n  display: flex;\n  z-index: 555;\n`;\n\nSidebarStyle.Inner = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: ${Theme.Base.Size.Sm};\n  width: ${Root.Grid.Gutter.Left};\n`;\n\nexport default SidebarStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// Sidebar.js:\n// This is the sitewide sidebar component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport SidebarWidget from 'components/library/Widgets/Sidebar/Default';\n\n// Styles\nimport SidebarStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nconst Sidebar = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SidebarStyle>\n    <SidebarStyle.Inner>\n      <SidebarWidget\n        BgColor={Theme.Color.Primary}\n        BgImage=\"none\"\n        Headline=\"Delivery Available\"\n        TextColor={Theme.Color.White}\n        IconColor={Theme.Color.White}\n        IconName=\"car\"\n        Destination=\"/menu/delivery/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Reserve Spot\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"users\"\n        Destination=\"/menu/pick-up/nevada/reno/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Visit\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"map-marker-alt\"\n        Destination=\"/\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Chat\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"comment-alt\"\n        Destination=\"/culture\"\n      />\n      <SidebarWidget\n        BgColor={SecondaryColor}\n        BgImage=\"none\"\n        Headline=\"Phone\"\n        TextColor={TertiaryColor}\n        IconColor={TertiaryColor}\n        IconName=\"phone\"\n        Destination=\"/contact\"\n      />\n    </SidebarStyle.Inner>\n  </SidebarStyle>\n);\n\nexport default Sidebar;\n","// SubLevelPage Component Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { Base } from 'constants/styles/Base';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\n// The Content Wrapper\nconst SubLevelPageStyle = styled.div`\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-wrap: nowrap;\n  color: ${Theme.Color.Background};\n  transition: all ${Theme.Base.Transition.Duration}\n    ${Theme.Base.Transition.CssEase};\n`;\n\nSubLevelPageStyle.Inner = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nSubLevelPageStyle.Content = styled.div`\n  width: 100%;\n  flex: 1;\n  background: ${props => (props.BgColor ? props.BgColor : 'none')};\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n`;\n\nexport default SubLevelPageStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SubLevelPage.js:\n// This is prevent page jumping of page transitions.\n// The concept is to replicate a 'body' tag so it's scroll\n// position isn't reset for a simple and smooth page\n// transition without jumping to the top of the page.\n\n// It's used in the wrapPageElement component.\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Components\nimport Sidebar from 'components/Library/Sidebar/';\nimport { WrapperRelease } from 'components/core/WrapperControl';\n\n// Styles\nimport SubLevelPageStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// The SubLevel Page Itself\nexport const SubLevelPage = ({\n  children,\n  BgColor,\n  PrimaryColor,\n  SecondaryColor,\n  TertiaryColor,\n}) => (\n  <SubLevelPageStyle className=\"sub\">\n    <WrapperRelease />\n    <Sidebar\n      BgColor={BgColor}\n      PrimaryColor={PrimaryColor}\n      SecondaryColor={SecondaryColor}\n      TertiaryColor={TertiaryColor}\n    />\n    <SubLevelPageStyle.Inner className=\"sublevel-inner\">\n      {children}\n    </SubLevelPageStyle.Inner>\n  </SubLevelPageStyle>\n);\n\n// The SubLevel Page Content\nexport const SubLevelPageContent = ({\n  BgColor,\n  TextColor,\n  ItemProp,\n  children,\n}) => (\n  <SubLevelPageStyle.Content\n    TextColor={TextColor}\n    BgColor={BgColor}\n    itemProp={ItemProp}\n  >\n    {children}\n  </SubLevelPageStyle.Content>\n);\n","// Hero Component:\n// This is a helper component containing base\n// Hero styles shared across all Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { HeroInnerStyle, HeroContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroInner = ({\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  Size,\n  Flex,\n  Padding,\n  children,\n}) => (\n  <HeroInnerStyle\n    Size={Size ? Size : false}\n    Padding={Padding ? Padding : false}\n    imgRight={imgRight ? imgRight : false}\n    imgLeft={imgLeft ? imgLeft : false}\n    imgBottom={imgBottom ? imgBottom : false}\n    imgTop={imgTop ? imgTop : false}\n    imgWidth={imgWidth ? imgWidth : false}\n  >\n    <HeroContentStyle Flex={Flex}>{children}</HeroContentStyle>\n  </HeroInnerStyle>\n);\n\nexport const HeroContent = ({ children, Flex }) => (\n  <HeroContentStyle Flex={Flex} className=\"hero-content\">\n    {children}\n  </HeroContentStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SimpleHero Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHeroStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n  position: relative;\n  /* margin-top: calc(${Root.Nav.Size} * -1); */\n  background: ${props => (props.Background ? props.Background : 'none')};\n  background-size: cover;\n  background-position: center center;\n  color: ${props => (props.TextColor ? props.TextColor : 'inherit')};\n  align-self: flex-start;\n  justify-self: flex-start;\n\n  /* Background Tint */\n  ${props =>\n    props.Tint\n      ? `\n  &.tint {\n    &:before {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      top: 0;\n      background-color: rgba(0,0,0,` +\n        props.Tint +\n        `);\n    }\n    .inner {\n      z-index: 500;\n    }\n  }\n  `\n      : null}\n  \n  /* Background Tint */\n  ${props =>\n    props.TintBorder\n      ? `\n      &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      right: 0;      \n      top: 0;\n      height: 1px;\n      z-index: 5;\n      background-color: rgba(0,0,0, 0.05);\n    }\n  `\n      : null}\n\n  /* Block Spacing */\n  .block {\n    &:first-child {\n      padding-right: calc(${Root.Size} / 2);\n    }\n    &:second-child {\n      padding-left: calc(${Root.Size} / 2);\n    }\n  }\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: -1;\n    height: 100%;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img, .img {\n      height: 100%;\n    }\n    .hero-img, .gatsby-image-wrapper {\n      position: unset !important;\n    }\n  }\n`;\n\nexport default SimpleHeroStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SimpleHero Component:\n// This is a basic hero component for a hero\n// and a background image.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Helpers\nimport { HeroInner } from './../../Hero';\n\n// Styles\nimport SimpleHeroStyle from './styles.scss';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleHero = ({\n  Background,\n  imgRight,\n  imgLeft,\n  imgBottom,\n  imgTop,\n  imgWidth,\n  TextColor,\n  Tint,\n  Padding,\n  Size,\n  BgMatch,\n  BgQuery,\n  BgAlt,\n  Flex,\n  TintBorder,\n  children,\n}) => (\n  <SimpleHeroStyle\n    Background={Background}\n    TextColor={TextColor}\n    Tint={Tint}\n    TintBorder={TintBorder}\n    className={Tint ? 'tint' : null}\n  >\n    <HeroInner\n      Size={Size ? Size : false}\n      Padding={Padding}\n      imgRight={imgRight ? imgRight : false}\n      imgLeft={imgLeft ? imgLeft : false}\n      imgBottom={imgBottom ? imgBottom : false}\n      imgTop={imgTop ? imgTop : false}\n      imgWidth={imgWidth ? imgWidth : false}\n      className=\"inner\"\n      Flex={Flex}\n    >\n      {children}\n    </HeroInner>\n    {BgMatch ? (\n      <div className=\"section-img\">\n        <ImgMatch src={BgMatch} AltText={BgAlt} className=\"hero-img\" />\n      </div>\n    ) : null}\n    {BgQuery ? (\n      <div className=\"section-img\">\n        <ImgQuery src={BgQuery} AltText=\"Hero Alt\" className=\"hero-img\" />\n      </div>\n    ) : null}\n  </SimpleHeroStyle>\n);\n\nexport default SimpleHero;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <Breadcrumb> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const BreadCrumb = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  width: 100%;\n  align-items: center;\n  transform: translateX(calc(1rem * -1.5));\n  text-decoration: none;\n`;\n\nBreadCrumb.Label = styled(Link)`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  margin-left: calc(${Theme.Base.Size.Sm});\n  position: relative;\n  text-transform: capitalize;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: calc((${Theme.Base.Size.Sm} / 2) * -1);\n    transform: translateY(-50%);\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.TextColor ? props.TextColor : Theme.Color.Black};\n  }\n\n  &:first-child {\n    margin-left: 0;\n    position: relative;\n\n    &:before {\n      display: none;\n    }\n  }\n\n  svg {\n    transform: rotate(180deg) translateX(0%);\n    transform-origin: center center;\n    width: 1rem;\n    height: 1rem;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    transition: all 0.25s ease;\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n\n  &:hover {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    svg {\n      transform: rotate(180deg) translateX(50%);\n    }\n  }\n`;\n\nexport default BreadCrumb;\n//////////////////////////////////////////////////////////////////////\n","// <Bread Crumbs=\"\"> Component:\n// The breadcrumb component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport BreadCrumbStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst Bread = ({ Crumbs, TextColor }) => (\n  <BreadCrumbStyle>\n    {Crumbs.map((crumb, index) => {\n      return (\n        <BreadCrumbStyle.Label\n          to={crumb.Destination}\n          key={index}\n          TextColor={TextColor}\n        >\n          {/* // Hide back button if nested item. */}\n          {index == 0 ? (\n            <Icon className=\"svg-carat\" Name=\"carat\" TextColor={TextColor} />\n          ) : null}\n\n          {crumb.Label}\n        </BreadCrumbStyle.Label>\n      );\n    })}\n  </BreadCrumbStyle>\n);\n\nexport default Bread;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// MasonrySecction Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n  overflow: visible;\n`;\n\nMasonrySectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n  overflow: visible;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Gutter[1] + ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' + (' +\n        Root.Size +\n        ' * ' +\n        props.Gutter[3] +\n        '))'\n      : null};\n`;\n\nMasonrySectionStyle.Content = styled.div`\n  width: 100%;\n  position: relative;\n  margin: 0 auto;\n  overflow: visible;\n  max-width: ${Theme.Base.Grid.SiteWidth};\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  -ms-backface-visibility: hidden;\n  backface-visibility: hidden;\n\n  /* Performance fixes on Chrome & Safari */\n  -webkit-perspective: 1000;\n  -moz-perspective: 1000;\n  -ms-perspective: 1000;\n  perspective: 1000;\n\n  /* CSS Masonry */\n  /* Read more: https://w3bits.com/css-masonry/ */\n  column-width: 33%;\n  column-count: ${props => (props.Columns ? props.Columns : 3)};\n  column-gap: ${props =>\n    props.ColumnGap\n      ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n      : 'calc(' + Root.Size + '* .25)'};\n\n  .widget-content {\n    border-radius: ${Root.Radius};\n    box-shadow: 0 10px 17px 0 rgba(6, 10, 92, 0.12);\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    display: inline-block;\n    margin-bottom: ${props =>\n      props.ColumnGap\n        ? ' calc(' + Root.Size + ' * ' + props.ColumnGap + ')'\n        : 'calc(' + Root.Size + '* .25)'};\n\n    .widget-headline {\n      margin-bottom: calc(${Root.Size} * 2);\n    }\n  }\n`;\n\nexport default MasonrySectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// MasonrySection Component:\n// This is a component for a MasonryGrid of Widgets.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport MasonrySectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst MasonrySection = ({\n  BgColor,\n  Style,\n  TextColor,\n  BgMatch,\n  BgAlt,\n  BgTint,\n  PaddingY,\n  FluidHeight,\n  Gutter,\n  Columns,\n  ColumnGap,\n  children,\n}) => (\n  <MasonrySectionStyle Style={Style} BgColor={BgColor} TextColor={TextColor}>\n    <MasonrySectionStyle.Inner\n      Size={PaddingY}\n      BgTint={BgTint}\n      FluidHeight={FluidHeight}\n      Gutter={Gutter}\n    >\n      <MasonrySectionStyle.Content\n        FluidHeight={FluidHeight}\n        className=\"masonry-section\"\n        Columns={Columns}\n        ColumnGap={ColumnGap}\n      >\n        {children}\n      </MasonrySectionStyle.Content>\n      {BgMatch ? (\n        <div className=\"section-img\">\n          <ImgMatch src={BgMatch} AltText={BgAlt} />\n        </div>\n      ) : null}\n    </MasonrySectionStyle.Inner>\n  </MasonrySectionStyle>\n);\n\nexport default MasonrySection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionListings Component:\n// The QuestionListings component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionListingsStyle from './styles.scss';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst QuestionCards = ({\n  CategoryFilter,\n  TagFilter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n}) => {\n  // Assign our strings to build our slugs.\n  const CategorySlugString = CategorySlug ? '/' + CategorySlug : '';\n  const TagSlugString = TagSlug ? '/' + TagSlug : '';\n  const QuestionSlugString = CategorySlugString + TagSlugString;\n\n  // Helper Function to match the CategoryFilter to the right Category\n  function categoryMatch(categoryData, categoryFilter) {\n    // See  if our categoryData matches our supplied categoryFilter:\n    let matchedCategory = categoryData.filter(\n      category => category.node.Name === categoryFilter\n    );\n\n    // If it does, return the matched Category.\n    if (matchedCategory) {\n      return matchedCategory[0].node;\n    }\n  }\n\n  return (\n    // Run the StaticQuery to get the data we need.\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionsJson {\n            edges {\n              node {\n                id\n                slug\n                date\n                author\n                title\n                category\n                tags\n                shortAnswer\n                longAnswer\n                coverImage\n              }\n            }\n          }\n\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                Name\n                Icon\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data =>\n        // Create our PageTheme variables for each Widget.\n\n        // Map the Question data we got.\n        data.allQuestionsJson.edges.map((Question, index) => {\n          // If the Question's Category is the same as the Filter supplied:\n          if (Question.node.category == CategoryFilter) {\n            // If there isn't a TagFilter applied:\n            if (TagFilter == 'all') {\n              // Use our helper function above to find the right Category's Data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                CategoryFilter\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn' + QuestionSlugString + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If there is a TagFilter applied, check the Tags Array\n              // to see if it includes our filter:\n              if (Question.node.tags.includes(TagFilter.toLowerCase())) {\n                // Use our helper function above to find the right Category's Data.\n                let filteredCategory = categoryMatch(\n                  data.allQuestionCategoriesJson.edges,\n                  CategoryFilter\n                );\n\n                return (\n                  <DefaultWidget\n                    BgColor={filteredCategory.PageTheme.Color.Background}\n                    TextColor={filteredCategory.PageTheme.Color.Primary}\n                    Destination={\n                      '/learn' + QuestionSlugString + '/' + Question.node.slug\n                    }\n                    Subhead={Question.node.category}\n                    Headline={Question.node.title}\n                    IconName={filteredCategory.Icon}\n                    IconColor={filteredCategory.PageTheme.Color.Primary}\n                    BgImageFile={Question.node.coverImage}\n                    BgImageAltText={\n                      Question.node.category +\n                      ' & Cannabis | ' +\n                      Question.node.title\n                    }\n                    TintColor={Theme.Color.Black}\n                    TintOpacity={0.6}\n                    key={index}\n                  />\n                );\n              } else {\n                // If it doesn't match anything, return false. And cry.\n                return false;\n              }\n            }\n          } else {\n            // If we want to display all the Questions, let's make their\n            // slug their root category.\n            if (CategoryFilter == 'all') {\n              // Use our helper function to match the Category data.\n              let filteredCategory = categoryMatch(\n                data.allQuestionCategoriesJson.edges,\n                Question.node.category\n              );\n\n              return (\n                <DefaultWidget\n                  BgColor={filteredCategory.PageTheme.Color.Background}\n                  TextColor={filteredCategory.PageTheme.Color.Primary}\n                  Destination={\n                    '/learn/' + filteredCategory.Slug + '/' + Question.node.slug\n                  }\n                  Subhead={Question.node.category}\n                  Headline={Question.node.title}\n                  IconName={filteredCategory.Icon}\n                  IconColor={filteredCategory.PageTheme.Color.Primary}\n                  BgImageFile={Question.node.coverImage}\n                  BgImageAltText={\n                    Question.node.category +\n                    ' & Cannabis | ' +\n                    Question.node.title\n                  }\n                  TintColor={Theme.Color.Black}\n                  TintOpacity={0.6}\n                  key={index}\n                />\n              );\n            } else {\n              // If nothing is supplied, don't return anything. Also, cry.\n              return null;\n            }\n          }\n        })\n      }\n    />\n  );\n};\n\nconst QuestionListings = ({\n  Gutter,\n  CategorySlug,\n  AllCategories,\n  TagSlug,\n  BgColor,\n  CategoryFilter,\n  TagFilter,\n}) => (\n  <MasonrySection\n    Columns={3}\n    ColumnGap={0.25}\n    BgColor={BgColor ? BgColor : Theme.Color.White}\n    TextColor={Theme.Color.Nightsky}\n    Gutter={Gutter ? Gutter : [0, 1, 2, 1]}\n  >\n    {/* If the CategoryFilter is supplied */}\n    {CategoryFilter ? (\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter={CategoryFilter}\n        TagFilter={TagFilter ? TagFilter : 'all'}\n        AllCategories={AllCategories}\n      />\n    ) : (\n      // If it isn't, revert to 'all'\n      <QuestionCards\n        CategorySlug={CategorySlug}\n        TagSlug={TagSlug ? TagSlug : null}\n        CategoryFilter=\"all\"\n        TagFilter={TagFilter}\n        AllCategories={AllCategories}\n      />\n    )}\n  </MasonrySection>\n);\n\nexport default QuestionListings;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// Section Component:\n// This is a helper component containing base\n// Section styles shared across all Section components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\n\n// Styles\nimport { SectionInnerStyle, SectionContentStyle } from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nexport const SectionInner = ({ children }) => (\n  <SectionInnerStyle>\n    <SectionContentStyle>{children}</SectionContentStyle>\n  </SectionInnerStyle>\n);\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <HeroStrip> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Helpers\nimport { SectionContentStyle } from './../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const HeroStripStyle = styled.div`\n  padding-top: calc(${Root.Size} / 4);\n  padding-bottom: calc(${Root.Size} / 4);\n  padding-left: calc(${Root.Grid.Gutter.Left});\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.White)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nHeroStripStyle.Inner = styled(SectionContentStyle)`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n\n  .hero-strip-item {\n    position: relative;\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    padding: calc(${Root.Size} / 4) ${Root.Size};\n\n    span {\n      display: block;\n      padding-bottom: 3px;\n      &:first-child {\n        opacity: 0.4;\n        font-size: calc(${Root.ViewWidthFontSize} * 1);\n      }\n      &:last-child {\n        font-weight: bold;\n        font-size: calc(${Root.ViewWidthFontSize} * 1.3);\n      }\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: 1px;\n      opacity: 0.09;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:first-child {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n      padding-left: ${Root.Size};\n\n      &:before {\n        display: none;\n      }\n    }\n\n    &.focus {\n      a {\n        &:hover {\n          text-decoration: none;\n        }\n        span {\n          &:last-child {\n            color: ${Theme.Color.Primary};\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default HeroStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// QuestionFooter Component:\n// The QuestionFooter component.\n// Example:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Data\nimport { StaticQuery, graphql } from 'gatsby';\n\n// Components\nimport Icon from 'elements/Icons';\nimport { Link } from 'gatsby';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport MasonrySection from 'components/library/Section/MasonrySection';\nimport Block from 'components/library/Block';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport DefaultWidget from 'components/library/Widgets/Library/Default/';\nimport QuestionListings from 'components/library/QuestionListings';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Styles\nimport QuestionFooterStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Create our Categories array.\nconst BrowseCategories = () => {\n  // Helper function to dissect the data into a usable map\n  function categoryWidgets(data) {\n    let widgetArray = data.map((category, index) => {\n      return {\n        Flex: 1,\n        WidgetContent: [\n          {\n            Destination: '/learn/' + category.node.Slug,\n            Style: 'Generic',\n            Meta: {\n              Generic: {\n                BgColor: category.node.PageTheme.Color.Background,\n                BgImage: '',\n                Subhead: '',\n                Headline: category.node.Name,\n                TextColor: category.node.PageTheme.Color.Primary,\n                IconColor: category.node.PageTheme.Color.Primary,\n                IconName: category.node.Icon, // FontAwesome Icon Name\n                TintColor: '',\n                TintOpacity: '',\n                IconSize: '',\n              },\n            },\n          },\n        ],\n      };\n    });\n\n    // Define our 'View All Widget'\n    let viewAll = {\n      Flex: 1,\n      WidgetContent: [\n        {\n          Destination: '/learn/all',\n          Style: 'Generic',\n          Meta: {\n            Generic: {\n              BgColor: Theme.Color.Nightsky,\n              BgImage: '',\n              Subhead: '',\n              Headline: 'All Categories',\n              TextColor: Theme.Color.White,\n              IconColor: Theme.Color.White,\n              IconName: 'question', // FontAwesome Icon Name\n              TintColor: '',\n              TintOpacity: '',\n              IconSize: '',\n            },\n          },\n        },\n      ],\n    };\n\n    // Add our 'View All Widget' to the beginning of the array with unshift().\n    widgetArray.unshift(viewAll);\n\n    // Return our new array.\n    return widgetArray;\n  }\n\n  // Return Slider with Categories\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allQuestionCategoriesJson {\n            edges {\n              node {\n                id\n                Name\n                Icon\n                Headline\n                Slug\n                Tags {\n                  Name\n                  Icon\n                  Slug\n                }\n                Breadcrumb {\n                  Destination\n                  Label\n                }\n                PageTheme {\n                  Color {\n                    Background\n                    Primary\n                    Secondary\n                    Tertiary\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <SlideSection\n          Widgets={categoryWidgets(data.allQuestionCategoriesJson.edges)}\n          SectionSize={6}\n          Header=\"Browse Categories\"\n          Gutter={[0, 1, 1, 1]}\n          Theme={{\n            TextColor: Theme.Color.Slate,\n            BgColor: 'none',\n          }}\n          SliderSettings={{\n            slidesToShow: 4,\n            slidesToScroll: 1,\n            autoplay: false,\n            arrows: true,\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Return our footer.\nconst QuestionFooter = ({ CategoryFilter, TagFilter, HideCategories }) => (\n  <>\n    {/* ///////////// */}\n\n    <SimpleSection\n      BgColor={Theme.Color.White}\n      TextColor={Theme.Color.Nightsky}\n      Style=\"centered\"\n    >\n      <Block Style=\"centered\" Padding={[1, 0, 0, 0]} maxWidth={0.5}>\n        <h2>Not seeing your question?</h2>\n        <p className=\"p-md\">\n          Chat with an expert now or sumbit your own question\n        </p>\n        <Btn\n          IconClass=\"intercom\"\n          Label=\"Ask a question\"\n          BgColor={Theme.Color.Primary}\n          TextColor={Theme.Color.White}\n          Destination=\"/learn/all\"\n          IconPosition=\"left\"\n        />\n      </Block>\n    </SimpleSection>\n\n    {/* ///////////// */}\n\n    {HideCategories ? null : <BrowseCategories />}\n\n    {/* ///////////// */}\n\n    {/* ///////////// */}\n\n    <QuestionListings TagFilter={TagFilter} CategoryFilter={CategoryFilter} />\n\n    {/* ///////////// */}\n  </>\n);\n\nexport default QuestionFooter;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SocialStripStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SocialStripStyle = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  text-decoration: none;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n\n  /* Array-based margins utilizing root variable multiple. */\n  ${props =>\n    props.Margin\n      ? 'margin-top: calc(' + Root.Size + ' * ' + props.Margin[0] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-right: calc(' + Root.Size + ' * ' + props.Margin[1] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-bottom: calc(' + Root.Size + ' * ' + props.Margin[2] + ')'\n      : null};\n  ${props =>\n    props.Margin\n      ? 'margin-left: calc(' + Root.Size + ' * ' + props.Margin[3] + ')'\n      : null};\n\n  a {\n    color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    text-decoration: none;\n    margin-right: calc(${Theme.Base.Size.Md} * 0.8);\n    position: relative;\n    font-size: calc(${Root.Size} / 2);\n    width: calc(${Root.Size} / 2);\n    height: calc(${Root.Size} / 2);\n\n    span {\n      width: 100%;\n      height: auto;\n      font-size: calc(${Root.Size} / 2);\n      i {\n        font-size: calc(${Root.Size} / 2);\n      }\n    }\n\n    i {\n      color: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n    }\n\n    &:before {\n      content: '';\n      position: absolute;\n      background: ${props =>\n        props.TextColor ? props.TextColor : Theme.Color.Black};\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%) scale(1.8);\n      transform-origin: center center;\n      opacity: 0;\n      border-radius: 50%;\n      width: 100%;\n      height: 100%;\n    }\n\n    &:hover {\n      &:before {\n        opacity: 0.1;\n      }\n    }\n  }\n`;\n\nSocialStripStyle.Label = styled.span`\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  display: inline-flex;\n  width: auto;\n  align-items: center;\n  svg {\n    fill: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n  }\n`;\n\nexport default SocialStripStyle;\n//////////////////////////////////////////////////////////////////////\n","// SocialStrip Component:\n// The SocialStrip component, typically used in Hero components.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SocialStripStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SocialStrip = ({ TextColor, Location, Margin }) => (\n  <SocialStripStyle Margin={Margin} TextColor={TextColor}>\n    <a\n      href={'https://www.facebook.com/sharer.php?u=' + Location}\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"facebook\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://twitter.com/intent/tweet?url=' +\n        Location +\n        '&text=Test&via=Test&hashtags=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"twitter\" Color={TextColor} />\n    </a>\n    <a\n      href={\n        'https://www.linkedin.com/shareArticle?mini=true&url=' +\n        Location +\n        '&title=Test&summary=Test&source=Test'\n      }\n      target=\"_blank\"\n      rel=\"nofollow noopener noreferrer\"\n    >\n      <Icon Name=\"linkedin\" Color={TextColor} />\n    </a>\n  </SocialStripStyle>\n);\n\nexport default SocialStrip;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// Convert #HEXCODES to RGBA\n// hexToRGB('#FF0000', 0.5);\n\nconst hexToRGB = (hex, alpha) => {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\n  } else {\n    return 'rgb(' + r + ', ' + g + ', ' + b + ')';\n  }\n};\n\nexport default hexToRGB;\n","// <SimpleListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SimpleListStyle = styled.div`\n  display: flex;\n`;\n\nSimpleListStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nSimpleListStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: 0.6;\n      font-size: 1.2rem;\n      padding-bottom: calc(${Theme.Base.Size.Sm} / 2);\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default SimpleListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\n\n// Styles\nimport SimpleListStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SimpleList = ({ List, TextColor }) => (\n  <SimpleListStyle className=\"simple-list\" TextColor={TextColor}>\n    <SimpleListStyle.List TextColor={TextColor}>\n      {List.map((item, index) => {\n        return (\n          <SimpleListStyle.Item key={index}>\n            <span>{item.Label}</span>\n            <span>{item.Data}</span>\n          </SimpleListStyle.Item>\n        );\n      })}\n    </SimpleListStyle.List>\n  </SimpleListStyle>\n);\n\nexport default SimpleList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <SuggestionListStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const SuggestionListStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size} / 4);\n      font-size: 0.8rem;\n      text-transform: uppercase;\n      letter-spacing: 1px;\n\n      &:first-child {\n        opacity: 0.3;\n      }\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 0.8rem;\n          text-transform: uppercase;\n          letter-spacing: 1px;\n          font-weight: normal;\n          padding: 0 calc(${Root.Size} / 4);\n        }\n      }\n    }\n  }\n`;\n\nexport default SuggestionListStyle;\n//////////////////////////////////////////////////////////////////////\n","// SuggestionList Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport SuggestionListStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst SuggestionList = ({\n  List,\n  Label,\n  BaseUrl,\n  TextColor,\n  GradientColor,\n  Padding,\n  Affix,\n}) => (\n  <SuggestionListStyle\n    className=\"suggestion-list\"\n    GradientColor={GradientColor}\n    Padding={Padding}\n  >\n    <ul>\n      {Label ? <li>{Label}</li> : null}\n      {List.map((item, index) => (\n        <li key={index}>\n          <Btn\n            BgColor=\"none\"\n            Label={item.name}\n            Destination={\n              Affix ? BaseUrl + item.slug + Affix : BaseUrl + item.slug\n            }\n            TextColor={TextColor}\n          />\n        </li>\n      ))}\n    </ul>\n  </SuggestionListStyle>\n);\n\nexport default SuggestionList;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AwardBadgeStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardBadgeStyle = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: calc(${Root.Size} * 3);\n  height: calc(${Root.Size} * 3);\n  background: ${Theme.Color.Primary};\n  color: ${Theme.Color.White};\n  border-radius: 50%;\n  box-shadow: 0 0px 8px 0 rgba(6, 10, 92, 0.12);\n  position: relative;\n  text-align: center;\n  padding: ${Theme.Base.Size.Sm};\n\n  .img {\n    width: 50%;\n  }\n\n  span {\n    margin-top: calc(${Theme.Base.Size.Sm} * 0.75);\n    padding-top: calc(${Theme.Base.Size.Sm} * 0.75);\n    text-align: center;\n    width: 100%;\n    position: relative;\n    font-weight: bold;\n    font-size: 0.9rem;\n    line-height: 1.3;\n\n    &:before {\n      content: '';\n      position: absolute;\n      left: 50%;\n      top: 0;\n      transform: translateX(-50%);\n      height: 1px;\n      width: ${Theme.Base.Size.Md};\n      background: ${Theme.Color.White};\n    }\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    left: 3%;\n    right: 3%;\n    top: 3%;\n    bottom: 3%;\n    border: 1px solid ${Theme.Color.White};\n    border-radius: 50%;\n  }\n`;\n\nexport default AwardBadgeStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport ImgMatch from 'components/core/ImgMatch';\n\n// Styles\nimport AwardBadgeStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Text, TextColor, BgColor }) => (\n  <AwardBadgeStyle TextColor={TextColor} BgColor={BgColor}>\n    <ImgMatch src=\"logos/leafly.png\" AltText=\"Leafly\" />\n    <span>{Text}</span>\n  </AwardBadgeStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <AwardHoursStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const AwardHoursStyle = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: stretch;\n  flex: 1;\n\n  .simple-list {\n    padding-left: calc(${Root.Size} / 2);\n    margin-left: calc(${Root.Size} / 2);\n    border-left: 1px solid\n      ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n    display: flex;\n    align-items: center;\n    ul {\n      justify-content: center;\n    }\n  }\n`;\n\nAwardHoursStyle.List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.Black)};\n`;\n\nAwardHoursStyle.Item = styled.li`\n  display: block;\n  position: relative;\n  text-transform: capitalize;\n  margin-bottom: calc(${Root.Size} / 2);\n\n  span {\n    display: block;\n    &:first-child {\n      opacity: 0.6;\n      font-size: 1.2rem;\n      padding-bottom: calc(${Theme.Base.Size.Sm} / 2);\n    }\n    &:last-child {\n      font-weight: bold;\n      font-size: 1.5rem;\n    }\n  }\n`;\n\nexport default AwardHoursStyle;\n//////////////////////////////////////////////////////////////////////\n","// SimpleListComponent:\n// The SimpleList component.\n// Example: https://www.dropbox.com/s/620exg22uz5bkyy/Screenshot%202019-05-06%2016.24.58.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Icon from 'elements/Icons';\nimport AwardBadge from 'components/library/AwardBadge';\nimport SimpleList from 'components/library/SimpleList';\n\n// Styles\nimport AwardHoursStyle from './styles.scss';\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst AwardHours = ({ Hours, TextColor }) => (\n  <AwardHoursStyle TextColor={TextColor}>\n    <AwardBadge\n      Logo=\"leafly\"\n      Text=\"2018 Voted Best Boutique Dispensary\"\n      BgColor={Theme.Color.Primary}\n      TextColor={Theme.Color.White}\n    />\n    <SimpleList TextColor={TextColor} List={Hours} />\n  </AwardHoursStyle>\n);\n\nexport default AwardHours;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// SplitSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n`;\n\nSplitSectionStyle.Inner = styled.div`\n  display: flex;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: center;\n  position: relative;\n\n  .block {\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'};\n\n      /* Add left padding to first block if it's a text\n      block depending on it's flex property: */\n      ${props =>\n        props.Flex\n          ? null\n          : 'padding-left: calc(' +\n            Root.Grid.Gutter.Left +\n            ' + ' +\n            Root.Size +\n            ')'};\n    }\n\n    &:last-child {\n      /* Change width of each block based on which \n      block is first depending on it's flex property: */\n      width: ${props =>\n        props.Flex\n          ? 'calc(50% + (' + Root.Grid.Gutter.Left + '/ 2))'\n          : 'calc(50% - (' + Root.Grid.Gutter.Left + '/ 2))'};\n    }\n\n    .block-content {\n      max-width: calc(${Root.Site.Width} / 3);\n      width: 100%;\n    }\n\n    .block-img-wrap {\n      width: 100%;\n      padding-bottom: 80%;\n      overflow: hidden;\n      position: relative;\n\n      .block-img {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n\nexport default SplitSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// SplitSection Component:\n// This is a basic component for sections with.\n// fullwidth 50% areas compensating for the\n// left gutter sidebar.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Styles\nimport SplitSectionStyle from './styles.scss';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\nconst SplitSection = ({ children, Flex }) => (\n  <SplitSectionStyle>\n    <SplitSectionStyle.Inner Flex={Flex}>{children}</SplitSectionStyle.Inner>\n  </SplitSectionStyle>\n);\n\nexport default SplitSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// <PageTabsStyle> Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled, { css } from 'styled-components';\nimport { Link } from 'gatsby';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Helpers\nimport hexToRGB from 'helpers/hexToRGB';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nexport const PageTabsStyle = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    pointer-events: none;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: calc(${Root.Size} / 2);\n    z-index: 3;\n    background-image: ${props =>\n      props.GradientColor\n        ? 'linear-gradient(-90deg, ' +\n          hexToRGB(props.GradientColor, 1) +\n          ',' +\n          hexToRGB(props.GradientColor, 0.000001) +\n          ')'\n        : 'pink'};\n\n    /* hexToRGB(props.GradientColor, 1) */\n\n    /* background-image: linear-gradient(\n      -90deg,\n      rgba(25d5,255,0, 1) 20%,\n      rgba(25d5,255,0, 0) 100%\n    ); */\n  }\n\n  /* Array-based Padding utilizing Css Variable Multiples. */\n  ${props =>\n    props.Padding\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Padding[0] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-right: calc(' + Root.Size + ' * ' + props.Padding[1] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Padding[2] + ')'\n      : null};\n  ${props =>\n    props.Padding\n      ? 'padding-left: calc(' + Root.Size + ' * ' + props.Padding[3] + ')'\n      : null};\n\n  ul {\n    display: block;\n    width: 100%;\n    max-width: 100%;\n    word-wrap: none;\n    white-space: nowrap;\n    overflow-x: auto;\n    padding: calc(${Root.Size} / 4) 0;\n\n    li {\n      display: inline-block;\n      margin-right: calc(${Root.Size});\n      font-size: 1.5rem;\n\n      .btn {\n        position: relative;\n        left: 0;\n        .btn-inner {\n          height: calc(${Root.Button.Size} * 0.7);\n          font-size: 1.8rem;\n          font-weight: normal;\n          padding: 0;\n          box-shadow: none;\n          opacity: 0.6;\n\n          &:hover {\n            box-shadow: none;\n            opacity: 1;\n          }\n        }\n\n        &.active {\n          .btn-inner {\n            font-weight: bold;\n            opacity: 1;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTabsStyle;\n//////////////////////////////////////////////////////////////////////\n","// PageTabs Component:\n// This is for listing out suggestions with an optional label in the front.\n// Reference: https://www.dropbox.com/s/qvn6rohf52unkpv/Screenshot%202019-05-02%2017.19.11.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Styles\nimport PageTabsStyle from './styles.scss';\n\n// Components\nimport Btn from 'components/library/Btn/';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Our nearby locations component\nconst PageTabs = ({\n  List,\n  Label,\n  Location,\n  BaseUrl,\n  TextColor,\n  Padding,\n  Affix,\n}) => {\n  return (\n    <PageTabsStyle className=\"page-tabs\" Padding={Padding}>\n      <ul>\n        {List.map((item, index) => {\n          // Creating slugs.\n          const DestinationPath = Affix\n            ? BaseUrl + item.slug + Affix\n            : BaseUrl + item.slug;\n          const LocationPath = Location.pathname;\n          const LocationPathWithSlash = Location.pathname + '/';\n\n          // Helper function to match our locations.\n          function matchPath(destination, currentLocation) {\n            // If location & destination match:\n            if (destination == currentLocation) {\n              let className = 'active';\n              return className;\n            } else {\n              // Check and see if our destination matches without the\n              // last `/` of the url. I.e. `locations/reno vs locations/reno/`\n              if (destination == currentLocation.slice(0, -1)) {\n                let className = 'active';\n                return className;\n              } else {\n                // Then inactive:\n                let className = 'inactive';\n                return 'inactive';\n              }\n            }\n          }\n\n          // Return PageTabs.\n          return (\n            <li key={index}>\n              <Btn\n                AddClass={matchPath(DestinationPath, LocationPathWithSlash)}\n                BgColor=\"none\"\n                Label={item.name}\n                Destination={DestinationPath}\n                TextColor={TextColor}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </PageTabsStyle>\n  );\n};\n\nexport default PageTabs;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n","// templates/Learn.js:\n// This is the template for Learn pages.\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\n\n// Components\nimport Layout from 'components/core/Layout';\nimport { SubLevelPageContent, SubLevelPage } from 'templates/SubLevelPage';\nimport SimpleHero from 'components/library/Hero/SimpleHero';\nimport AwardHours from 'components/library/AwardHours';\nimport WidgetSection from 'components/library/Section/WidgetSection';\nimport SimpleSection from 'components/library/Section/SimpleSection';\nimport SlideSection from 'components/library/Section/SlideSection';\nimport QuestionListings from 'components/library/QuestionListings';\n\n//// Misc. Components\nimport Bread from 'components/library/Breadcrumb';\nimport SocialStrip from 'components/library/SocialStrip';\nimport QuestionFooter from 'components/library/QuestionFooter';\nimport Btn from 'components/library/Btn/';\nimport SuggestionList from 'components/library/SuggestionList';\nimport PageTabs from 'components/library/PageTabs';\nimport SimpleList from 'components/library/SimpleList';\n\n// Elements\nimport Block from 'components/library/Block';\n\n// Constants\nimport { Theme } from 'constants/Theme';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// LocationPageWrapper component for page theming.\nconst LocationPageWrapper = ({\n  children,\n  Headline,\n  LocationData,\n  Location,\n}) => {\n  const LocationTheme = LocationData.about.PageTheme;\n\n  return (\n    <Layout\n      BgColor={LocationTheme.Color.Background}\n      PrimaryColor={LocationTheme.Color.Primary}\n      SecondaryColor={LocationTheme.Color.Secondary}\n      TertiaryColor={LocationTheme.Color.Tertiary}\n    >\n      <SubLevelPage\n        BgColor={LocationTheme.Color.Background}\n        PrimaryColor={LocationTheme.Color.Primary}\n        SecondaryColor={LocationTheme.Color.Secondary}\n        TertiaryColor={LocationTheme.Color.Tertiary}\n      >\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[2, 0, 1.45, 0]}\n          Flex=\"row\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <Block maxWidth={0.5}>\n            {/* <Bread\n              Crumbs={[\n                {\n                  Destination: 'locations/',\n                  Label: 'Locations',\n                },\n                {\n                  Destination: 'locations/',\n                  Label: LocationData.geography.state,\n                },\n                {\n                  Destination:\n                    'locations/' +\n                    LocationData.geography.state.toLowerCase() +\n                    '/' +\n                    LocationData.slug,\n                  Label: LocationData.name,\n                },\n              ]}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n            <h1 className=\"h2\">{LocationData.about.headline}</h1>\n            <Btn\n              IconClass=\"plus\"\n              Label=\"View Menu\"\n              BgColor={LocationTheme.Color.Primary}\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={\n                '/menu/' +\n                LocationData.geography.state.toLowerCase() +\n                '/' +\n                LocationData.slug\n              }\n              IconPosition=\"left\"\n              IconFas\n            />\n            <Btn\n              AddClass=\"btn-secondary\"\n              IconClass=\"map-marker-alt\"\n              Label={LocationData.contactDetails.location.address}\n              BgColor=\"none\"\n              TextColor={LocationTheme.Color.Tertiary}\n              Destination={LocationData.meta.maps}\n              IconPosition=\"left\"\n              External\n              IconFas\n            />\n            {/* <SocialStrip\n              Margin={[0.5, 0, 0, 0]}\n              Location={Location}\n              TextColor={LocationTheme.Color.Primary}\n            /> */}\n          </Block>\n          <Block Flex=\"row\" maxWidth={0.5}>\n            <AwardHours\n              TextColor={LocationTheme.Color.Primary}\n              Hours={[\n                { Label: 'Mon - Sat', Data: '9am - 9pm' },\n                { Label: 'Sunday', Data: '10am - 6pm' },\n              ]}\n            />\n          </Block>\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n        >\n          <PageTabs\n            Location={Location}\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={[\n              { name: 'About', slug: '' },\n              { name: 'Specials', slug: 'specials' },\n              { name: 'Menu', slug: 'menu' },\n            ]}\n            TextColor={LocationTheme.Color.Primary}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        <SimpleHero\n          Padding={[0, 0, 0, 0]}\n          Flex=\"column\"\n          TextColor={LocationTheme.Color.Primary}\n          Tint={0}\n          TintBorder\n        >\n          <SuggestionList\n            BaseUrl={\n              '/locations' +\n              '/' +\n              LocationData.geography.state.toLowerCase() +\n              '/' +\n              LocationData.slug +\n              '/'\n            }\n            List={LocationData.nearby}\n            Affix=\"/menu\"\n            Label=\"Nearby\"\n            TextColor={LocationTheme.Color.Primary}\n            GradientColor={LocationTheme.Color.Background}\n            Padding={[0, 0, 0, 0]}\n          />\n        </SimpleHero>\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n\n        {/* Begin page content. */}\n\n        {/* ///////////// */}\n\n        {/* ///////////// */}\n        <SubLevelPageContent\n          BgColor={Theme.Color.Background}\n          TextColor={Theme.Color.Nightsky}\n        >\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n\n          {children}\n\n          {/* ///////////// */}\n\n          {/* ///////////// */}\n        </SubLevelPageContent>\n        {/* End page content. */}\n      </SubLevelPage>\n    </Layout>\n  );\n};\n\nexport default LocationPageWrapper;\n","// StickyScrollSection Styles:\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport styled from 'styled-components';\n\n// Helpers\nimport {\n  SectionInnerStyle,\n  SectionContentStyle,\n} from './../../Section/styles.scss';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\n\n// Begin Styles\n//////////////////////////////////////////////////////////////////////\n\nconst StickyScrollSectionStyle = styled.div`\n  width: 100%;\n  margin: 0;\n  background: ${props => (props.BgColor ? props.BgColor : Theme.Color.Primary)};\n  color: ${props => (props.TextColor ? props.TextColor : Theme.Color.White)};\n`;\n\nStickyScrollSectionStyle.Inner = styled(SectionInnerStyle)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  position: relative;\n\n  /* Array-based gutters utilizing root variable multiple. */\n  ${props =>\n    props.Gutter\n      ? 'padding-top: calc(' + Root.Size + ' * ' + props.Gutter[0] + ')'\n      : 'padding-top: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-right: calc(' +\n        Root.Grid.Gutter.Right +\n        ' * ' +\n        props.Gutter[1] +\n        ')'\n      : null};\n  ${props =>\n    props.Gutter\n      ? 'padding-bottom: calc(' + Root.Size + ' * ' + props.Gutter[2] + ')'\n      : 'padding-bottom: ' + Root.Size};\n  ${props =>\n    props.Gutter\n      ? 'padding-left: calc(' +\n        Root.Grid.Gutter.Left +\n        ' * ' +\n        props.Gutter[3] +\n        ')'\n      : null};\n\n  /* Gatsby-image based background images. */\n  .section-img {\n    position: ${props => (props.FluidHeight ? 'relative' : 'absolute')};\n    width: ${props => (props.FluidHeight ? '100%' : 'auto')};\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    overflow: hidden;\n    ${props => (props.BgTint ? 'opacity: ' + props.BgTint + ';' : null)}\n    img {\n      height: 100%;\n    }\n  }\n`;\n\nStickyScrollSectionStyle.Content = styled(SectionContentStyle)`\n  margin: 0 auto;\n  flex-direction: ${props => (props.Flex ? props.Flex : 'row')};\n  justify-content: space-between;\n  align-items: stretch;\n  z-index: 2;\n  width: 100%;\n\n  /* Hide this section for fluid height of image. */\n  display: ${props => (props.FluidHeight ? 'none' : 'flex')};\n\n  .block {\n    .gallery-img {\n      padding: 0 0 calc(${Root.Size} / 2) 0;\n\n      &:last-child {\n        padding: 0;\n      }\n    }\n\n    &.sticky-block {\n      .block-content {\n        position: sticky;\n        top: calc(${Root.Nav.Size});\n        padding-bottom: ${Root.Size};\n        height: calc(100vh - ${Root.Nav.Size});\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n    }\n  }\n\n  .txt-caption {\n    font-size: 1.4rem;\n    font-weight: bold;\n    color: ${Theme.Color.Slate};\n    display: block;\n    margin-bottom: calc(${Theme.Base.Size.Sm});\n  }\n`;\n\nexport default StickyScrollSectionStyle;\n\n//////////////////////////////////////////////////////////////////////\n// End Styles\n","// StickyScrollSection Component:\n// Desired outcome: https://www.dropbox.com/s/brll80qg306ywmk/Screenshot%202019-05-06%2015.01.12.png?dl=0\n\n// Imports\n//////////////////////////////////////////////////////////////////////\n\n// Core\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\n// Components\nimport ImgMatch from 'components/core/ImgMatch';\nimport ImgQuery from 'components/core/ImgQuery';\nimport Block from 'components/library/Block';\nimport Btn from 'components/library/Btn';\n\n// Constants\nimport { Theme, Root } from 'constants/Theme';\nimport { SectionContent } from './../../Section';\n\n// Styles\nimport StickyScrollSectionStyle from './styles.scss';\nimport { createGlobalStyle } from 'styled-components';\n\n// Begin Component\n//////////////////////////////////////////////////////////////////////\n\n// Enable Overflows\nexport const ReleaseOverflow = createGlobalStyle`\n  html, body {\n    overflow: visible;\n  }\n\n  .wrapper {\n    overflow: visible;\n  }\n`;\n\n// Render Element\nconst StickyScrollSection = ({\n  BgColor,\n  Style,\n  TextColor,\n  Content,\n  Gallery,\n  GalleryQueries,\n  Gutter,\n  Flex,\n  Button,\n}) => (\n  <StickyScrollSectionStyle\n    Style={Style}\n    BgColor={BgColor}\n    TextColor={TextColor}\n  >\n    <ReleaseOverflow />\n    <StickyScrollSectionStyle.Inner Gutter={Gutter}>\n      <StickyScrollSectionStyle.Content Flex={Flex} className=\"sticky-section\">\n        <Block Padding={[0, 1, 0, 1]} className=\"sticky-block\">\n          <span className=\"txt-caption\">{Content.Subheadline}</span>\n          <h2>{Content.Headline}</h2>\n          <p className=\"p-md\">{Content.Body}</p>\n\n          {/* Check if a Btn exists, display if so. */}\n          {Button ? (\n            <Btn\n              Label={Button.Label}\n              BgColor={Button.BgColor}\n              TextColor={Button.TextColor}\n              Destination={Button.Destination}\n              IconPosition=\"left\"\n              IconClass={Button.IconClass ? Button.IconClass : null}\n              IconFas\n            />\n          ) : null}\n        </Block>\n        <Block Padding={[0, 1, 0, 1]}>\n          {Gallery\n            ? Gallery.map((Img, index) => {\n                return (\n                  <div key=\"index\" className=\"gallery-img\">\n                    <ImgMatch src={Img.Src} AltText={Img.Alt} />\n                  </div>\n                );\n              })\n            : null}\n          {GalleryQueries\n            ? GalleryQueries.map((query, index) => {\n                return (\n                  <div key=\"index\" className=\"gallery-img\">\n                    <ImgQuery src={query.Fluid} AltText={query.Alt} />\n                  </div>\n                );\n              })\n            : null}\n        </Block>\n      </StickyScrollSectionStyle.Content>\n    </StickyScrollSectionStyle.Inner>\n  </StickyScrollSectionStyle>\n);\n\nexport default StickyScrollSection;\n\n//////////////////////////////////////////////////////////////////////\n// End Component\n"],"sourceRoot":""}